 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 180
    4                      ; Text size: 4700
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48656c6c	.ascii "Hello World\000"
   82  00003004  6f20576f	
   82  00003008  726c6400	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  496e636f	.ascii "Incorrect number of arguments\n\000"
   85  00003010  72726563	
   85  00003014  74206e75	
   85  00003018  6d626572	
   85  0000301c  206f6620	
   85  00003020  61726775	
   85  00003024  6d656e74	
   85  00003028  730a00  	
   86  0000302b          	.align 2
   87  0000302c          	LC2_LF0:
   88  0000302c  436f756c	.ascii "Could not map memory addreses\n\000"
   88  00003030  64206e6f	
   88  00003034  74206d61	
   88  00003038  70206d65	
   88  0000303c  6d6f7279	
   88  00003040  20616464	
   88  00003044  72657365	
   88  00003048  730a00  	
   89  0000304b          	.align 2
   90  0000304c          	LC3_LF0:
   91  0000304c  4661696c	.ascii "Failed to acquire lock\n\000"
   91  00003050  65642074	
   91  00003054  6f206163	
   91  00003058  71756972	
   91  0000305c  65206c6f	
   91  00003060  636b0a00	
   92  00003064          	.align 2
   93  00003064          	LC4_LF0:
   94  00003064  50726f64	.ascii "Producer %d inserted: %c\n\000"
   94  00003068  75636572	
   94  0000306c  20256420	
   94  00003070  696e7365	
   94  00003074  72746564	
   94  00003078  3a202563	
   94  0000307c  0a00    	
   95  0000307e          	.align 2
   96  00003080          	LC5_LF0:
   97  00003080  4661696c	.ascii "Failed to release lock\n\000"
   97  00003084  65642074	
   97  00003088  6f207265	
   97  0000308c  6c656173	
   97  00003090  65206c6f	
   97  00003094  636b0a00	
   98  00003098          	.align 2
   99  00003098          	LC6_LF0:
  100  00003098  53656d61	.ascii "Semaphore failed to update\n\000"
  100  0000309c  70686f72	
  100  000030a0  65206661	
  100  000030a4  696c6564	
  100  000030a8  20746f20	
  100  000030ac  75706461	
  100  000030b0  74650a00	
  101  000030b4          	.text
  102  000010d4          	.align 2
  103  000010d4          	.proc _main
  104  000010d4          	.global _main
  105  000010d4          	_main:
  106                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  107  000010d4  afbefffc	sw	-4(r29),r30; push fp
  108  000010d8  001df020	add	r30,r0,r29; fp = sp
  109  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  110  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  111  000010e4  8fc20000	lw	r2,(r30)
  112  000010e8  8fc30004	lw	r3,4(r30)
  113  000010ec  0c001164	jal	___main
  114  000010f0  54000000	nop; not filled.
  115  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  116  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  117  000010fc  802b0000	lb	r11,(r1)
  118  00001100  a3cbffe8	sb	-24(r30),r11
  119  00001104  802b0001	lb	r11,1(r1)
  120  00001108  a3cbffe9	sb	-23(r30),r11
  121  0000110c  802b0002	lb	r11,2(r1)
  122  00001110  a3cbffea	sb	-22(r30),r11
  123  00001114  802b0003	lb	r11,3(r1)
  124  00001118  a3cbffeb	sb	-21(r30),r11
  125  0000111c  802b0004	lb	r11,4(r1)
  126  00001120  a3cbffec	sb	-20(r30),r11
  127  00001124  802b0005	lb	r11,5(r1)
  128  00001128  a3cbffed	sb	-19(r30),r11
  129  0000112c  802b0006	lb	r11,6(r1)
  130  00001130  a3cbffee	sb	-18(r30),r11
  131  00001134  802b0007	lb	r11,7(r1)
  132  00001138  a3cbffef	sb	-17(r30),r11
  133  0000113c  802b0008	lb	r11,8(r1)
  134  00001140  a3cbfff0	sb	-16(r30),r11
  135  00001144  802b0009	lb	r11,9(r1)
  136  00001148  a3cbfff1	sb	-15(r30),r11
  137  0000114c  802b000a	lb	r11,10(r1)
  138  00001150  a3cbfff2	sb	-14(r30),r11
  139  00001154  8021000b	lb	r1,11(r1)
  140  00001158  a3c1fff3	sb	-13(r30),r1
  141  0000115c  23bdfff8	addi	r29,r29,#-8
  142  00001160  23c1ffe8	addi	r1,r30,#-24
  143  00001164  afa10000	sw	(r29),r1
  144  00001168  0c000810	jal	_dstrlen
  145  0000116c  54000000	nop; not filled.
  146  00001170  00014820	add	r9,r0,r1
  147  00001174  20060000	addi	r6,r0,#0
  148  00001178  23bd0008	addi	r29,r29,#8
  149  0000117c  64410004	snei	r1,r2,#4
  150  00001180  10200028	beqz	r1,L14_LF0
  151  00001184  54000000	nop; not filled.
  152  00001188  23bdfff8	addi	r29,r29,#-8
  153  0000118c  3c0b0000	lhi	r11,((LC1_LF0)>>16)&0xffff
  154  00001190  256b300c	addui	r11,r11,(LC1_LF0)&0xffff
  155  00001194  afab0000	sw	(r29),r11
  156  00001198  0c0002b0	jal	_Printf
  157  0000119c  54000000	nop; not filled.
  158  000011a0  0c00035c	jal	_Exit
  159  000011a4  54000000	nop; not filled.
  160  000011a8  23bd0008	addi	r29,r29,#8
  161  000011ac          	L14_LF0:
  162  000011ac  23bdfff0	addi	r29,r29,#-16
  163  000011b0  8c6b0004	lw	r11,4(r3)
  164  000011b4  afab0000	sw	(r29),r11
  165  000011b8  200b0000	addi	r11,r0,#0
  166  000011bc  afab0004	sw	4(r29),r11
  167  000011c0  200b000a	addi	r11,r0,#10
  168  000011c4  afab0008	sw	8(r29),r11
  169  000011c8  0c000be0	jal	_dstrtol
  170  000011cc  54000000	nop; not filled.
  171  000011d0  00011020	add	r2,r0,r1
  172  000011d4  8c6b0008	lw	r11,8(r3)
  173  000011d8  afab0000	sw	(r29),r11
  174  000011dc  200b0000	addi	r11,r0,#0
  175  000011e0  afab0004	sw	4(r29),r11
  176  000011e4  200b000a	addi	r11,r0,#10
  177  000011e8  afab0008	sw	8(r29),r11
  178  000011ec  0c000bbc	jal	_dstrtol
  179  000011f0  54000000	nop; not filled.
  180  000011f4  00015020	add	r10,r0,r1
  181  000011f8  8c63000c	lw	r3,12(r3)
  182  000011fc  afa30000	sw	(r29),r3
  183  00001200  200b0000	addi	r11,r0,#0
  184  00001204  afab0004	sw	4(r29),r11
  185  00001208  200b000a	addi	r11,r0,#10
  186  0000120c  afab0008	sw	8(r29),r11
  187  00001210  0c000b98	jal	_dstrtol
  188  00001214  54000000	nop; not filled.
  189  00001218  00013820	add	r7,r0,r1
  190  0000121c  afa20000	sw	(r29),r2
  191  00001220  0c000258	jal	_shmat
  192  00001224  54000000	nop; not filled.
  193  00001228  00012820	add	r5,r0,r1
  194  0000122c  23bd0010	addi	r29,r29,#16
  195  00001230  64a10000	snei	r1,r5,#0
  196  00001234  14200028	bnez	r1,L15_LF0
  197  00001238  54000000	nop; not filled.
  198  0000123c  23bdfff8	addi	r29,r29,#-8
  199  00001240  3c0b0000	lhi	r11,((LC2_LF0)>>16)&0xffff
  200  00001244  256b302c	addui	r11,r11,(LC2_LF0)&0xffff
  201  00001248  afab0000	sw	(r29),r11
  202  0000124c  0c0001fc	jal	_Printf
  203  00001250  54000000	nop; not filled.
  204  00001254  0c0002a8	jal	_Exit
  205  00001258  54000000	nop; not filled.
  206  0000125c  23bd0008	addi	r29,r29,#8
  207  00001260          	L15_LF0:
  208  00001260  00c9082a	slt	r1,r6,r9
  209  00001264  10200150	beqz	r1,L17_LF0
  210  00001268  54000000	nop; not filled.
  211  0000126c  2008000b	addi	r8,r0,#11
  212  00001270          	L18_LF0:
  213  00001270  23bdfff8	addi	r29,r29,#-8
  214  00001274  afa70000	sw	(r29),r7
  215  00001278  0c00023c	jal	_lock_acquire
  216  0000127c  54000000	nop; not filled.
  217  00001280  23bd0008	addi	r29,r29,#8
  218  00001284  64210001	snei	r1,r1,#1
  219  00001288  10200028	beqz	r1,L19_LF0
  220  0000128c  54000000	nop; not filled.
  221  00001290  23bdfff8	addi	r29,r29,#-8
  222  00001294  3c0b0000	lhi	r11,((LC3_LF0)>>16)&0xffff
  223  00001298  256b304c	addui	r11,r11,(LC3_LF0)&0xffff
  224  0000129c  afab0000	sw	(r29),r11
  225  000012a0  0c0001a8	jal	_Printf
  226  000012a4  54000000	nop; not filled.
  227  000012a8  0c000254	jal	_Exit
  228  000012ac  54000000	nop; not filled.
  229  000012b0  23bd0008	addi	r29,r29,#8
  230  000012b4          	L19_LF0:
  231  000012b4  8ca4000c	lw	r4,12(r5)
  232  000012b8  20830001	addi	r3,r4,#1
  233  000012bc  00600035	movi2fp	f0,r3
  234  000012c0  01000835	movi2fp	f1,r8
  235  000012c4  0401000f	div	f0,f0,f1
  236  000012c8  00001034	movfp2i	r2,f0
  237  000012cc  50410001	slli	r1,r2,#0x1
  238  000012d0  00220820	add	r1,r1,r2
  239  000012d4  50210002	slli	r1,r1,#0x2
  240  000012d8  00220822	sub	r1,r1,r2
  241  000012dc  00611022	sub	r2,r3,r1
  242  000012e0  8ca10010	lw	r1,16(r5)
  243  000012e4  00410828	seq	r1,r2,r1
  244  000012e8  1420007c	bnez	r1,L21_LF0
  245  000012ec  54000000	nop; not filled.
  246  000012f0  00a41020	add	r2,r5,r4
  247  000012f4  23c1ffe8	addi	r1,r30,#-24
  248  000012f8  00262020	add	r4,r1,r6
  249  000012fc  808b0000	lb	r11,(r4)
  250  00001300  a04b0000	sb	(r2),r11
  251  00001304  8ca1000c	lw	r1,12(r5)
  252  00001308  20230001	addi	r3,r1,#1
  253  0000130c  00600035	movi2fp	f0,r3
  254  00001310  01000835	movi2fp	f1,r8
  255  00001314  0401000f	div	f0,f0,f1
  256  00001318  00001034	movfp2i	r2,f0
  257  0000131c  50410001	slli	r1,r2,#0x1
  258  00001320  00220820	add	r1,r1,r2
  259  00001324  50210002	slli	r1,r1,#0x2
  260  00001328  00220822	sub	r1,r1,r2
  261  0000132c  00610822	sub	r1,r3,r1
  262  00001330  aca1000c	sw	12(r5),r1
  263  00001334  0c000120	jal	_getpid
  264  00001338  54000000	nop; not filled.
  265  0000133c  23bdfff0	addi	r29,r29,#-16
  266  00001340  3c0b0000	lhi	r11,((LC4_LF0)>>16)&0xffff
  267  00001344  256b3064	addui	r11,r11,(LC4_LF0)&0xffff
  268  00001348  afab0000	sw	(r29),r11
  269  0000134c  afa10004	sw	4(r29),r1
  270  00001350  90810000	lbu	r1,(r4)
  271  00001354  afa10008	sw	8(r29),r1
  272  00001358  0c0000f0	jal	_Printf
  273  0000135c  54000000	nop; not filled.
  274  00001360  20c60001	addi	r6,r6,#1
  275  00001364  23bd0010	addi	r29,r29,#16
  276  00001368          	L21_LF0:
  277  00001368  23bdfff8	addi	r29,r29,#-8
  278  0000136c  afa70000	sw	(r29),r7
  279  00001370  0c000150	jal	_lock_release
  280  00001374  54000000	nop; not filled.
  281  00001378  23bd0008	addi	r29,r29,#8
  282  0000137c  64210001	snei	r1,r1,#1
  283  00001380  10200028	beqz	r1,L16_LF0
  284  00001384  54000000	nop; not filled.
  285  00001388  23bdfff8	addi	r29,r29,#-8
  286  0000138c  3c0b0000	lhi	r11,((LC5_LF0)>>16)&0xffff
  287  00001390  256b3080	addui	r11,r11,(LC5_LF0)&0xffff
  288  00001394  afab0000	sw	(r29),r11
  289  00001398  0c0000b0	jal	_Printf
  290  0000139c  54000000	nop; not filled.
  291  000013a0  0c00015c	jal	_Exit
  292  000013a4  54000000	nop; not filled.
  293  000013a8  23bd0008	addi	r29,r29,#8
  294  000013ac          	L16_LF0:
  295  000013ac  00c9082a	slt	r1,r6,r9
  296  000013b0  1420febc	bnez	r1,L18_LF0
  297  000013b4  54000000	nop; not filled.
  298  000013b8          	L17_LF0:
  299  000013b8  23bdfff8	addi	r29,r29,#-8
  300  000013bc  afaa0000	sw	(r29),r10
  301  000013c0  0c0000dc	jal	_sem_signal
  302  000013c4  54000000	nop; not filled.
  303  000013c8  23bd0008	addi	r29,r29,#8
  304  000013cc  64210001	snei	r1,r1,#1
  305  000013d0  10200028	beqz	r1,L24_LF0
  306  000013d4  54000000	nop; not filled.
  307  000013d8  23bdfff8	addi	r29,r29,#-8
  308  000013dc  3c0b0000	lhi	r11,((LC6_LF0)>>16)&0xffff
  309  000013e0  256b3098	addui	r11,r11,(LC6_LF0)&0xffff
  310  000013e4  afab0000	sw	(r29),r11
  311  000013e8  0c000060	jal	_Printf
  312  000013ec  54000000	nop; not filled.
  313  000013f0  0c00010c	jal	_Exit
  314  000013f4  54000000	nop; not filled.
  315  000013f8  23bd0008	addi	r29,r29,#8
  316  000013fc          	L24_LF0:
  317  000013fc  0c000e48	jal	_exit
  318  00001400  54000000	nop
  319  00001404          	.endproc _main
  320                      ;;;
  321                      ;;; Stub functions for DLX traps.
  322                      ;;;
  323                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  324                      ;;;
  325                      ;;; The traps such as Open and Close
  326                      ;;; (note the capital letters) are for use by user programs.  The traps
  327                      ;;; with names such as open and close (lower case) are for use by the OS.
  328                      ;;;
  331  00001404          	.align 2
  333                      ;;; The following are the traps to be used by user-level programs
  334                      ;;;
  336  00001404          	.align 2
  337  00001404          	.proc _Open
  338  00001404          	.global _Open
  339  00001404          	_Open:
  340                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  341                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  342                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  343  00001404  44000213	trap	#0x213
  344  00001408  4be00000	jr	r31
  345  0000140c  54000000	nop
  346  00001410          	.endproc _Open
  348  00001410          	.proc _Close
  349  00001410          	.global _Close
  350  00001410          	_Close:
  351  00001410  44000214	trap	#0x214
  352  00001414  4be00000	jr	r31
  353  00001418  54000000	nop
  354  0000141c          	.endproc _Close
  356  0000141c          	.proc _Read
  357  0000141c          	.global _Read
  358  0000141c          	_Read:
  359  0000141c  44000210	trap	#0x210
  360  00001420  4be00000	jr	r31
  361  00001424  54000000	nop
  362  00001428          	.endproc _Read
  364  00001428          	.proc _Write
  365  00001428          	.global _Write
  366  00001428          	_Write:
  367  00001428  44000211	trap	#0x211
  368  0000142c  4be00000	jr	r31
  369  00001430  54000000	nop
  370  00001434          	.endproc _Write
  372  00001434          	.proc _Lseek
  373  00001434          	.global _Lseek
  374  00001434          	_Lseek:
  375  00001434  44000212	trap	#0x212
  376  00001438  4be00000	jr	r31
  377  0000143c  54000000	nop
  378  00001440          	.endproc _Lseek
  380  00001440          	.proc _Putchar
  381  00001440          	.global _Putchar
  382  00001440          	_Putchar:
  383  00001440  44000280	trap	#0x280
  384  00001444  4be00000	jr	r31
  385  00001448  54000000	nop
  386  0000144c          	.endproc _Putchar
  388  0000144c          	.proc _Printf
  389  0000144c          	.global _Printf
  390  0000144c          	_Printf:
  391  0000144c  44000201	trap	#0x201
  392  00001450  4be00000	jr	r31
  393  00001454  54000000	nop
  394  00001458          	.endproc _Printf
  396  00001458          	.proc _getpid
  397  00001458          	.global _getpid
  398  00001458          	_getpid:
  399  00001458  44000431	trap	#0x431
  400  0000145c  4be00000	jr	r31
  401  00001460  54000000	nop
  402  00001464          	.endproc _getpid
  404  00001464          	.proc _process_create
  405  00001464          	.global _process_create
  406  00001464          	_process_create:
  407  00001464  44000432	trap	#0x432
  408  00001468  4be00000	jr	r31
  409  0000146c  54000000	nop
  410  00001470          	.endproc _process_create
  412  00001470          	.proc _shmget
  413  00001470          	.global _shmget
  414  00001470          	_shmget:
  415  00001470  44000440	trap	#0x440
  416  00001474  4be00000	jr	r31
  417  00001478  54000000	nop
  418  0000147c          	.endproc _shmget
  420  0000147c          	.proc _shmat
  421  0000147c          	.global _shmat
  422  0000147c          	_shmat:
  423  0000147c  44000441	trap	#0x441
  424  00001480  4be00000	jr	r31
  425  00001484  54000000	nop
  426  00001488          	.endproc _shmat
  428  00001488          	.proc _sem_create
  429  00001488          	.global _sem_create
  430  00001488          	_sem_create:
  431  00001488  44000450	trap	#0x450
  432  0000148c  4be00000	jr	r31
  433  00001490  54000000	nop
  434  00001494          	.endproc _sem_create
  436  00001494          	.proc _sem_wait
  437  00001494          	.global _sem_wait
  438  00001494          	_sem_wait:
  439  00001494  44000451	trap	#0x451
  440  00001498  4be00000	jr	r31
  441  0000149c  54000000	nop
  442  000014a0          	.endproc _sem_wait
  444  000014a0          	.proc _sem_signal
  445  000014a0          	.global _sem_signal
  446  000014a0          	_sem_signal:
  447  000014a0  44000452	trap	#0x452
  448  000014a4  4be00000	jr	r31
  449  000014a8  54000000	nop
  450  000014ac          	.endproc _sem_signal
  452  000014ac          	.proc _lock_create
  453  000014ac          	.global _lock_create
  454  000014ac          	_lock_create:
  455  000014ac  44000453	trap	#0x453
  456  000014b0  4be00000	jr	r31
  457  000014b4  54000000	nop
  458  000014b8          	.endproc _lock_create
  460  000014b8          	.proc _lock_acquire
  461  000014b8          	.global _lock_acquire
  462  000014b8          	_lock_acquire:
  463  000014b8  44000454	trap	#0x454
  464  000014bc  4be00000	jr	r31
  465  000014c0  54000000	nop
  466  000014c4          	.endproc _lock_acquire
  468  000014c4          	.proc _lock_release
  469  000014c4          	.global _lock_release
  470  000014c4          	_lock_release:
  471  000014c4  44000455	trap	#0x455
  472  000014c8  4be00000	jr	r31
  473  000014cc  54000000	nop
  474  000014d0          	.endproc _lock_release
  476  000014d0          	.proc _cond_create
  477  000014d0          	.global _cond_create
  478  000014d0          	_cond_create:
  479  000014d0  44000456	trap	#0x456
  480  000014d4  4be00000	jr	r31
  481  000014d8  54000000	nop
  482  000014dc          	.endproc _cond_create
  484  000014dc          	.proc _cond_wait
  485  000014dc          	.global _cond_wait
  486  000014dc          	_cond_wait:
  487  000014dc  44000457	trap	#0x457
  488  000014e0  4be00000	jr	r31
  489  000014e4  54000000	nop
  490  000014e8          	.endproc _cond_wait
  492  000014e8          	.proc _cond_signal
  493  000014e8          	.global _cond_signal
  494  000014e8          	_cond_signal:
  495  000014e8  44000458	trap	#0x458
  496  000014ec  4be00000	jr	r31
  497  000014f0  54000000	nop
  498  000014f4          	.endproc _cond_signal
  500  000014f4          	.proc _cond_broadcast
  501  000014f4          	.global _cond_broadcast
  502  000014f4          	_cond_broadcast:
  503  000014f4  44000455	trap	#0x455
  504  000014f8  4be00000	jr	r31
  505  000014fc  54000000	nop
  506  00001500          	.endproc _cond_broadcast
  508  00001500          	.proc _Exit
  509  00001500          	.global _Exit
  510  00001500          	_Exit:
  511  00001500  44000500	trap	#0x500
  512  00001504  4be00000	jr	r31
  513  00001508  54000000	nop
  514  0000150c          	.endproc _Exit
  515                      ; Compiled by GCC
  517  0000150c          	.align 2
  518  0000150c          	.proc _isspace
  519  0000150c          	.global _isspace
  520  0000150c          	_isspace:
  521                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  522  0000150c  afbefffc	sw	-4(r29),r30; push fp
  523  00001510  001df020	add	r30,r0,r29; fp = sp
  524  00001514  afbffff8	sw	-8(r29),r31; push ret addr
  525  00001518  2fbd0018	subui	r29,r29,#24; alloc local storage
  526  0000151c  afa20000	sw	0(r29),r2
  527  00001520  afa30004	sw	4(r29),r3
  528  00001524  afa40008	sw	8(r29),r4
  529  00001528  83c20003	lb	r2,3(r30)
  530  0000152c  20010000	addi	r1,r0,#0
  531  00001530  304300ff	andi	r3,r2,#0x00ff
  532  00001534  60640020	seqi	r4,r3,#32
  533  00001538  1480002c	bnez	r4,L3_LF2
  534  0000153c  54000000	nop; delay slot nop
  535  00001540  304300ff	andi	r3,r2,#0x00ff
  536  00001544  60640009	seqi	r4,r3,#9
  537  00001548  1480001c	bnez	r4,L3_LF2
  538  0000154c  54000000	nop; delay slot nop
  539  00001550  304300ff	andi	r3,r2,#0x00ff
  540  00001554  6064000a	seqi	r4,r3,#10
  541  00001558  1480000c	bnez	r4,L3_LF2
  542  0000155c  54000000	nop; delay slot nop
  543  00001560  08000008	j	L2_LF2
  544  00001564  54000000	nop; delay slot nop
  545  00001568          	L3_LF2:
  546  00001568  20010001	addi	r1,r0,#1
  547  0000156c          	L2_LF2:
  548  0000156c  08000004	j	L1_LF2
  549  00001570  54000000	nop; delay slot nop
  550  00001574          	L1_LF2:
  551  00001574  8fa20000	lw	r2,0(r29)
  552  00001578  8fa30004	lw	r3,4(r29)
  553  0000157c  8fa40008	lw	r4,8(r29)
  554  00001580  8fdffff8	lw	r31,-8(r30)
  555  00001584  001ee820	add	r29,r0,r30
  556  00001588  8fdefffc	lw	r30,-4(r30)
  557  0000158c  4be00000	jr	r31
  558  00001590  54000000	nop
  559  00001594          	.endproc _isspace
  560  00001594          	.align 2
  561  00001594          	.proc _isxdigit
  562  00001594          	.global _isxdigit
  563  00001594          	_isxdigit:
  564                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  565  00001594  afbefffc	sw	-4(r29),r30; push fp
  566  00001598  001df020	add	r30,r0,r29; fp = sp
  567  0000159c  afbffff8	sw	-8(r29),r31; push ret addr
  568  000015a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  569  000015a4  afa20000	sw	0(r29),r2
  570  000015a8  afa30004	sw	4(r29),r3
  571  000015ac  afa40008	sw	8(r29),r4
  572  000015b0  83c20003	lb	r2,3(r30)
  573  000015b4  20010000	addi	r1,r0,#0
  574  000015b8  304300ff	andi	r3,r2,#0x00ff
  575  000015bc  6c64002f	sgtui	r4,r3,#47
  576  000015c0  1080001c	beqz	r4,L7_LF2
  577  000015c4  54000000	nop; delay slot nop
  578  000015c8  304300ff	andi	r3,r2,#0x00ff
  579  000015cc  70640039	sleui	r4,r3,#57
  580  000015d0  1480005c	bnez	r4,L6_LF2
  581  000015d4  54000000	nop; delay slot nop
  582  000015d8  08000004	j	L7_LF2
  583  000015dc  54000000	nop; delay slot nop
  584  000015e0          	L7_LF2:
  585  000015e0  304300ff	andi	r3,r2,#0x00ff
  586  000015e4  6c640060	sgtui	r4,r3,#96
  587  000015e8  1080001c	beqz	r4,L8_LF2
  588  000015ec  54000000	nop; delay slot nop
  589  000015f0  304300ff	andi	r3,r2,#0x00ff
  590  000015f4  70640066	sleui	r4,r3,#102
  591  000015f8  14800034	bnez	r4,L6_LF2
  592  000015fc  54000000	nop; delay slot nop
  593  00001600  08000004	j	L8_LF2
  594  00001604  54000000	nop; delay slot nop
  595  00001608          	L8_LF2:
  596  00001608  304300ff	andi	r3,r2,#0x00ff
  597  0000160c  6c640040	sgtui	r4,r3,#64
  598  00001610  10800020	beqz	r4,L5_LF2
  599  00001614  54000000	nop; delay slot nop
  600  00001618  304300ff	andi	r3,r2,#0x00ff
  601  0000161c  70640041	sleui	r4,r3,#65
  602  00001620  1480000c	bnez	r4,L6_LF2
  603  00001624  54000000	nop; delay slot nop
  604  00001628  08000008	j	L5_LF2
  605  0000162c  54000000	nop; delay slot nop
  606  00001630          	L6_LF2:
  607  00001630  20010001	addi	r1,r0,#1
  608  00001634          	L5_LF2:
  609  00001634  08000004	j	L4_LF2
  610  00001638  54000000	nop; delay slot nop
  611  0000163c          	L4_LF2:
  612  0000163c  8fa20000	lw	r2,0(r29)
  613  00001640  8fa30004	lw	r3,4(r29)
  614  00001644  8fa40008	lw	r4,8(r29)
  615  00001648  8fdffff8	lw	r31,-8(r30)
  616  0000164c  001ee820	add	r29,r0,r30
  617  00001650  8fdefffc	lw	r30,-4(r30)
  618  00001654  4be00000	jr	r31
  619  00001658  54000000	nop
  620  0000165c          	.endproc _isxdigit
  621  0000165c          	.align 2
  622  0000165c          	.proc _dstrcpy
  623  0000165c          	.global _dstrcpy
  624  0000165c          	_dstrcpy:
  625                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  626  0000165c  afbefffc	sw	-4(r29),r30; push fp
  627  00001660  001df020	add	r30,r0,r29; fp = sp
  628  00001664  afbffff8	sw	-8(r29),r31; push ret addr
  629  00001668  2fbd0018	subui	r29,r29,#24; alloc local storage
  630  0000166c  afa20000	sw	0(r29),r2
  631  00001670  afa30004	sw	4(r29),r3
  632  00001674  8fc10000	lw	r1,(r30)
  633  00001678  afc1fff4	sw	-12(r30),r1
  634  0000167c          	L10_LF2:
  635  0000167c  8fc10000	lw	r1,(r30)
  636  00001680  20220001	addi	r2,r1,#1
  637  00001684  afc20000	sw	(r30),r2
  638  00001688  8fc20004	lw	r2,4(r30)
  639  0000168c  20430001	addi	r3,r2,#1
  640  00001690  afc30004	sw	4(r30),r3
  641  00001694  80420000	lb	r2,(r2)
  642  00001698  a0220000	sb	(r1),r2
  643  0000169c  a3c2fff3	sb	-13(r30),r2
  644  000016a0          	L12_LF2:
  645  000016a0  93c1fff3	lbu	r1,-13(r30)
  646  000016a4  64220000	snei	r2,r1,#0
  647  000016a8  1440000c	bnez	r2,L13_LF2
  648  000016ac  54000000	nop; delay slot nop
  649  000016b0  0800000c	j	L11_LF2
  650  000016b4  54000000	nop; delay slot nop
  651  000016b8          	L13_LF2:
  652  000016b8  0bffffc0	j	L10_LF2
  653  000016bc  54000000	nop; delay slot nop
  654  000016c0          	L11_LF2:
  655  000016c0  8fc1fff4	lw	r1,-12(r30)
  656  000016c4  08000004	j	L9_LF2
  657  000016c8  54000000	nop; delay slot nop
  658  000016cc          	L9_LF2:
  659  000016cc  8fa20000	lw	r2,0(r29)
  660  000016d0  8fa30004	lw	r3,4(r29)
  661  000016d4  8fdffff8	lw	r31,-8(r30)
  662  000016d8  001ee820	add	r29,r0,r30
  663  000016dc  8fdefffc	lw	r30,-4(r30)
  664  000016e0  4be00000	jr	r31
  665  000016e4  54000000	nop
  666  000016e8          	.endproc _dstrcpy
  667  000016e8          	.align 2
  668  000016e8          	.proc _dstrncpy
  669  000016e8          	.global _dstrncpy
  670  000016e8          	_dstrncpy:
  671                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  672  000016e8  afbefffc	sw	-4(r29),r30; push fp
  673  000016ec  001df020	add	r30,r0,r29; fp = sp
  674  000016f0  afbffff8	sw	-8(r29),r31; push ret addr
  675  000016f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  676  000016f8  afa20000	sw	0(r29),r2
  677  000016fc  afa30004	sw	4(r29),r3
  678  00001700  8fc10000	lw	r1,(r30)
  679  00001704  afc1fff4	sw	-12(r30),r1
  680  00001708          	L15_LF2:
  681  00001708  8fc10008	lw	r1,8(r30)
  682  0000170c  2022ffff	addi	r2,r1,#-1
  683  00001710  afc20008	sw	8(r30),r2
  684  00001714  70210000	slei	r1,r1,#0
  685  00001718  1020000c	beqz	r1,L18_LF2
  686  0000171c  54000000	nop; delay slot nop
  687  00001720  08000048	j	L16_LF2
  688  00001724  54000000	nop; delay slot nop
  689  00001728          	L18_LF2:
  690  00001728  8fc10000	lw	r1,(r30)
  691  0000172c  20220001	addi	r2,r1,#1
  692  00001730  afc20000	sw	(r30),r2
  693  00001734  8fc20004	lw	r2,4(r30)
  694  00001738  20430001	addi	r3,r2,#1
  695  0000173c  afc30004	sw	4(r30),r3
  696  00001740  80420000	lb	r2,(r2)
  697  00001744  a0220000	sb	(r1),r2
  698  00001748  a3c2fff3	sb	-13(r30),r2
  699  0000174c          	L17_LF2:
  700  0000174c  93c1fff3	lbu	r1,-13(r30)
  701  00001750  64220000	snei	r2,r1,#0
  702  00001754  1440000c	bnez	r2,L19_LF2
  703  00001758  54000000	nop; delay slot nop
  704  0000175c  0800000c	j	L16_LF2
  705  00001760  54000000	nop; delay slot nop
  706  00001764          	L19_LF2:
  707  00001764  0bffffa0	j	L15_LF2
  708  00001768  54000000	nop; delay slot nop
  709  0000176c          	L16_LF2:
  710  0000176c  8fc1fff4	lw	r1,-12(r30)
  711  00001770  08000004	j	L14_LF2
  712  00001774  54000000	nop; delay slot nop
  713  00001778          	L14_LF2:
  714  00001778  8fa20000	lw	r2,0(r29)
  715  0000177c  8fa30004	lw	r3,4(r29)
  716  00001780  8fdffff8	lw	r31,-8(r30)
  717  00001784  001ee820	add	r29,r0,r30
  718  00001788  8fdefffc	lw	r30,-4(r30)
  719  0000178c  4be00000	jr	r31
  720  00001790  54000000	nop
  721  00001794          	.endproc _dstrncpy
  722  00001794          	.align 2
  723  00001794          	.proc _dstrcat
  724  00001794          	.global _dstrcat
  725  00001794          	_dstrcat:
  726                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  727  00001794  afbefffc	sw	-4(r29),r30; push fp
  728  00001798  001df020	add	r30,r0,r29; fp = sp
  729  0000179c  afbffff8	sw	-8(r29),r31; push ret addr
  730  000017a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  731  000017a4  afa20000	sw	0(r29),r2
  732  000017a8  8fc10000	lw	r1,(r30)
  733  000017ac  afc1fff4	sw	-12(r30),r1
  734  000017b0          	L21_LF2:
  735  000017b0  8fc10000	lw	r1,(r30)
  736  000017b4  90220000	lbu	r2,(r1)
  737  000017b8  64410000	snei	r1,r2,#0
  738  000017bc  1420000c	bnez	r1,L23_LF2
  739  000017c0  54000000	nop; delay slot nop
  740  000017c4  0800001c	j	L22_LF2
  741  000017c8  54000000	nop; delay slot nop
  742  000017cc          	L23_LF2:
  743  000017cc  8fc20000	lw	r2,(r30)
  744  000017d0  20410001	addi	r1,r2,#1
  745  000017d4  00011020	add	r2,r0,r1
  746  000017d8  afc20000	sw	(r30),r2
  747  000017dc  0bffffd0	j	L21_LF2
  748  000017e0  54000000	nop; delay slot nop
  749  000017e4          	L22_LF2:
  750  000017e4  23bdfff8	addi	r29,r29,#-8
  751  000017e8  001d0820	add	r1,r0,r29
  752  000017ec  8fc20000	lw	r2,(r30)
  753  000017f0  ac220000	sw	(r1),r2
  754  000017f4  8fc20004	lw	r2,4(r30)
  755  000017f8  ac220004	sw	4(r1),r2
  756  000017fc  0ffffe5c	jal	_dstrcpy
  757  00001800  54000000	nop; delay slot nop
  758  00001804  23bd0008	addi	r29,r29,#8
  759  00001808  8fc1fff4	lw	r1,-12(r30)
  760  0000180c  08000004	j	L20_LF2
  761  00001810  54000000	nop; delay slot nop
  762  00001814          	L20_LF2:
  763  00001814  8fa20000	lw	r2,0(r29)
  764  00001818  8fdffff8	lw	r31,-8(r30)
  765  0000181c  001ee820	add	r29,r0,r30
  766  00001820  8fdefffc	lw	r30,-4(r30)
  767  00001824  4be00000	jr	r31
  768  00001828  54000000	nop
  769  0000182c          	.endproc _dstrcat
  770  0000182c          	.align 2
  771  0000182c          	.proc _dstrncmp
  772  0000182c          	.global _dstrncmp
  773  0000182c          	_dstrncmp:
  774                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  775  0000182c  afbefffc	sw	-4(r29),r30; push fp
  776  00001830  001df020	add	r30,r0,r29; fp = sp
  777  00001834  afbffff8	sw	-8(r29),r31; push ret addr
  778  00001838  2fbd0018	subui	r29,r29,#24; alloc local storage
  779  0000183c  afa20000	sw	0(r29),r2
  780  00001840  afa30004	sw	4(r29),r3
  781  00001844  54000000	nop
  782  00001848  20010000	addi	r1,r0,#0
  783  0000184c  afc1fff4	sw	-12(r30),r1
  784  00001850          	L25_LF2:
  785  00001850  8fc1fff4	lw	r1,-12(r30)
  786  00001854  8fc20008	lw	r2,8(r30)
  787  00001858  0022082a	slt	r1,r1,r2
  788  0000185c  1420000c	bnez	r1,L28_LF2
  789  00001860  54000000	nop; delay slot nop
  790  00001864  08000088	j	L26_LF2
  791  00001868  54000000	nop; delay slot nop
  792  0000186c          	L28_LF2:
  793  0000186c  8fc10004	lw	r1,4(r30)
  794  00001870  90220000	lbu	r2,(r1)
  795  00001874  64410000	snei	r1,r2,#0
  796  00001878  14200018	bnez	r1,L29_LF2
  797  0000187c  54000000	nop; delay slot nop
  798  00001880  20010000	addi	r1,r0,#0
  799  00001884  080000d8	j	L24_LF2
  800  00001888  54000000	nop; delay slot nop
  801  0000188c  08000028	j	L30_LF2
  802  00001890  54000000	nop; delay slot nop
  803  00001894          	L29_LF2:
  804  00001894  8fc10000	lw	r1,(r30)
  805  00001898  8fc20004	lw	r2,4(r30)
  806  0000189c  90210000	lbu	r1,(r1)
  807  000018a0  90420000	lbu	r2,(r2)
  808  000018a4  00220829	sne	r1,r1,r2
  809  000018a8  1020000c	beqz	r1,L30_LF2
  810  000018ac  54000000	nop; delay slot nop
  811  000018b0  0800003c	j	L26_LF2
  812  000018b4  54000000	nop; delay slot nop
  813  000018b8          	L31_LF2:
  814  000018b8          	L30_LF2:
  815  000018b8  8fc20000	lw	r2,(r30)
  816  000018bc  20410001	addi	r1,r2,#1
  817  000018c0  00011020	add	r2,r0,r1
  818  000018c4  afc20000	sw	(r30),r2
  819  000018c8  8fc20004	lw	r2,4(r30)
  820  000018cc  20410001	addi	r1,r2,#1
  821  000018d0  00011020	add	r2,r0,r1
  822  000018d4  afc20004	sw	4(r30),r2
  823  000018d8          	L27_LF2:
  824  000018d8  8fc2fff4	lw	r2,-12(r30)
  825  000018dc  20410001	addi	r1,r2,#1
  826  000018e0  00011020	add	r2,r0,r1
  827  000018e4  afc2fff4	sw	-12(r30),r2
  828  000018e8  0bffff64	j	L25_LF2
  829  000018ec  54000000	nop; delay slot nop
  830  000018f0          	L26_LF2:
  831  000018f0  8fc1fff4	lw	r1,-12(r30)
  832  000018f4  8fc20008	lw	r2,8(r30)
  833  000018f8  00220828	seq	r1,r1,r2
  834  000018fc  10200018	beqz	r1,L32_LF2
  835  00001900  54000000	nop; delay slot nop
  836  00001904  20010000	addi	r1,r0,#0
  837  00001908  08000054	j	L24_LF2
  838  0000190c  54000000	nop; delay slot nop
  839  00001910  0800004c	j	L33_LF2
  840  00001914  54000000	nop; delay slot nop
  841  00001918          	L32_LF2:
  842  00001918  8fc20000	lw	r2,(r30)
  843  0000191c  90410000	lbu	r1,(r2)
  844  00001920  8fc20004	lw	r2,4(r30)
  845  00001924  90430000	lbu	r3,(r2)
  846  00001928  00230822	sub	r1,r1,r3
  847  0000192c  74220000	sgei	r2,r1,#0
  848  00001930  10400020	beqz	r2,L34_LF2
  849  00001934  54000000	nop; delay slot nop
  850  00001938  8fc10000	lw	r1,(r30)
  851  0000193c  8fc20004	lw	r2,4(r30)
  852  00001940  90210000	lbu	r1,(r1)
  853  00001944  90420000	lbu	r2,(r2)
  854  00001948  00220829	sne	r1,r1,r2
  855  0000194c  08000008	j	L35_LF2
  856  00001950  54000000	nop; delay slot nop
  857  00001954          	L34_LF2:
  858  00001954  2001ffff	addi	r1,r0,#-1
  859  00001958          	L35_LF2:
  860  00001958  08000004	j	L24_LF2
  861  0000195c  54000000	nop; delay slot nop
  862  00001960          	L33_LF2:
  863  00001960          	L24_LF2:
  864  00001960  8fa20000	lw	r2,0(r29)
  865  00001964  8fa30004	lw	r3,4(r29)
  866  00001968  8fdffff8	lw	r31,-8(r30)
  867  0000196c  001ee820	add	r29,r0,r30
  868  00001970  8fdefffc	lw	r30,-4(r30)
  869  00001974  4be00000	jr	r31
  870  00001978  54000000	nop
  871  0000197c          	.endproc _dstrncmp
  872  0000197c          	.align 2
  873  0000197c          	.proc _dstrlen
  874  0000197c          	.global _dstrlen
  875  0000197c          	_dstrlen:
  876                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  877  0000197c  afbefffc	sw	-4(r29),r30; push fp
  878  00001980  001df020	add	r30,r0,r29; fp = sp
  879  00001984  afbffff8	sw	-8(r29),r31; push ret addr
  880  00001988  2fbd0018	subui	r29,r29,#24; alloc local storage
  881  0000198c  afa20000	sw	0(r29),r2
  882  00001990  20010000	addi	r1,r0,#0
  883  00001994  afc1fff4	sw	-12(r30),r1
  884  00001998          	L37_LF2:
  885  00001998  8fc10000	lw	r1,(r30)
  886  0000199c  20220001	addi	r2,r1,#1
  887  000019a0  afc20000	sw	(r30),r2
  888  000019a4  90210000	lbu	r1,(r1)
  889  000019a8  64220000	snei	r2,r1,#0
  890  000019ac  1440000c	bnez	r2,L39_LF2
  891  000019b0  54000000	nop; delay slot nop
  892  000019b4  0800001c	j	L38_LF2
  893  000019b8  54000000	nop; delay slot nop
  894  000019bc          	L39_LF2:
  895  000019bc  8fc2fff4	lw	r2,-12(r30)
  896  000019c0  20410001	addi	r1,r2,#1
  897  000019c4  00011020	add	r2,r0,r1
  898  000019c8  afc2fff4	sw	-12(r30),r2
  899  000019cc  0bffffc8	j	L37_LF2
  900  000019d0  54000000	nop; delay slot nop
  901  000019d4          	L38_LF2:
  902  000019d4  8fc1fff4	lw	r1,-12(r30)
  903  000019d8  08000004	j	L36_LF2
  904  000019dc  54000000	nop; delay slot nop
  905  000019e0          	L36_LF2:
  906  000019e0  8fa20000	lw	r2,0(r29)
  907  000019e4  8fdffff8	lw	r31,-8(r30)
  908  000019e8  001ee820	add	r29,r0,r30
  909  000019ec  8fdefffc	lw	r30,-4(r30)
  910  000019f0  4be00000	jr	r31
  911  000019f4  54000000	nop
  912  000019f8          	.endproc _dstrlen
  913  000019f8          	.align 2
  914  000019f8          	.proc _dstrstr
  915  000019f8          	.global _dstrstr
  916  000019f8          	_dstrstr:
  917                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  918  000019f8  afbefffc	sw	-4(r29),r30; push fp
  919  000019fc  001df020	add	r30,r0,r29; fp = sp
  920  00001a00  afbffff8	sw	-8(r29),r31; push ret addr
  921  00001a04  2fbd0018	subui	r29,r29,#24; alloc local storage
  922  00001a08  afa20000	sw	0(r29),r2
  923  00001a0c  23bdfff8	addi	r29,r29,#-8
  924  00001a10  001d0820	add	r1,r0,r29
  925  00001a14  8fc20004	lw	r2,4(r30)
  926  00001a18  ac220000	sw	(r1),r2
  927  00001a1c  0fffff5c	jal	_dstrlen
  928  00001a20  54000000	nop; delay slot nop
  929  00001a24  23bd0008	addi	r29,r29,#8
  930  00001a28  afc1fff4	sw	-12(r30),r1
  931  00001a2c          	L41_LF2:
  932  00001a2c  8fc10000	lw	r1,(r30)
  933  00001a30  90220000	lbu	r2,(r1)
  934  00001a34  64410000	snei	r1,r2,#0
  935  00001a38  1420000c	bnez	r1,L43_LF2
  936  00001a3c  54000000	nop; delay slot nop
  937  00001a40  08000060	j	L42_LF2
  938  00001a44  54000000	nop; delay slot nop
  939  00001a48          	L43_LF2:
  940  00001a48  23bdfff0	addi	r29,r29,#-16
  941  00001a4c  001d0820	add	r1,r0,r29
  942  00001a50  8fc20000	lw	r2,(r30)
  943  00001a54  ac220000	sw	(r1),r2
  944  00001a58  8fc20004	lw	r2,4(r30)
  945  00001a5c  ac220004	sw	4(r1),r2
  946  00001a60  8fc2fff4	lw	r2,-12(r30)
  947  00001a64  ac220008	sw	8(r1),r2
  948  00001a68  0ffffdc0	jal	_dstrncmp
  949  00001a6c  54000000	nop; delay slot nop
  950  00001a70  23bd0010	addi	r29,r29,#16
  951  00001a74  64220000	snei	r2,r1,#0
  952  00001a78  14400010	bnez	r2,L44_LF2
  953  00001a7c  54000000	nop; delay slot nop
  954  00001a80  8fc10000	lw	r1,(r30)
  955  00001a84  08000028	j	L40_LF2
  956  00001a88  54000000	nop; delay slot nop
  957  00001a8c          	L44_LF2:
  958  00001a8c  8fc20000	lw	r2,(r30)
  959  00001a90  20410001	addi	r1,r2,#1
  960  00001a94  00011020	add	r2,r0,r1
  961  00001a98  afc20000	sw	(r30),r2
  962  00001a9c  0bffff8c	j	L41_LF2
  963  00001aa0  54000000	nop; delay slot nop
  964  00001aa4          	L42_LF2:
  965  00001aa4  20010000	addi	r1,r0,#0
  966  00001aa8  08000004	j	L40_LF2
  967  00001aac  54000000	nop; delay slot nop
  968  00001ab0          	L40_LF2:
  969  00001ab0  8fa20000	lw	r2,0(r29)
  970  00001ab4  8fdffff8	lw	r31,-8(r30)
  971  00001ab8  001ee820	add	r29,r0,r30
  972  00001abc  8fdefffc	lw	r30,-4(r30)
  973  00001ac0  4be00000	jr	r31
  974  00001ac4  54000000	nop
  975  00001ac8          	.endproc _dstrstr
  976  00001ac8          	.align 2
  977  00001ac8          	.proc _dmindex
  978  00001ac8          	.global _dmindex
  979  00001ac8          	_dmindex:
  980                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  981  00001ac8  afbefffc	sw	-4(r29),r30; push fp
  982  00001acc  001df020	add	r30,r0,r29; fp = sp
  983  00001ad0  afbffff8	sw	-8(r29),r31; push ret addr
  984  00001ad4  2fbd0018	subui	r29,r29,#24; alloc local storage
  985  00001ad8  afa20000	sw	0(r29),r2
  986  00001adc  54000000	nop
  987  00001ae0          	L46_LF2:
  988  00001ae0  8fc10000	lw	r1,(r30)
  989  00001ae4  90220000	lbu	r2,(r1)
  990  00001ae8  64410000	snei	r1,r2,#0
  991  00001aec  1420000c	bnez	r1,L48_LF2
  992  00001af0  54000000	nop; delay slot nop
  993  00001af4  08000070	j	L47_LF2
  994  00001af8  54000000	nop; delay slot nop
  995  00001afc          	L48_LF2:
  996  00001afc  8fc10004	lw	r1,4(r30)
  997  00001b00  afc1fff4	sw	-12(r30),r1
  998  00001b04          	L49_LF2:
  999  00001b04  8fc1fff4	lw	r1,-12(r30)
 1000  00001b08  90220000	lbu	r2,(r1)
 1001  00001b0c  64410000	snei	r1,r2,#0
 1002  00001b10  1420000c	bnez	r1,L52_LF2
 1003  00001b14  54000000	nop; delay slot nop
 1004  00001b18  08000044	j	L50_LF2
 1005  00001b1c  54000000	nop; delay slot nop
 1006  00001b20          	L52_LF2:
 1007  00001b20  8fc10000	lw	r1,(r30)
 1008  00001b24  8fc2fff4	lw	r2,-12(r30)
 1009  00001b28  90210000	lbu	r1,(r1)
 1010  00001b2c  90420000	lbu	r2,(r2)
 1011  00001b30  00220828	seq	r1,r1,r2
 1012  00001b34  10200010	beqz	r1,L51_LF2
 1013  00001b38  54000000	nop; delay slot nop
 1014  00001b3c  8fc10000	lw	r1,(r30)
 1015  00001b40  08000030	j	L45_LF2
 1016  00001b44  54000000	nop; delay slot nop
 1017  00001b48          	L53_LF2:
 1018  00001b48          	L51_LF2:
 1019  00001b48  8fc2fff4	lw	r2,-12(r30)
 1020  00001b4c  20410001	addi	r1,r2,#1
 1021  00001b50  00011020	add	r2,r0,r1
 1022  00001b54  afc2fff4	sw	-12(r30),r2
 1023  00001b58  0bffffa8	j	L49_LF2
 1024  00001b5c  54000000	nop; delay slot nop
 1025  00001b60          	L50_LF2:
 1026  00001b60  0bffff7c	j	L46_LF2
 1027  00001b64  54000000	nop; delay slot nop
 1028  00001b68          	L47_LF2:
 1029  00001b68  20010000	addi	r1,r0,#0
 1030  00001b6c  08000004	j	L45_LF2
 1031  00001b70  54000000	nop; delay slot nop
 1032  00001b74          	L45_LF2:
 1033  00001b74  8fa20000	lw	r2,0(r29)
 1034  00001b78  8fdffff8	lw	r31,-8(r30)
 1035  00001b7c  001ee820	add	r29,r0,r30
 1036  00001b80  8fdefffc	lw	r30,-4(r30)
 1037  00001b84  4be00000	jr	r31
 1038  00001b88  54000000	nop
 1039  00001b8c          	.endproc _dmindex
 1040  00001b8c          	.align 2
 1041  00001b8c          	.proc _dindex
 1042  00001b8c          	.global _dindex
 1043  00001b8c          	_dindex:
 1044                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1045  00001b8c  afbefffc	sw	-4(r29),r30; push fp
 1046  00001b90  001df020	add	r30,r0,r29; fp = sp
 1047  00001b94  afbffff8	sw	-8(r29),r31; push ret addr
 1048  00001b98  2fbd0010	subui	r29,r29,#16; alloc local storage
 1049  00001b9c  afa20000	sw	0(r29),r2
 1050  00001ba0  54000000	nop
 1051  00001ba4          	L55_LF2:
 1052  00001ba4  8fc10000	lw	r1,(r30)
 1053  00001ba8  90220000	lbu	r2,(r1)
 1054  00001bac  64410000	snei	r1,r2,#0
 1055  00001bb0  1420000c	bnez	r1,L57_LF2
 1056  00001bb4  54000000	nop; delay slot nop
 1057  00001bb8  08000040	j	L56_LF2
 1058  00001bbc  54000000	nop; delay slot nop
 1059  00001bc0          	L57_LF2:
 1060  00001bc0  8fc10000	lw	r1,(r30)
 1061  00001bc4  90220000	lbu	r2,(r1)
 1062  00001bc8  8fc10004	lw	r1,4(r30)
 1063  00001bcc  00411028	seq	r2,r2,r1
 1064  00001bd0  10400010	beqz	r2,L58_LF2
 1065  00001bd4  54000000	nop; delay slot nop
 1066  00001bd8  8fc10000	lw	r1,(r30)
 1067  00001bdc  08000028	j	L54_LF2
 1068  00001be0  54000000	nop; delay slot nop
 1069  00001be4          	L58_LF2:
 1070  00001be4  8fc20000	lw	r2,(r30)
 1071  00001be8  20410001	addi	r1,r2,#1
 1072  00001bec  00011020	add	r2,r0,r1
 1073  00001bf0  afc20000	sw	(r30),r2
 1074  00001bf4  0bffffac	j	L55_LF2
 1075  00001bf8  54000000	nop; delay slot nop
 1076  00001bfc          	L56_LF2:
 1077  00001bfc  20010000	addi	r1,r0,#0
 1078  00001c00  08000004	j	L54_LF2
 1079  00001c04  54000000	nop; delay slot nop
 1080  00001c08          	L54_LF2:
 1081  00001c08  8fa20000	lw	r2,0(r29)
 1082  00001c0c  8fdffff8	lw	r31,-8(r30)
 1083  00001c10  001ee820	add	r29,r0,r30
 1084  00001c14  8fdefffc	lw	r30,-4(r30)
 1085  00001c18  4be00000	jr	r31
 1086  00001c1c  54000000	nop
 1087  00001c20          	.endproc _dindex
 1088  00001c20          	.align 2
 1089  00001c20          	.proc _ditoa
 1090  00001c20          	.global _ditoa
 1091  00001c20          	_ditoa:
 1092                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1093  00001c20  afbefffc	sw	-4(r29),r30; push fp
 1094  00001c24  001df020	add	r30,r0,r29; fp = sp
 1095  00001c28  afbffff8	sw	-8(r29),r31; push ret addr
 1096  00001c2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1097  00001c30  afa20000	sw	0(r29),r2
 1098  00001c34  afa30004	sw	4(r29),r3
 1099  00001c38  8fc10000	lw	r1,(r30)
 1100  00001c3c  68220000	slti	r2,r1,#0
 1101  00001c40  1040002c	beqz	r2,L60_LF2
 1102  00001c44  54000000	nop; delay slot nop
 1103  00001c48  8fc10004	lw	r1,4(r30)
 1104  00001c4c  20220001	addi	r2,r1,#1
 1105  00001c50  afc20004	sw	4(r30),r2
 1106  00001c54  2002002d	addi	r2,r0,(#0x2d)&0xff
 1107  00001c58  a0220000	sb	(r1),r2
 1108  00001c5c  8fc10000	lw	r1,(r30)
 1109  00001c60  00011022	sub	r2,r0,r1
 1110  00001c64  afc20000	sw	(r30),r2
 1111  00001c68  08000118	j	L61_LF2
 1112  00001c6c  54000000	nop; delay slot nop
 1113  00001c70          	L60_LF2:
 1114  00001c70  8fc10000	lw	r1,(r30)
 1115  00001c74  64220000	snei	r2,r1,#0
 1116  00001c78  14400020	bnez	r2,L62_LF2
 1117  00001c7c  54000000	nop; delay slot nop
 1118  00001c80  8fc10004	lw	r1,4(r30)
 1119  00001c84  20220001	addi	r2,r1,#1
 1120  00001c88  afc20004	sw	4(r30),r2
 1121  00001c8c  20020030	addi	r2,r0,(#0x30)&0xff
 1122  00001c90  a0220000	sb	(r1),r2
 1123  00001c94  080000ec	j	L61_LF2
 1124  00001c98  54000000	nop; delay slot nop
 1125  00001c9c          	L62_LF2:
 1126  00001c9c  20010001	addi	r1,r0,#1
 1127  00001ca0  afc1fff4	sw	-12(r30),r1
 1128  00001ca4          	L64_LF2:
 1129  00001ca4  8fc1fff4	lw	r1,-12(r30)
 1130  00001ca8  8fc20000	lw	r2,(r30)
 1131  00001cac  0022082c	sle	r1,r1,r2
 1132  00001cb0  1420000c	bnez	r1,L66_LF2
 1133  00001cb4  54000000	nop; delay slot nop
 1134  00001cb8  08000024	j	L65_LF2
 1135  00001cbc  54000000	nop; delay slot nop
 1136  00001cc0          	L67_LF2:
 1137  00001cc0          	L66_LF2:
 1138  00001cc0  8fc1fff4	lw	r1,-12(r30)
 1139  00001cc4  00011820	add	r3,r0,r1
 1140  00001cc8  50620002	slli	r2,r3,#0x2
 1141  00001ccc  00411020	add	r2,r2,r1
 1142  00001cd0  50410001	slli	r1,r2,#0x1
 1143  00001cd4  afc1fff4	sw	-12(r30),r1
 1144  00001cd8  0bffffc8	j	L64_LF2
 1145  00001cdc  54000000	nop; delay slot nop
 1146  00001ce0          	L65_LF2:
 1147  00001ce0  54000000	nop
 1148  00001ce4          	L68_LF2:
 1149  00001ce4  8fc1fff4	lw	r1,-12(r30)
 1150  00001ce8  2002000a	addi	r2,r0,#10
 1151  00001cec  00200035	movi2fp	f0,r1
 1152  00001cf0  00400835	movi2fp	f1,r2
 1153  00001cf4  0401000f	div	f0,f0,f1
 1154  00001cf8  00000834	movfp2i	r1,f0
 1155  00001cfc  afc1fff4	sw	-12(r30),r1
 1156  00001d00  8fc10004	lw	r1,4(r30)
 1157  00001d04  20220001	addi	r2,r1,#1
 1158  00001d08  afc20004	sw	4(r30),r2
 1159  00001d0c  8fc20000	lw	r2,(r30)
 1160  00001d10  8fc3fff4	lw	r3,-12(r30)
 1161  00001d14  00400035	movi2fp	f0,r2
 1162  00001d18  00600835	movi2fp	f1,r3
 1163  00001d1c  0401000f	div	f0,f0,f1
 1164  00001d20  00001034	movfp2i	r2,f0
 1165  00001d24  00021820	add	r3,r0,r2
 1166  00001d28  20620030	addi	r2,r3,#48
 1167  00001d2c  a0220000	sb	(r1),r2
 1168  00001d30  8fc10000	lw	r1,(r30)
 1169  00001d34  8fc3fff4	lw	r3,-12(r30)
 1170  00001d38  00200035	movi2fp	f0,r1
 1171  00001d3c  00600835	movi2fp	f1,r3
 1172  00001d40  0401000f	div	f0,f0,f1
 1173  00001d44  00001034	movfp2i	r2,f0
 1174  00001d48  8fc3fff4	lw	r3,-12(r30)
 1175  00001d4c  00400035	movi2fp	f0,r2
 1176  00001d50  00600835	movi2fp	f1,r3
 1177  00001d54  0401000e	mult	f0,f0,f1
 1178  00001d58  00001034	movfp2i	r2,f0
 1179  00001d5c  00220822	sub	r1,r1,r2
 1180  00001d60  afc10000	sw	(r30),r1
 1181  00001d64          	L70_LF2:
 1182  00001d64  8fc1fff4	lw	r1,-12(r30)
 1183  00001d68  6c220001	sgti	r2,r1,#1
 1184  00001d6c  1440000c	bnez	r2,L71_LF2
 1185  00001d70  54000000	nop; delay slot nop
 1186  00001d74  0800000c	j	L61_LF2
 1187  00001d78  54000000	nop; delay slot nop
 1188  00001d7c          	L71_LF2:
 1189  00001d7c  0bffff64	j	L68_LF2
 1190  00001d80  54000000	nop; delay slot nop
 1191  00001d84          	L69_LF2:
 1192  00001d84          	L63_LF2:
 1193  00001d84          	L61_LF2:
 1194  00001d84  8fc10004	lw	r1,4(r30)
 1195  00001d88  20020000	addi	r2,r0,(#0x0)&0xff
 1196  00001d8c  a0220000	sb	(r1),r2
 1197  00001d90          	L59_LF2:
 1198  00001d90  8fa20000	lw	r2,0(r29)
 1199  00001d94  8fa30004	lw	r3,4(r29)
 1200  00001d98  8fdffff8	lw	r31,-8(r30)
 1201  00001d9c  001ee820	add	r29,r0,r30
 1202  00001da0  8fdefffc	lw	r30,-4(r30)
 1203  00001da4  4be00000	jr	r31
 1204  00001da8  54000000	nop
 1205  00001dac          	.endproc _ditoa
 1206  00001dac          	.align 2
 1207  00001dac          	.proc _dstrtol
 1208  00001dac          	.global _dstrtol
 1209  00001dac          	_dstrtol:
 1210                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1211  00001dac  afbefffc	sw	-4(r29),r30; push fp
 1212  00001db0  001df020	add	r30,r0,r29; fp = sp
 1213  00001db4  afbffff8	sw	-8(r29),r31; push ret addr
 1214  00001db8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1215  00001dbc  afa20000	sw	0(r29),r2
 1216  00001dc0  20010000	addi	r1,r0,#0
 1217  00001dc4  afc1fff4	sw	-12(r30),r1
 1218  00001dc8          	L73_LF2:
 1219  00001dc8  8fc10000	lw	r1,(r30)
 1220  00001dcc  90220000	lbu	r2,(r1)
 1221  00001dd0  60410020	seqi	r1,r2,#32
 1222  00001dd4  14200034	bnez	r1,L75_LF2
 1223  00001dd8  54000000	nop; delay slot nop
 1224  00001ddc  8fc10000	lw	r1,(r30)
 1225  00001de0  90220000	lbu	r2,(r1)
 1226  00001de4  60410009	seqi	r1,r2,#9
 1227  00001de8  14200020	bnez	r1,L75_LF2
 1228  00001dec  54000000	nop; delay slot nop
 1229  00001df0  8fc10000	lw	r1,(r30)
 1230  00001df4  90220000	lbu	r2,(r1)
 1231  00001df8  6041000a	seqi	r1,r2,#10
 1232  00001dfc  1420000c	bnez	r1,L75_LF2
 1233  00001e00  54000000	nop; delay slot nop
 1234  00001e04  0800001c	j	L74_LF2
 1235  00001e08  54000000	nop; delay slot nop
 1236  00001e0c          	L75_LF2:
 1237  00001e0c  8fc20000	lw	r2,(r30)
 1238  00001e10  20410001	addi	r1,r2,#1
 1239  00001e14  00011020	add	r2,r0,r1
 1240  00001e18  afc20000	sw	(r30),r2
 1241  00001e1c  0bffffa8	j	L73_LF2
 1242  00001e20  54000000	nop; delay slot nop
 1243  00001e24          	L74_LF2:
 1244  00001e24  8fc10004	lw	r1,4(r30)
 1245  00001e28  64220000	snei	r2,r1,#0
 1246  00001e2c  10400010	beqz	r2,L76_LF2
 1247  00001e30  54000000	nop; delay slot nop
 1248  00001e34  8fc10004	lw	r1,4(r30)
 1249  00001e38  8fc20000	lw	r2,(r30)
 1250  00001e3c  ac220000	sw	(r1),r2
 1251  00001e40          	L76_LF2:
 1252  00001e40  8fc10000	lw	r1,(r30)
 1253  00001e44  90220000	lbu	r2,(r1)
 1254  00001e48  64410000	snei	r1,r2,#0
 1255  00001e4c  14200010	bnez	r1,L77_LF2
 1256  00001e50  54000000	nop; delay slot nop
 1257  00001e54  8fc1fff4	lw	r1,-12(r30)
 1258  00001e58  08000294	j	L72_LF2
 1259  00001e5c  54000000	nop; delay slot nop
 1260  00001e60          	L77_LF2:
 1261  00001e60  8fc10000	lw	r1,(r30)
 1262  00001e64  90220000	lbu	r2,(r1)
 1263  00001e68  6041002d	seqi	r1,r2,#45
 1264  00001e6c  10200024	beqz	r1,L78_LF2
 1265  00001e70  54000000	nop; delay slot nop
 1266  00001e74  2001ffff	addi	r1,r0,#-1
 1267  00001e78  afc1ffec	sw	-20(r30),r1
 1268  00001e7c  8fc20000	lw	r2,(r30)
 1269  00001e80  20410001	addi	r1,r2,#1
 1270  00001e84  00011020	add	r2,r0,r1
 1271  00001e88  afc20000	sw	(r30),r2
 1272  00001e8c  0800000c	j	L79_LF2
 1273  00001e90  54000000	nop; delay slot nop
 1274  00001e94          	L78_LF2:
 1275  00001e94  20010001	addi	r1,r0,#1
 1276  00001e98  afc1ffec	sw	-20(r30),r1
 1277  00001e9c          	L79_LF2:
 1278  00001e9c  8fc10008	lw	r1,8(r30)
 1279  00001ea0  64220000	snei	r2,r1,#0
 1280  00001ea4  14400090	bnez	r2,L80_LF2
 1281  00001ea8  54000000	nop; delay slot nop
 1282  00001eac  8fc10000	lw	r1,(r30)
 1283  00001eb0  90220000	lbu	r2,(r1)
 1284  00001eb4  60410030	seqi	r1,r2,#48
 1285  00001eb8  10200074	beqz	r1,L81_LF2
 1286  00001ebc  54000000	nop; delay slot nop
 1287  00001ec0  8fc20000	lw	r2,(r30)
 1288  00001ec4  20410001	addi	r1,r2,#1
 1289  00001ec8  00011020	add	r2,r0,r1
 1290  00001ecc  afc20000	sw	(r30),r2
 1291  00001ed0  8fc10000	lw	r1,(r30)
 1292  00001ed4  90220000	lbu	r2,(r1)
 1293  00001ed8  60410078	seqi	r1,r2,#120
 1294  00001edc  14200020	bnez	r1,L83_LF2
 1295  00001ee0  54000000	nop; delay slot nop
 1296  00001ee4  8fc10000	lw	r1,(r30)
 1297  00001ee8  90220000	lbu	r2,(r1)
 1298  00001eec  60410058	seqi	r1,r2,#88
 1299  00001ef0  1420000c	bnez	r1,L83_LF2
 1300  00001ef4  54000000	nop; delay slot nop
 1301  00001ef8  08000024	j	L82_LF2
 1302  00001efc  54000000	nop; delay slot nop
 1303  00001f00          	L83_LF2:
 1304  00001f00  20010010	addi	r1,r0,#16
 1305  00001f04  afc10008	sw	8(r30),r1
 1306  00001f08  8fc20000	lw	r2,(r30)
 1307  00001f0c  20410001	addi	r1,r2,#1
 1308  00001f10  00011020	add	r2,r0,r1
 1309  00001f14  afc20000	sw	(r30),r2
 1310  00001f18  0800000c	j	L84_LF2
 1311  00001f1c  54000000	nop; delay slot nop
 1312  00001f20          	L82_LF2:
 1313  00001f20  20010008	addi	r1,r0,#8
 1314  00001f24  afc10008	sw	8(r30),r1
 1315  00001f28          	L84_LF2:
 1316  00001f28  0800000c	j	L80_LF2
 1317  00001f2c  54000000	nop; delay slot nop
 1318  00001f30          	L81_LF2:
 1319  00001f30  2001000a	addi	r1,r0,#10
 1320  00001f34  afc10008	sw	8(r30),r1
 1321  00001f38          	L85_LF2:
 1322  00001f38          	L80_LF2:
 1323  00001f38  8fc10008	lw	r1,8(r30)
 1324  00001f3c  70220000	slei	r2,r1,#0
 1325  00001f40  1440001c	bnez	r2,L87_LF2
 1326  00001f44  54000000	nop; delay slot nop
 1327  00001f48  8fc10008	lw	r1,8(r30)
 1328  00001f4c  6c220010	sgti	r2,r1,#16
 1329  00001f50  1440000c	bnez	r2,L87_LF2
 1330  00001f54  54000000	nop; delay slot nop
 1331  00001f58  08000010	j	L86_LF2
 1332  00001f5c  54000000	nop; delay slot nop
 1333  00001f60          	L87_LF2:
 1334  00001f60  8fc1fff4	lw	r1,-12(r30)
 1335  00001f64  08000188	j	L72_LF2
 1336  00001f68  54000000	nop; delay slot nop
 1337  00001f6c          	L86_LF2:
 1338  00001f6c  54000000	nop
 1339  00001f70          	L88_LF2:
 1340  00001f70  8fc10000	lw	r1,(r30)
 1341  00001f74  90220000	lbu	r2,(r1)
 1342  00001f78  6c41002f	sgtui	r1,r2,#47
 1343  00001f7c  10200030	beqz	r1,L91_LF2
 1344  00001f80  54000000	nop; delay slot nop
 1345  00001f84  8fc10000	lw	r1,(r30)
 1346  00001f88  90220000	lbu	r2,(r1)
 1347  00001f8c  70410039	sleui	r1,r2,#57
 1348  00001f90  1020001c	beqz	r1,L91_LF2
 1349  00001f94  54000000	nop; delay slot nop
 1350  00001f98  8fc10000	lw	r1,(r30)
 1351  00001f9c  90220000	lbu	r2,(r1)
 1352  00001fa0  2041ffd0	addi	r1,r2,#-48
 1353  00001fa4  afc1fff0	sw	-16(r30),r1
 1354  00001fa8  0800008c	j	L92_LF2
 1355  00001fac  54000000	nop; delay slot nop
 1356  00001fb0          	L91_LF2:
 1357  00001fb0  8fc10000	lw	r1,(r30)
 1358  00001fb4  90220000	lbu	r2,(r1)
 1359  00001fb8  6c410060	sgtui	r1,r2,#96
 1360  00001fbc  10200030	beqz	r1,L93_LF2
 1361  00001fc0  54000000	nop; delay slot nop
 1362  00001fc4  8fc10000	lw	r1,(r30)
 1363  00001fc8  90220000	lbu	r2,(r1)
 1364  00001fcc  7041007a	sleui	r1,r2,#122
 1365  00001fd0  1020001c	beqz	r1,L93_LF2
 1366  00001fd4  54000000	nop; delay slot nop
 1367  00001fd8  8fc10000	lw	r1,(r30)
 1368  00001fdc  90220000	lbu	r2,(r1)
 1369  00001fe0  2041ffa9	addi	r1,r2,#-87
 1370  00001fe4  afc1fff0	sw	-16(r30),r1
 1371  00001fe8  0800004c	j	L92_LF2
 1372  00001fec  54000000	nop; delay slot nop
 1373  00001ff0          	L93_LF2:
 1374  00001ff0  8fc10000	lw	r1,(r30)
 1375  00001ff4  90220000	lbu	r2,(r1)
 1376  00001ff8  6c410040	sgtui	r1,r2,#64
 1377  00001ffc  10200030	beqz	r1,L95_LF2
 1378  00002000  54000000	nop; delay slot nop
 1379  00002004  8fc10000	lw	r1,(r30)
 1380  00002008  90220000	lbu	r2,(r1)
 1381  0000200c  7041005a	sleui	r1,r2,#90
 1382  00002010  1020001c	beqz	r1,L95_LF2
 1383  00002014  54000000	nop; delay slot nop
 1384  00002018  8fc10000	lw	r1,(r30)
 1385  0000201c  90220000	lbu	r2,(r1)
 1386  00002020  2041ffc9	addi	r1,r2,#-55
 1387  00002024  afc1fff0	sw	-16(r30),r1
 1388  00002028  0800000c	j	L92_LF2
 1389  0000202c  54000000	nop; delay slot nop
 1390  00002030          	L95_LF2:
 1391  00002030  200103e8	addi	r1,r0,#1000
 1392  00002034  afc1fff0	sw	-16(r30),r1
 1393  00002038          	L96_LF2:
 1394  00002038          	L94_LF2:
 1395  00002038          	L92_LF2:
 1396  00002038  8fc1fff0	lw	r1,-16(r30)
 1397  0000203c  8fc20008	lw	r2,8(r30)
 1398  00002040  0022082a	slt	r1,r1,r2
 1399  00002044  10200040	beqz	r1,L90_LF2
 1400  00002048  54000000	nop; delay slot nop
 1401  0000204c  8fc1fff4	lw	r1,-12(r30)
 1402  00002050  8fc20008	lw	r2,8(r30)
 1403  00002054  00200035	movi2fp	f0,r1
 1404  00002058  00400835	movi2fp	f1,r2
 1405  0000205c  0401000e	mult	f0,f0,f1
 1406  00002060  00000834	movfp2i	r1,f0
 1407  00002064  afc1fff4	sw	-12(r30),r1
 1408  00002068  8fc1fff4	lw	r1,-12(r30)
 1409  0000206c  8fc2fff0	lw	r2,-16(r30)
 1410  00002070  00220820	add	r1,r1,r2
 1411  00002074  afc1fff4	sw	-12(r30),r1
 1412  00002078  8fc20000	lw	r2,(r30)
 1413  0000207c  20410001	addi	r1,r2,#1
 1414  00002080  00011020	add	r2,r0,r1
 1415  00002084  afc20000	sw	(r30),r2
 1416  00002088          	L97_LF2:
 1417  00002088          	L90_LF2:
 1418  00002088  8fc1fff0	lw	r1,-16(r30)
 1419  0000208c  8fc20008	lw	r2,8(r30)
 1420  00002090  0022082a	slt	r1,r1,r2
 1421  00002094  1420000c	bnez	r1,L98_LF2
 1422  00002098  54000000	nop; delay slot nop
 1423  0000209c  0800000c	j	L89_LF2
 1424  000020a0  54000000	nop; delay slot nop
 1425  000020a4          	L98_LF2:
 1426  000020a4  0bfffec8	j	L88_LF2
 1427  000020a8  54000000	nop; delay slot nop
 1428  000020ac          	L89_LF2:
 1429  000020ac  8fc10004	lw	r1,4(r30)
 1430  000020b0  64220000	snei	r2,r1,#0
 1431  000020b4  10400010	beqz	r2,L99_LF2
 1432  000020b8  54000000	nop; delay slot nop
 1433  000020bc  8fc10004	lw	r1,4(r30)
 1434  000020c0  8fc20000	lw	r2,(r30)
 1435  000020c4  ac220000	sw	(r1),r2
 1436  000020c8          	L99_LF2:
 1437  000020c8  8fc1fff4	lw	r1,-12(r30)
 1438  000020cc  8fc2ffec	lw	r2,-20(r30)
 1439  000020d0  00200035	movi2fp	f0,r1
 1440  000020d4  00400835	movi2fp	f1,r2
 1441  000020d8  0401000e	mult	f0,f0,f1
 1442  000020dc  00000834	movfp2i	r1,f0
 1443  000020e0  afc1fff4	sw	-12(r30),r1
 1444  000020e4  8fc1fff4	lw	r1,-12(r30)
 1445  000020e8  08000004	j	L72_LF2
 1446  000020ec  54000000	nop; delay slot nop
 1447  000020f0          	L72_LF2:
 1448  000020f0  8fa20000	lw	r2,0(r29)
 1449  000020f4  8fdffff8	lw	r31,-8(r30)
 1450  000020f8  001ee820	add	r29,r0,r30
 1451  000020fc  8fdefffc	lw	r30,-4(r30)
 1452  00002100  4be00000	jr	r31
 1453  00002104  54000000	nop
 1454  00002108          	.endproc _dstrtol
 1455  00002108          	.align 2
 1456  00002108          	.proc _bcopy
 1457  00002108          	.global _bcopy
 1458  00002108          	_bcopy:
 1459                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1460  00002108  afbefffc	sw	-4(r29),r30; push fp
 1461  0000210c  001df020	add	r30,r0,r29; fp = sp
 1462  00002110  afbffff8	sw	-8(r29),r31; push ret addr
 1463  00002114  2fbd0010	subui	r29,r29,#16; alloc local storage
 1464  00002118  afa20000	sw	0(r29),r2
 1465  0000211c  afa30004	sw	4(r29),r3
 1466  00002120  54000000	nop
 1467  00002124          	L101_LF2:
 1468  00002124  8fc10008	lw	r1,8(r30)
 1469  00002128  2022ffff	addi	r2,r1,#-1
 1470  0000212c  afc20008	sw	8(r30),r2
 1471  00002130  6c210000	sgti	r1,r1,#0
 1472  00002134  1420000c	bnez	r1,L103_LF2
 1473  00002138  54000000	nop; delay slot nop
 1474  0000213c  0800002c	j	L102_LF2
 1475  00002140  54000000	nop; delay slot nop
 1476  00002144          	L103_LF2:
 1477  00002144  8fc10004	lw	r1,4(r30)
 1478  00002148  20220001	addi	r2,r1,#1
 1479  0000214c  afc20004	sw	4(r30),r2
 1480  00002150  8fc20000	lw	r2,(r30)
 1481  00002154  20430001	addi	r3,r2,#1
 1482  00002158  afc30000	sw	(r30),r3
 1483  0000215c  80420000	lb	r2,(r2)
 1484  00002160  a0220000	sb	(r1),r2
 1485  00002164  0bffffbc	j	L101_LF2
 1486  00002168  54000000	nop; delay slot nop
 1487  0000216c          	L102_LF2:
 1488  0000216c          	L100_LF2:
 1489  0000216c  8fa20000	lw	r2,0(r29)
 1490  00002170  8fa30004	lw	r3,4(r29)
 1491  00002174  8fdffff8	lw	r31,-8(r30)
 1492  00002178  001ee820	add	r29,r0,r30
 1493  0000217c  8fdefffc	lw	r30,-4(r30)
 1494  00002180  4be00000	jr	r31
 1495  00002184  54000000	nop
 1496  00002188          	.endproc _bcopy
 1497  00002188          	.align 2
 1498  00002188          	.proc _bzero
 1499  00002188          	.global _bzero
 1500  00002188          	_bzero:
 1501                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1502  00002188  afbefffc	sw	-4(r29),r30; push fp
 1503  0000218c  001df020	add	r30,r0,r29; fp = sp
 1504  00002190  afbffff8	sw	-8(r29),r31; push ret addr
 1505  00002194  2fbd0010	subui	r29,r29,#16; alloc local storage
 1506  00002198  afa20000	sw	0(r29),r2
 1507  0000219c  54000000	nop
 1508  000021a0          	L105_LF2:
 1509  000021a0  8fc10004	lw	r1,4(r30)
 1510  000021a4  2022ffff	addi	r2,r1,#-1
 1511  000021a8  afc20004	sw	4(r30),r2
 1512  000021ac  6c210000	sgti	r1,r1,#0
 1513  000021b0  1420000c	bnez	r1,L107_LF2
 1514  000021b4  54000000	nop; delay slot nop
 1515  000021b8  08000020	j	L106_LF2
 1516  000021bc  54000000	nop; delay slot nop
 1517  000021c0          	L107_LF2:
 1518  000021c0  8fc10000	lw	r1,(r30)
 1519  000021c4  20220001	addi	r2,r1,#1
 1520  000021c8  afc20000	sw	(r30),r2
 1521  000021cc  20020000	addi	r2,r0,(#0x0)&0xff
 1522  000021d0  a0220000	sb	(r1),r2
 1523  000021d4  0bffffc8	j	L105_LF2
 1524  000021d8  54000000	nop; delay slot nop
 1525  000021dc          	L106_LF2:
 1526  000021dc          	L104_LF2:
 1527  000021dc  8fa20000	lw	r2,0(r29)
 1528  000021e0  8fdffff8	lw	r31,-8(r30)
 1529  000021e4  001ee820	add	r29,r0,r30
 1530  000021e8  8fdefffc	lw	r30,-4(r30)
 1531  000021ec  4be00000	jr	r31
 1532  000021f0  54000000	nop
 1533  000021f4          	.endproc _bzero
 1534  000021f4          	.align 2
 1535  000021f4          	.proc _min
 1536  000021f4          	.global _min
 1537  000021f4          	_min:
 1538                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1539  000021f4  afbefffc	sw	-4(r29),r30; push fp
 1540  000021f8  001df020	add	r30,r0,r29; fp = sp
 1541  000021fc  afbffff8	sw	-8(r29),r31; push ret addr
 1542  00002200  2fbd0010	subui	r29,r29,#16; alloc local storage
 1543  00002204  afa20000	sw	0(r29),r2
 1544  00002208  afa30004	sw	4(r29),r3
 1545  0000220c  8fc10000	lw	r1,(r30)
 1546  00002210  8fc20004	lw	r2,4(r30)
 1547  00002214  0022182c	sle	r3,r1,r2
 1548  00002218  14600008	bnez	r3,L109_LF2
 1549  0000221c  54000000	nop; delay slot nop
 1550  00002220  8fc10004	lw	r1,4(r30)
 1551  00002224          	L109_LF2:
 1552  00002224  08000004	j	L108_LF2
 1553  00002228  54000000	nop; delay slot nop
 1554  0000222c          	L108_LF2:
 1555  0000222c  8fa20000	lw	r2,0(r29)
 1556  00002230  8fa30004	lw	r3,4(r29)
 1557  00002234  8fdffff8	lw	r31,-8(r30)
 1558  00002238  001ee820	add	r29,r0,r30
 1559  0000223c  8fdefffc	lw	r30,-4(r30)
 1560  00002240  4be00000	jr	r31
 1561  00002244  54000000	nop
 1562  00002248          	.endproc _min
 1563                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1564                      ;;;
 1565                      ;;; Most of the traps are called in files from libtraps.
 1568  00002248          	.align 2
 1569  00002248          	.proc _exit
 1570  00002248          	.global _exit
 1571  00002248          	_exit:
 1572  00002248  44000300	trap	#0x300
 1573  0000224c  4be00000	jr	r31
 1574  00002250  54000000	nop
 1575  00002254          	.endproc _exit
 1577                      ; for the benefit of gcc.
 1578  00002254          	.proc ___main
 1579  00002254          	.global ___main
 1580  00002254          	___main:
 1581  00002254  4be00000	jr	r31
 1582  00002258  54000000	nop
 1583  0000225c          	.endproc ___main
 1584  0000225c          	.text
 1585  0000225c          	.global _etext
 1586  0000225c          	_etext:
 1587  0000225c          	.align 3
 1588  00002260          	.data
 1589  000030b4          	.global _edata
 1590  000030b4          	_edata:
