 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 317
    4                      ; Text size: 4688
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6e75	.ascii " <number of processes to create>\n\000"
   85  0000300c  6d626572	
   85  00003010  206f6620	
   85  00003014  70726f63	
   85  00003018  65737365	
   85  0000301c  7320746f	
   85  00003020  20637265	
   85  00003024  6174653e	
   85  00003028  0a00    	
   86  0000302a          	.align 2
   87  0000302c          	LC2_LF0:
   88  0000302c  43726561	.ascii "Creating %d processes\n\000"
   88  00003030  74696e67	
   88  00003034  20256420	
   88  00003038  70726f63	
   88  0000303c  65737365	
   88  00003040  730a00  	
   89  00003043          	.align 2
   90  00003044          	LC3_LF0:
   91  00003044  4572726f	.ascii "Error: could not allocate shared memory page in \000"
   91  00003048  723a2063	
   91  0000304c  6f756c64	
   91  00003050  206e6f74	
   91  00003054  20616c6c	
   91  00003058  6f636174	
   91  0000305c  65207368	
   91  00003060  61726564	
   91  00003064  206d656d	
   91  00003068  6f727920	
   91  0000306c  70616765	
   91  00003070  20696e20	
   91  00003074  00      	
   92  00003075          	.align 2
   93  00003078          	LC4_LF0:
   94  00003078  2c206578	.ascii ", exiting...\n\000"
   94  0000307c  6974696e	
   94  00003080  672e2e2e	
   94  00003084  0a00    	
   95  00003086          	.align 2
   96  00003088          	LC5_LF0:
   97  00003088  436f756c	.ascii "Could not map the shared page to virtual address in \000"
   97  0000308c  64206e6f	
   97  00003090  74206d61	
   97  00003094  70207468	
   97  00003098  65207368	
   97  0000309c  61726564	
   97  000030a0  20706167	
   97  000030a4  6520746f	
   97  000030a8  20766972	
   97  000030ac  7475616c	
   97  000030b0  20616464	
   97  000030b4  72657373	
   97  000030b8  20696e20	
   97  000030bc  00      	
   98  000030bd          	.align 2
   99  000030c0          	LC6_LF0:
  100  000030c0  4c6f636b	.ascii "Lock creation unsuccessful\000"
  100  000030c4  20637265	
  100  000030c8  6174696f	
  100  000030cc  6e20756e	
  100  000030d0  73756363	
  100  000030d4  65737366	
  100  000030d8  756c00  	
  101  000030db          	.align 2
  102  000030dc          	LC7_LF0:
  103  000030dc  53656d61	.ascii "Semaphore creation unsuccessful\000"
  103  000030e0  70686f72	
  103  000030e4  65206372	
  103  000030e8  65617469	
  103  000030ec  6f6e2075	
  103  000030f0  6e737563	
  103  000030f4  63657373	
  103  000030f8  66756c00	
  104  000030fc          	.align 2
  105  000030fc          	LC8_LF0:
  106  000030fc  70726f64	.ascii "producer.dlx.obj\000"
  106  00003100  75636572	
  106  00003104  2e646c78	
  106  00003108  2e6f626a	
  106  0000310c  00      	
  107  0000310d          	.align 2
  108  00003110          	LC9_LF0:
  109  00003110  636f6e73	.ascii "consumer.dlx.obj\000"
  109  00003114  756d6572	
  109  00003118  2e646c78	
  109  0000311c  2e6f626a	
  109  00003120  00      	
  110  00003121          	.align 2
  111  00003124          	LC10_LF0:
  112  00003124  736f6d65	.ascii "somethingwent rong here\n\000"
  112  00003128  7468696e	
  112  0000312c  6777656e	
  112  00003130  7420726f	
  112  00003134  6e672068	
  112  00003138  6572650a	
  112  0000313c  00      	
  113  0000313d          	.text
  114  000010d4          	.align 2
  115  000010d4          	.proc _main
  116  000010d4          	.global _main
  117  000010d4          	_main:
  118                      ;  Function 'main'; 48 bytes of locals, 0 regs to save.
  119  000010d4  afbefffc	sw	-4(r29),r30; push fp
  120  000010d8  001df020	add	r30,r0,r29; fp = sp
  121  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  122  000010e0  2fbd0038	subui	r29,r29,#56; alloc local storage
  123  000010e4  8fc20000	lw	r2,(r30)
  124  000010e8  8fc40004	lw	r4,4(r30)
  125  000010ec  0c001158	jal	___main
  126  000010f0  54000000	nop; not filled.
  127  000010f4  64410002	snei	r1,r2,#2
  128  000010f8  1020004c	beqz	r1,L14_LF0
  129  000010fc  54000000	nop; not filled.
  130  00001100  23bdfff8	addi	r29,r29,#-8
  131  00001104  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  132  00001108  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  133  0000110c  afa80000	sw	(r29),r8
  134  00001110  0c00032c	jal	_Printf
  135  00001114  54000000	nop; not filled.
  136  00001118  8c880000	lw	r8,(r4)
  137  0000111c  afa80000	sw	(r29),r8
  138  00001120  0c00031c	jal	_Printf
  139  00001124  54000000	nop; not filled.
  140  00001128  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  141  0000112c  25083008	addui	r8,r8,(LC1_LF0)&0xffff
  142  00001130  afa80000	sw	(r29),r8
  143  00001134  0c000308	jal	_Printf
  144  00001138  54000000	nop; not filled.
  145  0000113c  0c0003b4	jal	_Exit
  146  00001140  54000000	nop; not filled.
  147  00001144  23bd0008	addi	r29,r29,#8
  148  00001148          	L14_LF0:
  149  00001148  23bdfff0	addi	r29,r29,#-16
  150  0000114c  8c880004	lw	r8,4(r4)
  151  00001150  afa80000	sw	(r29),r8
  152  00001154  20080000	addi	r8,r0,#0
  153  00001158  afa80004	sw	4(r29),r8
  154  0000115c  2008000a	addi	r8,r0,#10
  155  00001160  afa80008	sw	8(r29),r8
  156  00001164  0c000c38	jal	_dstrtol
  157  00001168  54000000	nop; not filled.
  158  0000116c  00013820	add	r7,r0,r1
  159  00001170  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  160  00001174  2508302c	addui	r8,r8,(LC2_LF0)&0xffff
  161  00001178  afa80000	sw	(r29),r8
  162  0000117c  afa70004	sw	4(r29),r7
  163  00001180  0c0002bc	jal	_Printf
  164  00001184  54000000	nop; not filled.
  165  00001188  0c0002d8	jal	_shmget
  166  0000118c  54000000	nop; not filled.
  167  00001190  00011820	add	r3,r0,r1
  168  00001194  23bd0010	addi	r29,r29,#16
  169  00001198  64610000	snei	r1,r3,#0
  170  0000119c  1420004c	bnez	r1,L15_LF0
  171  000011a0  54000000	nop; not filled.
  172  000011a4  23bdfff8	addi	r29,r29,#-8
  173  000011a8  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  174  000011ac  25083044	addui	r8,r8,(LC3_LF0)&0xffff
  175  000011b0  afa80000	sw	(r29),r8
  176  000011b4  0c000288	jal	_Printf
  177  000011b8  54000000	nop; not filled.
  178  000011bc  8c880000	lw	r8,(r4)
  179  000011c0  afa80000	sw	(r29),r8
  180  000011c4  0c000278	jal	_Printf
  181  000011c8  54000000	nop; not filled.
  182  000011cc  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  183  000011d0  25083078	addui	r8,r8,(LC4_LF0)&0xffff
  184  000011d4  afa80000	sw	(r29),r8
  185  000011d8  0c000264	jal	_Printf
  186  000011dc  54000000	nop; not filled.
  187  000011e0  0c000310	jal	_Exit
  188  000011e4  54000000	nop; not filled.
  189  000011e8  23bd0008	addi	r29,r29,#8
  190  000011ec          	L15_LF0:
  191  000011ec  23bdfff8	addi	r29,r29,#-8
  192  000011f0  afa30000	sw	(r29),r3
  193  000011f4  0c000278	jal	_shmat
  194  000011f8  54000000	nop; not filled.
  195  000011fc  00011020	add	r2,r0,r1
  196  00001200  23bd0008	addi	r29,r29,#8
  197  00001204  64410000	snei	r1,r2,#0
  198  00001208  1420004c	bnez	r1,L16_LF0
  199  0000120c  54000000	nop; not filled.
  200  00001210  23bdfff8	addi	r29,r29,#-8
  201  00001214  3c080000	lhi	r8,((LC5_LF0)>>16)&0xffff
  202  00001218  25083088	addui	r8,r8,(LC5_LF0)&0xffff
  203  0000121c  afa80000	sw	(r29),r8
  204  00001220  0c00021c	jal	_Printf
  205  00001224  54000000	nop; not filled.
  206  00001228  8c840000	lw	r4,(r4)
  207  0000122c  afa40000	sw	(r29),r4
  208  00001230  0c00020c	jal	_Printf
  209  00001234  54000000	nop; not filled.
  210  00001238  3c080000	lhi	r8,((LC4_LF0)>>16)&0xffff
  211  0000123c  25083078	addui	r8,r8,(LC4_LF0)&0xffff
  212  00001240  afa80000	sw	(r29),r8
  213  00001244  0c0001f8	jal	_Printf
  214  00001248  54000000	nop; not filled.
  215  0000124c  0c0002a4	jal	_Exit
  216  00001250  54000000	nop; not filled.
  217  00001254  23bd0008	addi	r29,r29,#8
  218  00001258          	L16_LF0:
  219  00001258  20080000	addi	r8,r0,#0
  220  0000125c  ac48000c	sw	12(r2),r8
  221  00001260  ac480010	sw	16(r2),r8
  222  00001264  0c000238	jal	_lock_create
  223  00001268  54000000	nop; not filled.
  224  0000126c  00011020	add	r2,r0,r1
  225  00001270  60410001	seqi	r1,r2,#1
  226  00001274  10200028	beqz	r1,L17_LF0
  227  00001278  54000000	nop; not filled.
  228  0000127c  23bdfff8	addi	r29,r29,#-8
  229  00001280  3c080000	lhi	r8,((LC6_LF0)>>16)&0xffff
  230  00001284  250830c0	addui	r8,r8,(LC6_LF0)&0xffff
  231  00001288  afa80000	sw	(r29),r8
  232  0000128c  0c0001b0	jal	_Printf
  233  00001290  54000000	nop; not filled.
  234  00001294  0c00025c	jal	_Exit
  235  00001298  54000000	nop; not filled.
  236  0000129c  23bd0008	addi	r29,r29,#8
  237  000012a0          	L17_LF0:
  238  000012a0  23bdfff8	addi	r29,r29,#-8
  239  000012a4  20010001	addi	r1,r0,#1
  240  000012a8  00270822	sub	r1,r1,r7
  241  000012ac  afa10000	sw	(r29),r1
  242  000012b0  0c0001c8	jal	_sem_create
  243  000012b4  54000000	nop; not filled.
  244  000012b8  00013020	add	r6,r0,r1
  245  000012bc  23bd0008	addi	r29,r29,#8
  246  000012c0  60c1ffff	seqi	r1,r6,#-1
  247  000012c4  10200028	beqz	r1,L18_LF0
  248  000012c8  54000000	nop; not filled.
  249  000012cc  23bdfff8	addi	r29,r29,#-8
  250  000012d0  3c080000	lhi	r8,((LC7_LF0)>>16)&0xffff
  251  000012d4  250830dc	addui	r8,r8,(LC7_LF0)&0xffff
  252  000012d8  afa80000	sw	(r29),r8
  253  000012dc  0c000160	jal	_Printf
  254  000012e0  54000000	nop; not filled.
  255  000012e4  0c00020c	jal	_Exit
  256  000012e8  54000000	nop; not filled.
  257  000012ec  23bd0008	addi	r29,r29,#8
  258  000012f0          	L18_LF0:
  259  000012f0  23bdfff8	addi	r29,r29,#-8
  260  000012f4  afa30000	sw	(r29),r3
  261  000012f8  23c5ffe8	addi	r5,r30,#-24
  262  000012fc  afa50004	sw	4(r29),r5
  263  00001300  0c000910	jal	_ditoa
  264  00001304  54000000	nop; not filled.
  265  00001308  afa60000	sw	(r29),r6
  266  0000130c  23c4ffd8	addi	r4,r30,#-40
  267  00001310  afa40004	sw	4(r29),r4
  268  00001314  0c0008fc	jal	_ditoa
  269  00001318  54000000	nop; not filled.
  270  0000131c  afa20000	sw	(r29),r2
  271  00001320  23c3ffc8	addi	r3,r30,#-56
  272  00001324  afa30004	sw	4(r29),r3
  273  00001328  0c0008e8	jal	_ditoa
  274  0000132c  54000000	nop; not filled.
  275  00001330  20020000	addi	r2,r0,#0
  276  00001334  23bd0008	addi	r29,r29,#8
  277  00001338  0047082a	slt	r1,r2,r7
  278  0000133c  1020006c	beqz	r1,L20_LF0
  279  00001340  54000000	nop; not filled.
  280  00001344          	L22_LF0:
  281  00001344  23bdffe8	addi	r29,r29,#-24
  282  00001348  3c080000	lhi	r8,((LC8_LF0)>>16)&0xffff
  283  0000134c  250830fc	addui	r8,r8,(LC8_LF0)&0xffff
  284  00001350  afa80000	sw	(r29),r8
  285  00001354  afa50004	sw	4(r29),r5
  286  00001358  afa40008	sw	8(r29),r4
  287  0000135c  afa3000c	sw	12(r29),r3
  288  00001360  20080000	addi	r8,r0,#0
  289  00001364  afa80010	sw	16(r29),r8
  290  00001368  0c0000ec	jal	_process_create
  291  0000136c  54000000	nop; not filled.
  292  00001370  3c080000	lhi	r8,((LC9_LF0)>>16)&0xffff
  293  00001374  25083110	addui	r8,r8,(LC9_LF0)&0xffff
  294  00001378  afa80000	sw	(r29),r8
  295  0000137c  afa50004	sw	4(r29),r5
  296  00001380  afa40008	sw	8(r29),r4
  297  00001384  afa3000c	sw	12(r29),r3
  298  00001388  20080000	addi	r8,r0,#0
  299  0000138c  afa80010	sw	16(r29),r8
  300  00001390  0c0000c4	jal	_process_create
  301  00001394  54000000	nop; not filled.
  302  00001398  23bd0018	addi	r29,r29,#24
  303  0000139c  20420001	addi	r2,r2,#1
  304  000013a0  0047082a	slt	r1,r2,r7
  305  000013a4  1420ff9c	bnez	r1,L22_LF0
  306  000013a8  54000000	nop; not filled.
  307  000013ac          	L20_LF0:
  308  000013ac  23bdfff8	addi	r29,r29,#-8
  309  000013b0  afa60000	sw	(r29),r6
  310  000013b4  0c0000d0	jal	_sem_wait
  311  000013b8  54000000	nop; not filled.
  312  000013bc  23bd0008	addi	r29,r29,#8
  313  000013c0  64210001	snei	r1,r1,#1
  314  000013c4  10200028	beqz	r1,L24_LF0
  315  000013c8  54000000	nop; not filled.
  316  000013cc  23bdfff8	addi	r29,r29,#-8
  317  000013d0  3c080000	lhi	r8,((LC10_LF0)>>16)&0xffff
  318  000013d4  25083124	addui	r8,r8,(LC10_LF0)&0xffff
  319  000013d8  afa80000	sw	(r29),r8
  320  000013dc  0c000060	jal	_Printf
  321  000013e0  54000000	nop; not filled.
  322  000013e4  0c00010c	jal	_Exit
  323  000013e8  54000000	nop; not filled.
  324  000013ec  23bd0008	addi	r29,r29,#8
  325  000013f0          	L24_LF0:
  326  000013f0  0c000e48	jal	_exit
  327  000013f4  54000000	nop
  328  000013f8          	.endproc _main
  329                      ;;;
  330                      ;;; Stub functions for DLX traps.
  331                      ;;;
  332                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  333                      ;;;
  334                      ;;; The traps such as Open and Close
  335                      ;;; (note the capital letters) are for use by user programs.  The traps
  336                      ;;; with names such as open and close (lower case) are for use by the OS.
  337                      ;;;
  340  000013f8          	.align 2
  342                      ;;; The following are the traps to be used by user-level programs
  343                      ;;;
  345  000013f8          	.align 2
  346  000013f8          	.proc _Open
  347  000013f8          	.global _Open
  348  000013f8          	_Open:
  349                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  350                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  351                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  352  000013f8  44000213	trap	#0x213
  353  000013fc  4be00000	jr	r31
  354  00001400  54000000	nop
  355  00001404          	.endproc _Open
  357  00001404          	.proc _Close
  358  00001404          	.global _Close
  359  00001404          	_Close:
  360  00001404  44000214	trap	#0x214
  361  00001408  4be00000	jr	r31
  362  0000140c  54000000	nop
  363  00001410          	.endproc _Close
  365  00001410          	.proc _Read
  366  00001410          	.global _Read
  367  00001410          	_Read:
  368  00001410  44000210	trap	#0x210
  369  00001414  4be00000	jr	r31
  370  00001418  54000000	nop
  371  0000141c          	.endproc _Read
  373  0000141c          	.proc _Write
  374  0000141c          	.global _Write
  375  0000141c          	_Write:
  376  0000141c  44000211	trap	#0x211
  377  00001420  4be00000	jr	r31
  378  00001424  54000000	nop
  379  00001428          	.endproc _Write
  381  00001428          	.proc _Lseek
  382  00001428          	.global _Lseek
  383  00001428          	_Lseek:
  384  00001428  44000212	trap	#0x212
  385  0000142c  4be00000	jr	r31
  386  00001430  54000000	nop
  387  00001434          	.endproc _Lseek
  389  00001434          	.proc _Putchar
  390  00001434          	.global _Putchar
  391  00001434          	_Putchar:
  392  00001434  44000280	trap	#0x280
  393  00001438  4be00000	jr	r31
  394  0000143c  54000000	nop
  395  00001440          	.endproc _Putchar
  397  00001440          	.proc _Printf
  398  00001440          	.global _Printf
  399  00001440          	_Printf:
  400  00001440  44000201	trap	#0x201
  401  00001444  4be00000	jr	r31
  402  00001448  54000000	nop
  403  0000144c          	.endproc _Printf
  405  0000144c          	.proc _getpid
  406  0000144c          	.global _getpid
  407  0000144c          	_getpid:
  408  0000144c  44000431	trap	#0x431
  409  00001450  4be00000	jr	r31
  410  00001454  54000000	nop
  411  00001458          	.endproc _getpid
  413  00001458          	.proc _process_create
  414  00001458          	.global _process_create
  415  00001458          	_process_create:
  416  00001458  44000432	trap	#0x432
  417  0000145c  4be00000	jr	r31
  418  00001460  54000000	nop
  419  00001464          	.endproc _process_create
  421  00001464          	.proc _shmget
  422  00001464          	.global _shmget
  423  00001464          	_shmget:
  424  00001464  44000440	trap	#0x440
  425  00001468  4be00000	jr	r31
  426  0000146c  54000000	nop
  427  00001470          	.endproc _shmget
  429  00001470          	.proc _shmat
  430  00001470          	.global _shmat
  431  00001470          	_shmat:
  432  00001470  44000441	trap	#0x441
  433  00001474  4be00000	jr	r31
  434  00001478  54000000	nop
  435  0000147c          	.endproc _shmat
  437  0000147c          	.proc _sem_create
  438  0000147c          	.global _sem_create
  439  0000147c          	_sem_create:
  440  0000147c  44000450	trap	#0x450
  441  00001480  4be00000	jr	r31
  442  00001484  54000000	nop
  443  00001488          	.endproc _sem_create
  445  00001488          	.proc _sem_wait
  446  00001488          	.global _sem_wait
  447  00001488          	_sem_wait:
  448  00001488  44000451	trap	#0x451
  449  0000148c  4be00000	jr	r31
  450  00001490  54000000	nop
  451  00001494          	.endproc _sem_wait
  453  00001494          	.proc _sem_signal
  454  00001494          	.global _sem_signal
  455  00001494          	_sem_signal:
  456  00001494  44000452	trap	#0x452
  457  00001498  4be00000	jr	r31
  458  0000149c  54000000	nop
  459  000014a0          	.endproc _sem_signal
  461  000014a0          	.proc _lock_create
  462  000014a0          	.global _lock_create
  463  000014a0          	_lock_create:
  464  000014a0  44000453	trap	#0x453
  465  000014a4  4be00000	jr	r31
  466  000014a8  54000000	nop
  467  000014ac          	.endproc _lock_create
  469  000014ac          	.proc _lock_acquire
  470  000014ac          	.global _lock_acquire
  471  000014ac          	_lock_acquire:
  472  000014ac  44000454	trap	#0x454
  473  000014b0  4be00000	jr	r31
  474  000014b4  54000000	nop
  475  000014b8          	.endproc _lock_acquire
  477  000014b8          	.proc _lock_release
  478  000014b8          	.global _lock_release
  479  000014b8          	_lock_release:
  480  000014b8  44000455	trap	#0x455
  481  000014bc  4be00000	jr	r31
  482  000014c0  54000000	nop
  483  000014c4          	.endproc _lock_release
  485  000014c4          	.proc _cond_create
  486  000014c4          	.global _cond_create
  487  000014c4          	_cond_create:
  488  000014c4  44000456	trap	#0x456
  489  000014c8  4be00000	jr	r31
  490  000014cc  54000000	nop
  491  000014d0          	.endproc _cond_create
  493  000014d0          	.proc _cond_wait
  494  000014d0          	.global _cond_wait
  495  000014d0          	_cond_wait:
  496  000014d0  44000457	trap	#0x457
  497  000014d4  4be00000	jr	r31
  498  000014d8  54000000	nop
  499  000014dc          	.endproc _cond_wait
  501  000014dc          	.proc _cond_signal
  502  000014dc          	.global _cond_signal
  503  000014dc          	_cond_signal:
  504  000014dc  44000458	trap	#0x458
  505  000014e0  4be00000	jr	r31
  506  000014e4  54000000	nop
  507  000014e8          	.endproc _cond_signal
  509  000014e8          	.proc _cond_broadcast
  510  000014e8          	.global _cond_broadcast
  511  000014e8          	_cond_broadcast:
  512  000014e8  44000455	trap	#0x455
  513  000014ec  4be00000	jr	r31
  514  000014f0  54000000	nop
  515  000014f4          	.endproc _cond_broadcast
  517  000014f4          	.proc _Exit
  518  000014f4          	.global _Exit
  519  000014f4          	_Exit:
  520  000014f4  44000500	trap	#0x500
  521  000014f8  4be00000	jr	r31
  522  000014fc  54000000	nop
  523  00001500          	.endproc _Exit
  524                      ; Compiled by GCC
  526  00001500          	.align 2
  527  00001500          	.proc _isspace
  528  00001500          	.global _isspace
  529  00001500          	_isspace:
  530                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  531  00001500  afbefffc	sw	-4(r29),r30; push fp
  532  00001504  001df020	add	r30,r0,r29; fp = sp
  533  00001508  afbffff8	sw	-8(r29),r31; push ret addr
  534  0000150c  2fbd0018	subui	r29,r29,#24; alloc local storage
  535  00001510  afa20000	sw	0(r29),r2
  536  00001514  afa30004	sw	4(r29),r3
  537  00001518  afa40008	sw	8(r29),r4
  538  0000151c  83c20003	lb	r2,3(r30)
  539  00001520  20010000	addi	r1,r0,#0
  540  00001524  304300ff	andi	r3,r2,#0x00ff
  541  00001528  60640020	seqi	r4,r3,#32
  542  0000152c  1480002c	bnez	r4,L3_LF2
  543  00001530  54000000	nop; delay slot nop
  544  00001534  304300ff	andi	r3,r2,#0x00ff
  545  00001538  60640009	seqi	r4,r3,#9
  546  0000153c  1480001c	bnez	r4,L3_LF2
  547  00001540  54000000	nop; delay slot nop
  548  00001544  304300ff	andi	r3,r2,#0x00ff
  549  00001548  6064000a	seqi	r4,r3,#10
  550  0000154c  1480000c	bnez	r4,L3_LF2
  551  00001550  54000000	nop; delay slot nop
  552  00001554  08000008	j	L2_LF2
  553  00001558  54000000	nop; delay slot nop
  554  0000155c          	L3_LF2:
  555  0000155c  20010001	addi	r1,r0,#1
  556  00001560          	L2_LF2:
  557  00001560  08000004	j	L1_LF2
  558  00001564  54000000	nop; delay slot nop
  559  00001568          	L1_LF2:
  560  00001568  8fa20000	lw	r2,0(r29)
  561  0000156c  8fa30004	lw	r3,4(r29)
  562  00001570  8fa40008	lw	r4,8(r29)
  563  00001574  8fdffff8	lw	r31,-8(r30)
  564  00001578  001ee820	add	r29,r0,r30
  565  0000157c  8fdefffc	lw	r30,-4(r30)
  566  00001580  4be00000	jr	r31
  567  00001584  54000000	nop
  568  00001588          	.endproc _isspace
  569  00001588          	.align 2
  570  00001588          	.proc _isxdigit
  571  00001588          	.global _isxdigit
  572  00001588          	_isxdigit:
  573                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  574  00001588  afbefffc	sw	-4(r29),r30; push fp
  575  0000158c  001df020	add	r30,r0,r29; fp = sp
  576  00001590  afbffff8	sw	-8(r29),r31; push ret addr
  577  00001594  2fbd0018	subui	r29,r29,#24; alloc local storage
  578  00001598  afa20000	sw	0(r29),r2
  579  0000159c  afa30004	sw	4(r29),r3
  580  000015a0  afa40008	sw	8(r29),r4
  581  000015a4  83c20003	lb	r2,3(r30)
  582  000015a8  20010000	addi	r1,r0,#0
  583  000015ac  304300ff	andi	r3,r2,#0x00ff
  584  000015b0  6c64002f	sgtui	r4,r3,#47
  585  000015b4  1080001c	beqz	r4,L7_LF2
  586  000015b8  54000000	nop; delay slot nop
  587  000015bc  304300ff	andi	r3,r2,#0x00ff
  588  000015c0  70640039	sleui	r4,r3,#57
  589  000015c4  1480005c	bnez	r4,L6_LF2
  590  000015c8  54000000	nop; delay slot nop
  591  000015cc  08000004	j	L7_LF2
  592  000015d0  54000000	nop; delay slot nop
  593  000015d4          	L7_LF2:
  594  000015d4  304300ff	andi	r3,r2,#0x00ff
  595  000015d8  6c640060	sgtui	r4,r3,#96
  596  000015dc  1080001c	beqz	r4,L8_LF2
  597  000015e0  54000000	nop; delay slot nop
  598  000015e4  304300ff	andi	r3,r2,#0x00ff
  599  000015e8  70640066	sleui	r4,r3,#102
  600  000015ec  14800034	bnez	r4,L6_LF2
  601  000015f0  54000000	nop; delay slot nop
  602  000015f4  08000004	j	L8_LF2
  603  000015f8  54000000	nop; delay slot nop
  604  000015fc          	L8_LF2:
  605  000015fc  304300ff	andi	r3,r2,#0x00ff
  606  00001600  6c640040	sgtui	r4,r3,#64
  607  00001604  10800020	beqz	r4,L5_LF2
  608  00001608  54000000	nop; delay slot nop
  609  0000160c  304300ff	andi	r3,r2,#0x00ff
  610  00001610  70640041	sleui	r4,r3,#65
  611  00001614  1480000c	bnez	r4,L6_LF2
  612  00001618  54000000	nop; delay slot nop
  613  0000161c  08000008	j	L5_LF2
  614  00001620  54000000	nop; delay slot nop
  615  00001624          	L6_LF2:
  616  00001624  20010001	addi	r1,r0,#1
  617  00001628          	L5_LF2:
  618  00001628  08000004	j	L4_LF2
  619  0000162c  54000000	nop; delay slot nop
  620  00001630          	L4_LF2:
  621  00001630  8fa20000	lw	r2,0(r29)
  622  00001634  8fa30004	lw	r3,4(r29)
  623  00001638  8fa40008	lw	r4,8(r29)
  624  0000163c  8fdffff8	lw	r31,-8(r30)
  625  00001640  001ee820	add	r29,r0,r30
  626  00001644  8fdefffc	lw	r30,-4(r30)
  627  00001648  4be00000	jr	r31
  628  0000164c  54000000	nop
  629  00001650          	.endproc _isxdigit
  630  00001650          	.align 2
  631  00001650          	.proc _dstrcpy
  632  00001650          	.global _dstrcpy
  633  00001650          	_dstrcpy:
  634                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  635  00001650  afbefffc	sw	-4(r29),r30; push fp
  636  00001654  001df020	add	r30,r0,r29; fp = sp
  637  00001658  afbffff8	sw	-8(r29),r31; push ret addr
  638  0000165c  2fbd0018	subui	r29,r29,#24; alloc local storage
  639  00001660  afa20000	sw	0(r29),r2
  640  00001664  afa30004	sw	4(r29),r3
  641  00001668  8fc10000	lw	r1,(r30)
  642  0000166c  afc1fff4	sw	-12(r30),r1
  643  00001670          	L10_LF2:
  644  00001670  8fc10000	lw	r1,(r30)
  645  00001674  20220001	addi	r2,r1,#1
  646  00001678  afc20000	sw	(r30),r2
  647  0000167c  8fc20004	lw	r2,4(r30)
  648  00001680  20430001	addi	r3,r2,#1
  649  00001684  afc30004	sw	4(r30),r3
  650  00001688  80420000	lb	r2,(r2)
  651  0000168c  a0220000	sb	(r1),r2
  652  00001690  a3c2fff3	sb	-13(r30),r2
  653  00001694          	L12_LF2:
  654  00001694  93c1fff3	lbu	r1,-13(r30)
  655  00001698  64220000	snei	r2,r1,#0
  656  0000169c  1440000c	bnez	r2,L13_LF2
  657  000016a0  54000000	nop; delay slot nop
  658  000016a4  0800000c	j	L11_LF2
  659  000016a8  54000000	nop; delay slot nop
  660  000016ac          	L13_LF2:
  661  000016ac  0bffffc0	j	L10_LF2
  662  000016b0  54000000	nop; delay slot nop
  663  000016b4          	L11_LF2:
  664  000016b4  8fc1fff4	lw	r1,-12(r30)
  665  000016b8  08000004	j	L9_LF2
  666  000016bc  54000000	nop; delay slot nop
  667  000016c0          	L9_LF2:
  668  000016c0  8fa20000	lw	r2,0(r29)
  669  000016c4  8fa30004	lw	r3,4(r29)
  670  000016c8  8fdffff8	lw	r31,-8(r30)
  671  000016cc  001ee820	add	r29,r0,r30
  672  000016d0  8fdefffc	lw	r30,-4(r30)
  673  000016d4  4be00000	jr	r31
  674  000016d8  54000000	nop
  675  000016dc          	.endproc _dstrcpy
  676  000016dc          	.align 2
  677  000016dc          	.proc _dstrncpy
  678  000016dc          	.global _dstrncpy
  679  000016dc          	_dstrncpy:
  680                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  681  000016dc  afbefffc	sw	-4(r29),r30; push fp
  682  000016e0  001df020	add	r30,r0,r29; fp = sp
  683  000016e4  afbffff8	sw	-8(r29),r31; push ret addr
  684  000016e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  685  000016ec  afa20000	sw	0(r29),r2
  686  000016f0  afa30004	sw	4(r29),r3
  687  000016f4  8fc10000	lw	r1,(r30)
  688  000016f8  afc1fff4	sw	-12(r30),r1
  689  000016fc          	L15_LF2:
  690  000016fc  8fc10008	lw	r1,8(r30)
  691  00001700  2022ffff	addi	r2,r1,#-1
  692  00001704  afc20008	sw	8(r30),r2
  693  00001708  70210000	slei	r1,r1,#0
  694  0000170c  1020000c	beqz	r1,L18_LF2
  695  00001710  54000000	nop; delay slot nop
  696  00001714  08000048	j	L16_LF2
  697  00001718  54000000	nop; delay slot nop
  698  0000171c          	L18_LF2:
  699  0000171c  8fc10000	lw	r1,(r30)
  700  00001720  20220001	addi	r2,r1,#1
  701  00001724  afc20000	sw	(r30),r2
  702  00001728  8fc20004	lw	r2,4(r30)
  703  0000172c  20430001	addi	r3,r2,#1
  704  00001730  afc30004	sw	4(r30),r3
  705  00001734  80420000	lb	r2,(r2)
  706  00001738  a0220000	sb	(r1),r2
  707  0000173c  a3c2fff3	sb	-13(r30),r2
  708  00001740          	L17_LF2:
  709  00001740  93c1fff3	lbu	r1,-13(r30)
  710  00001744  64220000	snei	r2,r1,#0
  711  00001748  1440000c	bnez	r2,L19_LF2
  712  0000174c  54000000	nop; delay slot nop
  713  00001750  0800000c	j	L16_LF2
  714  00001754  54000000	nop; delay slot nop
  715  00001758          	L19_LF2:
  716  00001758  0bffffa0	j	L15_LF2
  717  0000175c  54000000	nop; delay slot nop
  718  00001760          	L16_LF2:
  719  00001760  8fc1fff4	lw	r1,-12(r30)
  720  00001764  08000004	j	L14_LF2
  721  00001768  54000000	nop; delay slot nop
  722  0000176c          	L14_LF2:
  723  0000176c  8fa20000	lw	r2,0(r29)
  724  00001770  8fa30004	lw	r3,4(r29)
  725  00001774  8fdffff8	lw	r31,-8(r30)
  726  00001778  001ee820	add	r29,r0,r30
  727  0000177c  8fdefffc	lw	r30,-4(r30)
  728  00001780  4be00000	jr	r31
  729  00001784  54000000	nop
  730  00001788          	.endproc _dstrncpy
  731  00001788          	.align 2
  732  00001788          	.proc _dstrcat
  733  00001788          	.global _dstrcat
  734  00001788          	_dstrcat:
  735                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  736  00001788  afbefffc	sw	-4(r29),r30; push fp
  737  0000178c  001df020	add	r30,r0,r29; fp = sp
  738  00001790  afbffff8	sw	-8(r29),r31; push ret addr
  739  00001794  2fbd0018	subui	r29,r29,#24; alloc local storage
  740  00001798  afa20000	sw	0(r29),r2
  741  0000179c  8fc10000	lw	r1,(r30)
  742  000017a0  afc1fff4	sw	-12(r30),r1
  743  000017a4          	L21_LF2:
  744  000017a4  8fc10000	lw	r1,(r30)
  745  000017a8  90220000	lbu	r2,(r1)
  746  000017ac  64410000	snei	r1,r2,#0
  747  000017b0  1420000c	bnez	r1,L23_LF2
  748  000017b4  54000000	nop; delay slot nop
  749  000017b8  0800001c	j	L22_LF2
  750  000017bc  54000000	nop; delay slot nop
  751  000017c0          	L23_LF2:
  752  000017c0  8fc20000	lw	r2,(r30)
  753  000017c4  20410001	addi	r1,r2,#1
  754  000017c8  00011020	add	r2,r0,r1
  755  000017cc  afc20000	sw	(r30),r2
  756  000017d0  0bffffd0	j	L21_LF2
  757  000017d4  54000000	nop; delay slot nop
  758  000017d8          	L22_LF2:
  759  000017d8  23bdfff8	addi	r29,r29,#-8
  760  000017dc  001d0820	add	r1,r0,r29
  761  000017e0  8fc20000	lw	r2,(r30)
  762  000017e4  ac220000	sw	(r1),r2
  763  000017e8  8fc20004	lw	r2,4(r30)
  764  000017ec  ac220004	sw	4(r1),r2
  765  000017f0  0ffffe5c	jal	_dstrcpy
  766  000017f4  54000000	nop; delay slot nop
  767  000017f8  23bd0008	addi	r29,r29,#8
  768  000017fc  8fc1fff4	lw	r1,-12(r30)
  769  00001800  08000004	j	L20_LF2
  770  00001804  54000000	nop; delay slot nop
  771  00001808          	L20_LF2:
  772  00001808  8fa20000	lw	r2,0(r29)
  773  0000180c  8fdffff8	lw	r31,-8(r30)
  774  00001810  001ee820	add	r29,r0,r30
  775  00001814  8fdefffc	lw	r30,-4(r30)
  776  00001818  4be00000	jr	r31
  777  0000181c  54000000	nop
  778  00001820          	.endproc _dstrcat
  779  00001820          	.align 2
  780  00001820          	.proc _dstrncmp
  781  00001820          	.global _dstrncmp
  782  00001820          	_dstrncmp:
  783                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  784  00001820  afbefffc	sw	-4(r29),r30; push fp
  785  00001824  001df020	add	r30,r0,r29; fp = sp
  786  00001828  afbffff8	sw	-8(r29),r31; push ret addr
  787  0000182c  2fbd0018	subui	r29,r29,#24; alloc local storage
  788  00001830  afa20000	sw	0(r29),r2
  789  00001834  afa30004	sw	4(r29),r3
  790  00001838  54000000	nop
  791  0000183c  20010000	addi	r1,r0,#0
  792  00001840  afc1fff4	sw	-12(r30),r1
  793  00001844          	L25_LF2:
  794  00001844  8fc1fff4	lw	r1,-12(r30)
  795  00001848  8fc20008	lw	r2,8(r30)
  796  0000184c  0022082a	slt	r1,r1,r2
  797  00001850  1420000c	bnez	r1,L28_LF2
  798  00001854  54000000	nop; delay slot nop
  799  00001858  08000088	j	L26_LF2
  800  0000185c  54000000	nop; delay slot nop
  801  00001860          	L28_LF2:
  802  00001860  8fc10004	lw	r1,4(r30)
  803  00001864  90220000	lbu	r2,(r1)
  804  00001868  64410000	snei	r1,r2,#0
  805  0000186c  14200018	bnez	r1,L29_LF2
  806  00001870  54000000	nop; delay slot nop
  807  00001874  20010000	addi	r1,r0,#0
  808  00001878  080000d8	j	L24_LF2
  809  0000187c  54000000	nop; delay slot nop
  810  00001880  08000028	j	L30_LF2
  811  00001884  54000000	nop; delay slot nop
  812  00001888          	L29_LF2:
  813  00001888  8fc10000	lw	r1,(r30)
  814  0000188c  8fc20004	lw	r2,4(r30)
  815  00001890  90210000	lbu	r1,(r1)
  816  00001894  90420000	lbu	r2,(r2)
  817  00001898  00220829	sne	r1,r1,r2
  818  0000189c  1020000c	beqz	r1,L30_LF2
  819  000018a0  54000000	nop; delay slot nop
  820  000018a4  0800003c	j	L26_LF2
  821  000018a8  54000000	nop; delay slot nop
  822  000018ac          	L31_LF2:
  823  000018ac          	L30_LF2:
  824  000018ac  8fc20000	lw	r2,(r30)
  825  000018b0  20410001	addi	r1,r2,#1
  826  000018b4  00011020	add	r2,r0,r1
  827  000018b8  afc20000	sw	(r30),r2
  828  000018bc  8fc20004	lw	r2,4(r30)
  829  000018c0  20410001	addi	r1,r2,#1
  830  000018c4  00011020	add	r2,r0,r1
  831  000018c8  afc20004	sw	4(r30),r2
  832  000018cc          	L27_LF2:
  833  000018cc  8fc2fff4	lw	r2,-12(r30)
  834  000018d0  20410001	addi	r1,r2,#1
  835  000018d4  00011020	add	r2,r0,r1
  836  000018d8  afc2fff4	sw	-12(r30),r2
  837  000018dc  0bffff64	j	L25_LF2
  838  000018e0  54000000	nop; delay slot nop
  839  000018e4          	L26_LF2:
  840  000018e4  8fc1fff4	lw	r1,-12(r30)
  841  000018e8  8fc20008	lw	r2,8(r30)
  842  000018ec  00220828	seq	r1,r1,r2
  843  000018f0  10200018	beqz	r1,L32_LF2
  844  000018f4  54000000	nop; delay slot nop
  845  000018f8  20010000	addi	r1,r0,#0
  846  000018fc  08000054	j	L24_LF2
  847  00001900  54000000	nop; delay slot nop
  848  00001904  0800004c	j	L33_LF2
  849  00001908  54000000	nop; delay slot nop
  850  0000190c          	L32_LF2:
  851  0000190c  8fc20000	lw	r2,(r30)
  852  00001910  90410000	lbu	r1,(r2)
  853  00001914  8fc20004	lw	r2,4(r30)
  854  00001918  90430000	lbu	r3,(r2)
  855  0000191c  00230822	sub	r1,r1,r3
  856  00001920  74220000	sgei	r2,r1,#0
  857  00001924  10400020	beqz	r2,L34_LF2
  858  00001928  54000000	nop; delay slot nop
  859  0000192c  8fc10000	lw	r1,(r30)
  860  00001930  8fc20004	lw	r2,4(r30)
  861  00001934  90210000	lbu	r1,(r1)
  862  00001938  90420000	lbu	r2,(r2)
  863  0000193c  00220829	sne	r1,r1,r2
  864  00001940  08000008	j	L35_LF2
  865  00001944  54000000	nop; delay slot nop
  866  00001948          	L34_LF2:
  867  00001948  2001ffff	addi	r1,r0,#-1
  868  0000194c          	L35_LF2:
  869  0000194c  08000004	j	L24_LF2
  870  00001950  54000000	nop; delay slot nop
  871  00001954          	L33_LF2:
  872  00001954          	L24_LF2:
  873  00001954  8fa20000	lw	r2,0(r29)
  874  00001958  8fa30004	lw	r3,4(r29)
  875  0000195c  8fdffff8	lw	r31,-8(r30)
  876  00001960  001ee820	add	r29,r0,r30
  877  00001964  8fdefffc	lw	r30,-4(r30)
  878  00001968  4be00000	jr	r31
  879  0000196c  54000000	nop
  880  00001970          	.endproc _dstrncmp
  881  00001970          	.align 2
  882  00001970          	.proc _dstrlen
  883  00001970          	.global _dstrlen
  884  00001970          	_dstrlen:
  885                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  886  00001970  afbefffc	sw	-4(r29),r30; push fp
  887  00001974  001df020	add	r30,r0,r29; fp = sp
  888  00001978  afbffff8	sw	-8(r29),r31; push ret addr
  889  0000197c  2fbd0018	subui	r29,r29,#24; alloc local storage
  890  00001980  afa20000	sw	0(r29),r2
  891  00001984  20010000	addi	r1,r0,#0
  892  00001988  afc1fff4	sw	-12(r30),r1
  893  0000198c          	L37_LF2:
  894  0000198c  8fc10000	lw	r1,(r30)
  895  00001990  20220001	addi	r2,r1,#1
  896  00001994  afc20000	sw	(r30),r2
  897  00001998  90210000	lbu	r1,(r1)
  898  0000199c  64220000	snei	r2,r1,#0
  899  000019a0  1440000c	bnez	r2,L39_LF2
  900  000019a4  54000000	nop; delay slot nop
  901  000019a8  0800001c	j	L38_LF2
  902  000019ac  54000000	nop; delay slot nop
  903  000019b0          	L39_LF2:
  904  000019b0  8fc2fff4	lw	r2,-12(r30)
  905  000019b4  20410001	addi	r1,r2,#1
  906  000019b8  00011020	add	r2,r0,r1
  907  000019bc  afc2fff4	sw	-12(r30),r2
  908  000019c0  0bffffc8	j	L37_LF2
  909  000019c4  54000000	nop; delay slot nop
  910  000019c8          	L38_LF2:
  911  000019c8  8fc1fff4	lw	r1,-12(r30)
  912  000019cc  08000004	j	L36_LF2
  913  000019d0  54000000	nop; delay slot nop
  914  000019d4          	L36_LF2:
  915  000019d4  8fa20000	lw	r2,0(r29)
  916  000019d8  8fdffff8	lw	r31,-8(r30)
  917  000019dc  001ee820	add	r29,r0,r30
  918  000019e0  8fdefffc	lw	r30,-4(r30)
  919  000019e4  4be00000	jr	r31
  920  000019e8  54000000	nop
  921  000019ec          	.endproc _dstrlen
  922  000019ec          	.align 2
  923  000019ec          	.proc _dstrstr
  924  000019ec          	.global _dstrstr
  925  000019ec          	_dstrstr:
  926                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  927  000019ec  afbefffc	sw	-4(r29),r30; push fp
  928  000019f0  001df020	add	r30,r0,r29; fp = sp
  929  000019f4  afbffff8	sw	-8(r29),r31; push ret addr
  930  000019f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  931  000019fc  afa20000	sw	0(r29),r2
  932  00001a00  23bdfff8	addi	r29,r29,#-8
  933  00001a04  001d0820	add	r1,r0,r29
  934  00001a08  8fc20004	lw	r2,4(r30)
  935  00001a0c  ac220000	sw	(r1),r2
  936  00001a10  0fffff5c	jal	_dstrlen
  937  00001a14  54000000	nop; delay slot nop
  938  00001a18  23bd0008	addi	r29,r29,#8
  939  00001a1c  afc1fff4	sw	-12(r30),r1
  940  00001a20          	L41_LF2:
  941  00001a20  8fc10000	lw	r1,(r30)
  942  00001a24  90220000	lbu	r2,(r1)
  943  00001a28  64410000	snei	r1,r2,#0
  944  00001a2c  1420000c	bnez	r1,L43_LF2
  945  00001a30  54000000	nop; delay slot nop
  946  00001a34  08000060	j	L42_LF2
  947  00001a38  54000000	nop; delay slot nop
  948  00001a3c          	L43_LF2:
  949  00001a3c  23bdfff0	addi	r29,r29,#-16
  950  00001a40  001d0820	add	r1,r0,r29
  951  00001a44  8fc20000	lw	r2,(r30)
  952  00001a48  ac220000	sw	(r1),r2
  953  00001a4c  8fc20004	lw	r2,4(r30)
  954  00001a50  ac220004	sw	4(r1),r2
  955  00001a54  8fc2fff4	lw	r2,-12(r30)
  956  00001a58  ac220008	sw	8(r1),r2
  957  00001a5c  0ffffdc0	jal	_dstrncmp
  958  00001a60  54000000	nop; delay slot nop
  959  00001a64  23bd0010	addi	r29,r29,#16
  960  00001a68  64220000	snei	r2,r1,#0
  961  00001a6c  14400010	bnez	r2,L44_LF2
  962  00001a70  54000000	nop; delay slot nop
  963  00001a74  8fc10000	lw	r1,(r30)
  964  00001a78  08000028	j	L40_LF2
  965  00001a7c  54000000	nop; delay slot nop
  966  00001a80          	L44_LF2:
  967  00001a80  8fc20000	lw	r2,(r30)
  968  00001a84  20410001	addi	r1,r2,#1
  969  00001a88  00011020	add	r2,r0,r1
  970  00001a8c  afc20000	sw	(r30),r2
  971  00001a90  0bffff8c	j	L41_LF2
  972  00001a94  54000000	nop; delay slot nop
  973  00001a98          	L42_LF2:
  974  00001a98  20010000	addi	r1,r0,#0
  975  00001a9c  08000004	j	L40_LF2
  976  00001aa0  54000000	nop; delay slot nop
  977  00001aa4          	L40_LF2:
  978  00001aa4  8fa20000	lw	r2,0(r29)
  979  00001aa8  8fdffff8	lw	r31,-8(r30)
  980  00001aac  001ee820	add	r29,r0,r30
  981  00001ab0  8fdefffc	lw	r30,-4(r30)
  982  00001ab4  4be00000	jr	r31
  983  00001ab8  54000000	nop
  984  00001abc          	.endproc _dstrstr
  985  00001abc          	.align 2
  986  00001abc          	.proc _dmindex
  987  00001abc          	.global _dmindex
  988  00001abc          	_dmindex:
  989                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  990  00001abc  afbefffc	sw	-4(r29),r30; push fp
  991  00001ac0  001df020	add	r30,r0,r29; fp = sp
  992  00001ac4  afbffff8	sw	-8(r29),r31; push ret addr
  993  00001ac8  2fbd0018	subui	r29,r29,#24; alloc local storage
  994  00001acc  afa20000	sw	0(r29),r2
  995  00001ad0  54000000	nop
  996  00001ad4          	L46_LF2:
  997  00001ad4  8fc10000	lw	r1,(r30)
  998  00001ad8  90220000	lbu	r2,(r1)
  999  00001adc  64410000	snei	r1,r2,#0
 1000  00001ae0  1420000c	bnez	r1,L48_LF2
 1001  00001ae4  54000000	nop; delay slot nop
 1002  00001ae8  08000070	j	L47_LF2
 1003  00001aec  54000000	nop; delay slot nop
 1004  00001af0          	L48_LF2:
 1005  00001af0  8fc10004	lw	r1,4(r30)
 1006  00001af4  afc1fff4	sw	-12(r30),r1
 1007  00001af8          	L49_LF2:
 1008  00001af8  8fc1fff4	lw	r1,-12(r30)
 1009  00001afc  90220000	lbu	r2,(r1)
 1010  00001b00  64410000	snei	r1,r2,#0
 1011  00001b04  1420000c	bnez	r1,L52_LF2
 1012  00001b08  54000000	nop; delay slot nop
 1013  00001b0c  08000044	j	L50_LF2
 1014  00001b10  54000000	nop; delay slot nop
 1015  00001b14          	L52_LF2:
 1016  00001b14  8fc10000	lw	r1,(r30)
 1017  00001b18  8fc2fff4	lw	r2,-12(r30)
 1018  00001b1c  90210000	lbu	r1,(r1)
 1019  00001b20  90420000	lbu	r2,(r2)
 1020  00001b24  00220828	seq	r1,r1,r2
 1021  00001b28  10200010	beqz	r1,L51_LF2
 1022  00001b2c  54000000	nop; delay slot nop
 1023  00001b30  8fc10000	lw	r1,(r30)
 1024  00001b34  08000030	j	L45_LF2
 1025  00001b38  54000000	nop; delay slot nop
 1026  00001b3c          	L53_LF2:
 1027  00001b3c          	L51_LF2:
 1028  00001b3c  8fc2fff4	lw	r2,-12(r30)
 1029  00001b40  20410001	addi	r1,r2,#1
 1030  00001b44  00011020	add	r2,r0,r1
 1031  00001b48  afc2fff4	sw	-12(r30),r2
 1032  00001b4c  0bffffa8	j	L49_LF2
 1033  00001b50  54000000	nop; delay slot nop
 1034  00001b54          	L50_LF2:
 1035  00001b54  0bffff7c	j	L46_LF2
 1036  00001b58  54000000	nop; delay slot nop
 1037  00001b5c          	L47_LF2:
 1038  00001b5c  20010000	addi	r1,r0,#0
 1039  00001b60  08000004	j	L45_LF2
 1040  00001b64  54000000	nop; delay slot nop
 1041  00001b68          	L45_LF2:
 1042  00001b68  8fa20000	lw	r2,0(r29)
 1043  00001b6c  8fdffff8	lw	r31,-8(r30)
 1044  00001b70  001ee820	add	r29,r0,r30
 1045  00001b74  8fdefffc	lw	r30,-4(r30)
 1046  00001b78  4be00000	jr	r31
 1047  00001b7c  54000000	nop
 1048  00001b80          	.endproc _dmindex
 1049  00001b80          	.align 2
 1050  00001b80          	.proc _dindex
 1051  00001b80          	.global _dindex
 1052  00001b80          	_dindex:
 1053                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1054  00001b80  afbefffc	sw	-4(r29),r30; push fp
 1055  00001b84  001df020	add	r30,r0,r29; fp = sp
 1056  00001b88  afbffff8	sw	-8(r29),r31; push ret addr
 1057  00001b8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1058  00001b90  afa20000	sw	0(r29),r2
 1059  00001b94  54000000	nop
 1060  00001b98          	L55_LF2:
 1061  00001b98  8fc10000	lw	r1,(r30)
 1062  00001b9c  90220000	lbu	r2,(r1)
 1063  00001ba0  64410000	snei	r1,r2,#0
 1064  00001ba4  1420000c	bnez	r1,L57_LF2
 1065  00001ba8  54000000	nop; delay slot nop
 1066  00001bac  08000040	j	L56_LF2
 1067  00001bb0  54000000	nop; delay slot nop
 1068  00001bb4          	L57_LF2:
 1069  00001bb4  8fc10000	lw	r1,(r30)
 1070  00001bb8  90220000	lbu	r2,(r1)
 1071  00001bbc  8fc10004	lw	r1,4(r30)
 1072  00001bc0  00411028	seq	r2,r2,r1
 1073  00001bc4  10400010	beqz	r2,L58_LF2
 1074  00001bc8  54000000	nop; delay slot nop
 1075  00001bcc  8fc10000	lw	r1,(r30)
 1076  00001bd0  08000028	j	L54_LF2
 1077  00001bd4  54000000	nop; delay slot nop
 1078  00001bd8          	L58_LF2:
 1079  00001bd8  8fc20000	lw	r2,(r30)
 1080  00001bdc  20410001	addi	r1,r2,#1
 1081  00001be0  00011020	add	r2,r0,r1
 1082  00001be4  afc20000	sw	(r30),r2
 1083  00001be8  0bffffac	j	L55_LF2
 1084  00001bec  54000000	nop; delay slot nop
 1085  00001bf0          	L56_LF2:
 1086  00001bf0  20010000	addi	r1,r0,#0
 1087  00001bf4  08000004	j	L54_LF2
 1088  00001bf8  54000000	nop; delay slot nop
 1089  00001bfc          	L54_LF2:
 1090  00001bfc  8fa20000	lw	r2,0(r29)
 1091  00001c00  8fdffff8	lw	r31,-8(r30)
 1092  00001c04  001ee820	add	r29,r0,r30
 1093  00001c08  8fdefffc	lw	r30,-4(r30)
 1094  00001c0c  4be00000	jr	r31
 1095  00001c10  54000000	nop
 1096  00001c14          	.endproc _dindex
 1097  00001c14          	.align 2
 1098  00001c14          	.proc _ditoa
 1099  00001c14          	.global _ditoa
 1100  00001c14          	_ditoa:
 1101                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1102  00001c14  afbefffc	sw	-4(r29),r30; push fp
 1103  00001c18  001df020	add	r30,r0,r29; fp = sp
 1104  00001c1c  afbffff8	sw	-8(r29),r31; push ret addr
 1105  00001c20  2fbd0018	subui	r29,r29,#24; alloc local storage
 1106  00001c24  afa20000	sw	0(r29),r2
 1107  00001c28  afa30004	sw	4(r29),r3
 1108  00001c2c  8fc10000	lw	r1,(r30)
 1109  00001c30  68220000	slti	r2,r1,#0
 1110  00001c34  1040002c	beqz	r2,L60_LF2
 1111  00001c38  54000000	nop; delay slot nop
 1112  00001c3c  8fc10004	lw	r1,4(r30)
 1113  00001c40  20220001	addi	r2,r1,#1
 1114  00001c44  afc20004	sw	4(r30),r2
 1115  00001c48  2002002d	addi	r2,r0,(#0x2d)&0xff
 1116  00001c4c  a0220000	sb	(r1),r2
 1117  00001c50  8fc10000	lw	r1,(r30)
 1118  00001c54  00011022	sub	r2,r0,r1
 1119  00001c58  afc20000	sw	(r30),r2
 1120  00001c5c  08000118	j	L61_LF2
 1121  00001c60  54000000	nop; delay slot nop
 1122  00001c64          	L60_LF2:
 1123  00001c64  8fc10000	lw	r1,(r30)
 1124  00001c68  64220000	snei	r2,r1,#0
 1125  00001c6c  14400020	bnez	r2,L62_LF2
 1126  00001c70  54000000	nop; delay slot nop
 1127  00001c74  8fc10004	lw	r1,4(r30)
 1128  00001c78  20220001	addi	r2,r1,#1
 1129  00001c7c  afc20004	sw	4(r30),r2
 1130  00001c80  20020030	addi	r2,r0,(#0x30)&0xff
 1131  00001c84  a0220000	sb	(r1),r2
 1132  00001c88  080000ec	j	L61_LF2
 1133  00001c8c  54000000	nop; delay slot nop
 1134  00001c90          	L62_LF2:
 1135  00001c90  20010001	addi	r1,r0,#1
 1136  00001c94  afc1fff4	sw	-12(r30),r1
 1137  00001c98          	L64_LF2:
 1138  00001c98  8fc1fff4	lw	r1,-12(r30)
 1139  00001c9c  8fc20000	lw	r2,(r30)
 1140  00001ca0  0022082c	sle	r1,r1,r2
 1141  00001ca4  1420000c	bnez	r1,L66_LF2
 1142  00001ca8  54000000	nop; delay slot nop
 1143  00001cac  08000024	j	L65_LF2
 1144  00001cb0  54000000	nop; delay slot nop
 1145  00001cb4          	L67_LF2:
 1146  00001cb4          	L66_LF2:
 1147  00001cb4  8fc1fff4	lw	r1,-12(r30)
 1148  00001cb8  00011820	add	r3,r0,r1
 1149  00001cbc  50620002	slli	r2,r3,#0x2
 1150  00001cc0  00411020	add	r2,r2,r1
 1151  00001cc4  50410001	slli	r1,r2,#0x1
 1152  00001cc8  afc1fff4	sw	-12(r30),r1
 1153  00001ccc  0bffffc8	j	L64_LF2
 1154  00001cd0  54000000	nop; delay slot nop
 1155  00001cd4          	L65_LF2:
 1156  00001cd4  54000000	nop
 1157  00001cd8          	L68_LF2:
 1158  00001cd8  8fc1fff4	lw	r1,-12(r30)
 1159  00001cdc  2002000a	addi	r2,r0,#10
 1160  00001ce0  00200035	movi2fp	f0,r1
 1161  00001ce4  00400835	movi2fp	f1,r2
 1162  00001ce8  0401000f	div	f0,f0,f1
 1163  00001cec  00000834	movfp2i	r1,f0
 1164  00001cf0  afc1fff4	sw	-12(r30),r1
 1165  00001cf4  8fc10004	lw	r1,4(r30)
 1166  00001cf8  20220001	addi	r2,r1,#1
 1167  00001cfc  afc20004	sw	4(r30),r2
 1168  00001d00  8fc20000	lw	r2,(r30)
 1169  00001d04  8fc3fff4	lw	r3,-12(r30)
 1170  00001d08  00400035	movi2fp	f0,r2
 1171  00001d0c  00600835	movi2fp	f1,r3
 1172  00001d10  0401000f	div	f0,f0,f1
 1173  00001d14  00001034	movfp2i	r2,f0
 1174  00001d18  00021820	add	r3,r0,r2
 1175  00001d1c  20620030	addi	r2,r3,#48
 1176  00001d20  a0220000	sb	(r1),r2
 1177  00001d24  8fc10000	lw	r1,(r30)
 1178  00001d28  8fc3fff4	lw	r3,-12(r30)
 1179  00001d2c  00200035	movi2fp	f0,r1
 1180  00001d30  00600835	movi2fp	f1,r3
 1181  00001d34  0401000f	div	f0,f0,f1
 1182  00001d38  00001034	movfp2i	r2,f0
 1183  00001d3c  8fc3fff4	lw	r3,-12(r30)
 1184  00001d40  00400035	movi2fp	f0,r2
 1185  00001d44  00600835	movi2fp	f1,r3
 1186  00001d48  0401000e	mult	f0,f0,f1
 1187  00001d4c  00001034	movfp2i	r2,f0
 1188  00001d50  00220822	sub	r1,r1,r2
 1189  00001d54  afc10000	sw	(r30),r1
 1190  00001d58          	L70_LF2:
 1191  00001d58  8fc1fff4	lw	r1,-12(r30)
 1192  00001d5c  6c220001	sgti	r2,r1,#1
 1193  00001d60  1440000c	bnez	r2,L71_LF2
 1194  00001d64  54000000	nop; delay slot nop
 1195  00001d68  0800000c	j	L61_LF2
 1196  00001d6c  54000000	nop; delay slot nop
 1197  00001d70          	L71_LF2:
 1198  00001d70  0bffff64	j	L68_LF2
 1199  00001d74  54000000	nop; delay slot nop
 1200  00001d78          	L69_LF2:
 1201  00001d78          	L63_LF2:
 1202  00001d78          	L61_LF2:
 1203  00001d78  8fc10004	lw	r1,4(r30)
 1204  00001d7c  20020000	addi	r2,r0,(#0x0)&0xff
 1205  00001d80  a0220000	sb	(r1),r2
 1206  00001d84          	L59_LF2:
 1207  00001d84  8fa20000	lw	r2,0(r29)
 1208  00001d88  8fa30004	lw	r3,4(r29)
 1209  00001d8c  8fdffff8	lw	r31,-8(r30)
 1210  00001d90  001ee820	add	r29,r0,r30
 1211  00001d94  8fdefffc	lw	r30,-4(r30)
 1212  00001d98  4be00000	jr	r31
 1213  00001d9c  54000000	nop
 1214  00001da0          	.endproc _ditoa
 1215  00001da0          	.align 2
 1216  00001da0          	.proc _dstrtol
 1217  00001da0          	.global _dstrtol
 1218  00001da0          	_dstrtol:
 1219                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1220  00001da0  afbefffc	sw	-4(r29),r30; push fp
 1221  00001da4  001df020	add	r30,r0,r29; fp = sp
 1222  00001da8  afbffff8	sw	-8(r29),r31; push ret addr
 1223  00001dac  2fbd0020	subui	r29,r29,#32; alloc local storage
 1224  00001db0  afa20000	sw	0(r29),r2
 1225  00001db4  20010000	addi	r1,r0,#0
 1226  00001db8  afc1fff4	sw	-12(r30),r1
 1227  00001dbc          	L73_LF2:
 1228  00001dbc  8fc10000	lw	r1,(r30)
 1229  00001dc0  90220000	lbu	r2,(r1)
 1230  00001dc4  60410020	seqi	r1,r2,#32
 1231  00001dc8  14200034	bnez	r1,L75_LF2
 1232  00001dcc  54000000	nop; delay slot nop
 1233  00001dd0  8fc10000	lw	r1,(r30)
 1234  00001dd4  90220000	lbu	r2,(r1)
 1235  00001dd8  60410009	seqi	r1,r2,#9
 1236  00001ddc  14200020	bnez	r1,L75_LF2
 1237  00001de0  54000000	nop; delay slot nop
 1238  00001de4  8fc10000	lw	r1,(r30)
 1239  00001de8  90220000	lbu	r2,(r1)
 1240  00001dec  6041000a	seqi	r1,r2,#10
 1241  00001df0  1420000c	bnez	r1,L75_LF2
 1242  00001df4  54000000	nop; delay slot nop
 1243  00001df8  0800001c	j	L74_LF2
 1244  00001dfc  54000000	nop; delay slot nop
 1245  00001e00          	L75_LF2:
 1246  00001e00  8fc20000	lw	r2,(r30)
 1247  00001e04  20410001	addi	r1,r2,#1
 1248  00001e08  00011020	add	r2,r0,r1
 1249  00001e0c  afc20000	sw	(r30),r2
 1250  00001e10  0bffffa8	j	L73_LF2
 1251  00001e14  54000000	nop; delay slot nop
 1252  00001e18          	L74_LF2:
 1253  00001e18  8fc10004	lw	r1,4(r30)
 1254  00001e1c  64220000	snei	r2,r1,#0
 1255  00001e20  10400010	beqz	r2,L76_LF2
 1256  00001e24  54000000	nop; delay slot nop
 1257  00001e28  8fc10004	lw	r1,4(r30)
 1258  00001e2c  8fc20000	lw	r2,(r30)
 1259  00001e30  ac220000	sw	(r1),r2
 1260  00001e34          	L76_LF2:
 1261  00001e34  8fc10000	lw	r1,(r30)
 1262  00001e38  90220000	lbu	r2,(r1)
 1263  00001e3c  64410000	snei	r1,r2,#0
 1264  00001e40  14200010	bnez	r1,L77_LF2
 1265  00001e44  54000000	nop; delay slot nop
 1266  00001e48  8fc1fff4	lw	r1,-12(r30)
 1267  00001e4c  08000294	j	L72_LF2
 1268  00001e50  54000000	nop; delay slot nop
 1269  00001e54          	L77_LF2:
 1270  00001e54  8fc10000	lw	r1,(r30)
 1271  00001e58  90220000	lbu	r2,(r1)
 1272  00001e5c  6041002d	seqi	r1,r2,#45
 1273  00001e60  10200024	beqz	r1,L78_LF2
 1274  00001e64  54000000	nop; delay slot nop
 1275  00001e68  2001ffff	addi	r1,r0,#-1
 1276  00001e6c  afc1ffec	sw	-20(r30),r1
 1277  00001e70  8fc20000	lw	r2,(r30)
 1278  00001e74  20410001	addi	r1,r2,#1
 1279  00001e78  00011020	add	r2,r0,r1
 1280  00001e7c  afc20000	sw	(r30),r2
 1281  00001e80  0800000c	j	L79_LF2
 1282  00001e84  54000000	nop; delay slot nop
 1283  00001e88          	L78_LF2:
 1284  00001e88  20010001	addi	r1,r0,#1
 1285  00001e8c  afc1ffec	sw	-20(r30),r1
 1286  00001e90          	L79_LF2:
 1287  00001e90  8fc10008	lw	r1,8(r30)
 1288  00001e94  64220000	snei	r2,r1,#0
 1289  00001e98  14400090	bnez	r2,L80_LF2
 1290  00001e9c  54000000	nop; delay slot nop
 1291  00001ea0  8fc10000	lw	r1,(r30)
 1292  00001ea4  90220000	lbu	r2,(r1)
 1293  00001ea8  60410030	seqi	r1,r2,#48
 1294  00001eac  10200074	beqz	r1,L81_LF2
 1295  00001eb0  54000000	nop; delay slot nop
 1296  00001eb4  8fc20000	lw	r2,(r30)
 1297  00001eb8  20410001	addi	r1,r2,#1
 1298  00001ebc  00011020	add	r2,r0,r1
 1299  00001ec0  afc20000	sw	(r30),r2
 1300  00001ec4  8fc10000	lw	r1,(r30)
 1301  00001ec8  90220000	lbu	r2,(r1)
 1302  00001ecc  60410078	seqi	r1,r2,#120
 1303  00001ed0  14200020	bnez	r1,L83_LF2
 1304  00001ed4  54000000	nop; delay slot nop
 1305  00001ed8  8fc10000	lw	r1,(r30)
 1306  00001edc  90220000	lbu	r2,(r1)
 1307  00001ee0  60410058	seqi	r1,r2,#88
 1308  00001ee4  1420000c	bnez	r1,L83_LF2
 1309  00001ee8  54000000	nop; delay slot nop
 1310  00001eec  08000024	j	L82_LF2
 1311  00001ef0  54000000	nop; delay slot nop
 1312  00001ef4          	L83_LF2:
 1313  00001ef4  20010010	addi	r1,r0,#16
 1314  00001ef8  afc10008	sw	8(r30),r1
 1315  00001efc  8fc20000	lw	r2,(r30)
 1316  00001f00  20410001	addi	r1,r2,#1
 1317  00001f04  00011020	add	r2,r0,r1
 1318  00001f08  afc20000	sw	(r30),r2
 1319  00001f0c  0800000c	j	L84_LF2
 1320  00001f10  54000000	nop; delay slot nop
 1321  00001f14          	L82_LF2:
 1322  00001f14  20010008	addi	r1,r0,#8
 1323  00001f18  afc10008	sw	8(r30),r1
 1324  00001f1c          	L84_LF2:
 1325  00001f1c  0800000c	j	L80_LF2
 1326  00001f20  54000000	nop; delay slot nop
 1327  00001f24          	L81_LF2:
 1328  00001f24  2001000a	addi	r1,r0,#10
 1329  00001f28  afc10008	sw	8(r30),r1
 1330  00001f2c          	L85_LF2:
 1331  00001f2c          	L80_LF2:
 1332  00001f2c  8fc10008	lw	r1,8(r30)
 1333  00001f30  70220000	slei	r2,r1,#0
 1334  00001f34  1440001c	bnez	r2,L87_LF2
 1335  00001f38  54000000	nop; delay slot nop
 1336  00001f3c  8fc10008	lw	r1,8(r30)
 1337  00001f40  6c220010	sgti	r2,r1,#16
 1338  00001f44  1440000c	bnez	r2,L87_LF2
 1339  00001f48  54000000	nop; delay slot nop
 1340  00001f4c  08000010	j	L86_LF2
 1341  00001f50  54000000	nop; delay slot nop
 1342  00001f54          	L87_LF2:
 1343  00001f54  8fc1fff4	lw	r1,-12(r30)
 1344  00001f58  08000188	j	L72_LF2
 1345  00001f5c  54000000	nop; delay slot nop
 1346  00001f60          	L86_LF2:
 1347  00001f60  54000000	nop
 1348  00001f64          	L88_LF2:
 1349  00001f64  8fc10000	lw	r1,(r30)
 1350  00001f68  90220000	lbu	r2,(r1)
 1351  00001f6c  6c41002f	sgtui	r1,r2,#47
 1352  00001f70  10200030	beqz	r1,L91_LF2
 1353  00001f74  54000000	nop; delay slot nop
 1354  00001f78  8fc10000	lw	r1,(r30)
 1355  00001f7c  90220000	lbu	r2,(r1)
 1356  00001f80  70410039	sleui	r1,r2,#57
 1357  00001f84  1020001c	beqz	r1,L91_LF2
 1358  00001f88  54000000	nop; delay slot nop
 1359  00001f8c  8fc10000	lw	r1,(r30)
 1360  00001f90  90220000	lbu	r2,(r1)
 1361  00001f94  2041ffd0	addi	r1,r2,#-48
 1362  00001f98  afc1fff0	sw	-16(r30),r1
 1363  00001f9c  0800008c	j	L92_LF2
 1364  00001fa0  54000000	nop; delay slot nop
 1365  00001fa4          	L91_LF2:
 1366  00001fa4  8fc10000	lw	r1,(r30)
 1367  00001fa8  90220000	lbu	r2,(r1)
 1368  00001fac  6c410060	sgtui	r1,r2,#96
 1369  00001fb0  10200030	beqz	r1,L93_LF2
 1370  00001fb4  54000000	nop; delay slot nop
 1371  00001fb8  8fc10000	lw	r1,(r30)
 1372  00001fbc  90220000	lbu	r2,(r1)
 1373  00001fc0  7041007a	sleui	r1,r2,#122
 1374  00001fc4  1020001c	beqz	r1,L93_LF2
 1375  00001fc8  54000000	nop; delay slot nop
 1376  00001fcc  8fc10000	lw	r1,(r30)
 1377  00001fd0  90220000	lbu	r2,(r1)
 1378  00001fd4  2041ffa9	addi	r1,r2,#-87
 1379  00001fd8  afc1fff0	sw	-16(r30),r1
 1380  00001fdc  0800004c	j	L92_LF2
 1381  00001fe0  54000000	nop; delay slot nop
 1382  00001fe4          	L93_LF2:
 1383  00001fe4  8fc10000	lw	r1,(r30)
 1384  00001fe8  90220000	lbu	r2,(r1)
 1385  00001fec  6c410040	sgtui	r1,r2,#64
 1386  00001ff0  10200030	beqz	r1,L95_LF2
 1387  00001ff4  54000000	nop; delay slot nop
 1388  00001ff8  8fc10000	lw	r1,(r30)
 1389  00001ffc  90220000	lbu	r2,(r1)
 1390  00002000  7041005a	sleui	r1,r2,#90
 1391  00002004  1020001c	beqz	r1,L95_LF2
 1392  00002008  54000000	nop; delay slot nop
 1393  0000200c  8fc10000	lw	r1,(r30)
 1394  00002010  90220000	lbu	r2,(r1)
 1395  00002014  2041ffc9	addi	r1,r2,#-55
 1396  00002018  afc1fff0	sw	-16(r30),r1
 1397  0000201c  0800000c	j	L92_LF2
 1398  00002020  54000000	nop; delay slot nop
 1399  00002024          	L95_LF2:
 1400  00002024  200103e8	addi	r1,r0,#1000
 1401  00002028  afc1fff0	sw	-16(r30),r1
 1402  0000202c          	L96_LF2:
 1403  0000202c          	L94_LF2:
 1404  0000202c          	L92_LF2:
 1405  0000202c  8fc1fff0	lw	r1,-16(r30)
 1406  00002030  8fc20008	lw	r2,8(r30)
 1407  00002034  0022082a	slt	r1,r1,r2
 1408  00002038  10200040	beqz	r1,L90_LF2
 1409  0000203c  54000000	nop; delay slot nop
 1410  00002040  8fc1fff4	lw	r1,-12(r30)
 1411  00002044  8fc20008	lw	r2,8(r30)
 1412  00002048  00200035	movi2fp	f0,r1
 1413  0000204c  00400835	movi2fp	f1,r2
 1414  00002050  0401000e	mult	f0,f0,f1
 1415  00002054  00000834	movfp2i	r1,f0
 1416  00002058  afc1fff4	sw	-12(r30),r1
 1417  0000205c  8fc1fff4	lw	r1,-12(r30)
 1418  00002060  8fc2fff0	lw	r2,-16(r30)
 1419  00002064  00220820	add	r1,r1,r2
 1420  00002068  afc1fff4	sw	-12(r30),r1
 1421  0000206c  8fc20000	lw	r2,(r30)
 1422  00002070  20410001	addi	r1,r2,#1
 1423  00002074  00011020	add	r2,r0,r1
 1424  00002078  afc20000	sw	(r30),r2
 1425  0000207c          	L97_LF2:
 1426  0000207c          	L90_LF2:
 1427  0000207c  8fc1fff0	lw	r1,-16(r30)
 1428  00002080  8fc20008	lw	r2,8(r30)
 1429  00002084  0022082a	slt	r1,r1,r2
 1430  00002088  1420000c	bnez	r1,L98_LF2
 1431  0000208c  54000000	nop; delay slot nop
 1432  00002090  0800000c	j	L89_LF2
 1433  00002094  54000000	nop; delay slot nop
 1434  00002098          	L98_LF2:
 1435  00002098  0bfffec8	j	L88_LF2
 1436  0000209c  54000000	nop; delay slot nop
 1437  000020a0          	L89_LF2:
 1438  000020a0  8fc10004	lw	r1,4(r30)
 1439  000020a4  64220000	snei	r2,r1,#0
 1440  000020a8  10400010	beqz	r2,L99_LF2
 1441  000020ac  54000000	nop; delay slot nop
 1442  000020b0  8fc10004	lw	r1,4(r30)
 1443  000020b4  8fc20000	lw	r2,(r30)
 1444  000020b8  ac220000	sw	(r1),r2
 1445  000020bc          	L99_LF2:
 1446  000020bc  8fc1fff4	lw	r1,-12(r30)
 1447  000020c0  8fc2ffec	lw	r2,-20(r30)
 1448  000020c4  00200035	movi2fp	f0,r1
 1449  000020c8  00400835	movi2fp	f1,r2
 1450  000020cc  0401000e	mult	f0,f0,f1
 1451  000020d0  00000834	movfp2i	r1,f0
 1452  000020d4  afc1fff4	sw	-12(r30),r1
 1453  000020d8  8fc1fff4	lw	r1,-12(r30)
 1454  000020dc  08000004	j	L72_LF2
 1455  000020e0  54000000	nop; delay slot nop
 1456  000020e4          	L72_LF2:
 1457  000020e4  8fa20000	lw	r2,0(r29)
 1458  000020e8  8fdffff8	lw	r31,-8(r30)
 1459  000020ec  001ee820	add	r29,r0,r30
 1460  000020f0  8fdefffc	lw	r30,-4(r30)
 1461  000020f4  4be00000	jr	r31
 1462  000020f8  54000000	nop
 1463  000020fc          	.endproc _dstrtol
 1464  000020fc          	.align 2
 1465  000020fc          	.proc _bcopy
 1466  000020fc          	.global _bcopy
 1467  000020fc          	_bcopy:
 1468                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1469  000020fc  afbefffc	sw	-4(r29),r30; push fp
 1470  00002100  001df020	add	r30,r0,r29; fp = sp
 1471  00002104  afbffff8	sw	-8(r29),r31; push ret addr
 1472  00002108  2fbd0010	subui	r29,r29,#16; alloc local storage
 1473  0000210c  afa20000	sw	0(r29),r2
 1474  00002110  afa30004	sw	4(r29),r3
 1475  00002114  54000000	nop
 1476  00002118          	L101_LF2:
 1477  00002118  8fc10008	lw	r1,8(r30)
 1478  0000211c  2022ffff	addi	r2,r1,#-1
 1479  00002120  afc20008	sw	8(r30),r2
 1480  00002124  6c210000	sgti	r1,r1,#0
 1481  00002128  1420000c	bnez	r1,L103_LF2
 1482  0000212c  54000000	nop; delay slot nop
 1483  00002130  0800002c	j	L102_LF2
 1484  00002134  54000000	nop; delay slot nop
 1485  00002138          	L103_LF2:
 1486  00002138  8fc10004	lw	r1,4(r30)
 1487  0000213c  20220001	addi	r2,r1,#1
 1488  00002140  afc20004	sw	4(r30),r2
 1489  00002144  8fc20000	lw	r2,(r30)
 1490  00002148  20430001	addi	r3,r2,#1
 1491  0000214c  afc30000	sw	(r30),r3
 1492  00002150  80420000	lb	r2,(r2)
 1493  00002154  a0220000	sb	(r1),r2
 1494  00002158  0bffffbc	j	L101_LF2
 1495  0000215c  54000000	nop; delay slot nop
 1496  00002160          	L102_LF2:
 1497  00002160          	L100_LF2:
 1498  00002160  8fa20000	lw	r2,0(r29)
 1499  00002164  8fa30004	lw	r3,4(r29)
 1500  00002168  8fdffff8	lw	r31,-8(r30)
 1501  0000216c  001ee820	add	r29,r0,r30
 1502  00002170  8fdefffc	lw	r30,-4(r30)
 1503  00002174  4be00000	jr	r31
 1504  00002178  54000000	nop
 1505  0000217c          	.endproc _bcopy
 1506  0000217c          	.align 2
 1507  0000217c          	.proc _bzero
 1508  0000217c          	.global _bzero
 1509  0000217c          	_bzero:
 1510                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1511  0000217c  afbefffc	sw	-4(r29),r30; push fp
 1512  00002180  001df020	add	r30,r0,r29; fp = sp
 1513  00002184  afbffff8	sw	-8(r29),r31; push ret addr
 1514  00002188  2fbd0010	subui	r29,r29,#16; alloc local storage
 1515  0000218c  afa20000	sw	0(r29),r2
 1516  00002190  54000000	nop
 1517  00002194          	L105_LF2:
 1518  00002194  8fc10004	lw	r1,4(r30)
 1519  00002198  2022ffff	addi	r2,r1,#-1
 1520  0000219c  afc20004	sw	4(r30),r2
 1521  000021a0  6c210000	sgti	r1,r1,#0
 1522  000021a4  1420000c	bnez	r1,L107_LF2
 1523  000021a8  54000000	nop; delay slot nop
 1524  000021ac  08000020	j	L106_LF2
 1525  000021b0  54000000	nop; delay slot nop
 1526  000021b4          	L107_LF2:
 1527  000021b4  8fc10000	lw	r1,(r30)
 1528  000021b8  20220001	addi	r2,r1,#1
 1529  000021bc  afc20000	sw	(r30),r2
 1530  000021c0  20020000	addi	r2,r0,(#0x0)&0xff
 1531  000021c4  a0220000	sb	(r1),r2
 1532  000021c8  0bffffc8	j	L105_LF2
 1533  000021cc  54000000	nop; delay slot nop
 1534  000021d0          	L106_LF2:
 1535  000021d0          	L104_LF2:
 1536  000021d0  8fa20000	lw	r2,0(r29)
 1537  000021d4  8fdffff8	lw	r31,-8(r30)
 1538  000021d8  001ee820	add	r29,r0,r30
 1539  000021dc  8fdefffc	lw	r30,-4(r30)
 1540  000021e0  4be00000	jr	r31
 1541  000021e4  54000000	nop
 1542  000021e8          	.endproc _bzero
 1543  000021e8          	.align 2
 1544  000021e8          	.proc _min
 1545  000021e8          	.global _min
 1546  000021e8          	_min:
 1547                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1548  000021e8  afbefffc	sw	-4(r29),r30; push fp
 1549  000021ec  001df020	add	r30,r0,r29; fp = sp
 1550  000021f0  afbffff8	sw	-8(r29),r31; push ret addr
 1551  000021f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1552  000021f8  afa20000	sw	0(r29),r2
 1553  000021fc  afa30004	sw	4(r29),r3
 1554  00002200  8fc10000	lw	r1,(r30)
 1555  00002204  8fc20004	lw	r2,4(r30)
 1556  00002208  0022182c	sle	r3,r1,r2
 1557  0000220c  14600008	bnez	r3,L109_LF2
 1558  00002210  54000000	nop; delay slot nop
 1559  00002214  8fc10004	lw	r1,4(r30)
 1560  00002218          	L109_LF2:
 1561  00002218  08000004	j	L108_LF2
 1562  0000221c  54000000	nop; delay slot nop
 1563  00002220          	L108_LF2:
 1564  00002220  8fa20000	lw	r2,0(r29)
 1565  00002224  8fa30004	lw	r3,4(r29)
 1566  00002228  8fdffff8	lw	r31,-8(r30)
 1567  0000222c  001ee820	add	r29,r0,r30
 1568  00002230  8fdefffc	lw	r30,-4(r30)
 1569  00002234  4be00000	jr	r31
 1570  00002238  54000000	nop
 1571  0000223c          	.endproc _min
 1572                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1573                      ;;;
 1574                      ;;; Most of the traps are called in files from libtraps.
 1577  0000223c          	.align 2
 1578  0000223c          	.proc _exit
 1579  0000223c          	.global _exit
 1580  0000223c          	_exit:
 1581  0000223c  44000300	trap	#0x300
 1582  00002240  4be00000	jr	r31
 1583  00002244  54000000	nop
 1584  00002248          	.endproc _exit
 1586                      ; for the benefit of gcc.
 1587  00002248          	.proc ___main
 1588  00002248          	.global ___main
 1589  00002248          	___main:
 1590  00002248  4be00000	jr	r31
 1591  0000224c  54000000	nop
 1592  00002250          	.endproc ___main
 1593  00002250          	.text
 1594  00002250          	.global _etext
 1595  00002250          	_etext:
 1596  00002250          	.align 3
 1597  00002250          	.data
 1598  0000313d          	.global _edata
 1599  0000313d          	_edata:
