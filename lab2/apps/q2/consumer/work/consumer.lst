 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 196
    4                      ; Text size: 4508
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  496e636f	.ascii "Incorrect number or arguments\n\000"
   82  00003004  72726563	
   82  00003008  74206e75	
   82  0000300c  6d626572	
   82  00003010  206f7220	
   82  00003014  61726775	
   82  00003018  6d656e74	
   82  0000301c  730a00  	
   83  0000301f          	.align 2
   84  00003020          	LC1_LF0:
   85  00003020  436f756c	.ascii "Could not map memory addresses\n\000"
   85  00003024  64206e6f	
   85  00003028  74206d61	
   85  0000302c  70206d65	
   85  00003030  6d6f7279	
   85  00003034  20616464	
   85  00003038  72657373	
   85  0000303c  65730a00	
   86  00003040          	.align 2
   87  00003040          	LC2_LF0:
   88  00003040  4c6f636b	.ascii "Lock not acquired successfully\n\000"
   88  00003044  206e6f74	
   88  00003048  20616371	
   88  0000304c  75697265	
   88  00003050  64207375	
   88  00003054  63636573	
   88  00003058  7366756c	
   88  0000305c  6c790a00	
   89  00003060          	.align 2
   90  00003060          	LC3_LF0:
   91  00003060  436f6e73	.ascii "Consumer %d removed: %c\n\000"
   91  00003064  756d6572	
   91  00003068  20256420	
   91  0000306c  72656d6f	
   91  00003070  7665643a	
   91  00003074  2025630a	
   91  00003078  00      	
   92  00003079          	.align 2
   93  0000307c          	LC4_LF0:
   94  0000307c  4c6f636b	.ascii "Lock not released successfully\n\000"
   94  00003080  206e6f74	
   94  00003084  2072656c	
   94  00003088  65617365	
   94  0000308c  64207375	
   94  00003090  63636573	
   94  00003094  7366756c	
   94  00003098  6c790a00	
   95  0000309c          	.align 2
   96  0000309c          	LC5_LF0:
   97  0000309c  53656d61	.ascii "Semaphore not incrememted successfully\n\000"
   97  000030a0  70686f72	
   97  000030a4  65206e6f	
   97  000030a8  7420696e	
   97  000030ac  6372656d	
   97  000030b0  656d7465	
   97  000030b4  64207375	
   97  000030b8  63636573	
   97  000030bc  7366756c	
   97  000030c0  6c790a00	
   98  000030c4          	.text
   99  000010d4          	.align 2
  100  000010d4          	.proc _main
  101  000010d4          	.global _main
  102  000010d4          	_main:
  103                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  104  000010d4  afbefffc	sw	-4(r29),r30; push fp
  105  000010d8  001df020	add	r30,r0,r29; fp = sp
  106  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  107  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  108  000010e4  8fc20000	lw	r2,(r30)
  109  000010e8  8fc30004	lw	r3,4(r30)
  110  000010ec  0c0010a4	jal	___main
  111  000010f0  54000000	nop; not filled.
  112  000010f4  2009000b	addi	r9,r0,#11
  113  000010f8  20060000	addi	r6,r0,#0
  114  000010fc  64410004	snei	r1,r2,#4
  115  00001100  10200028	beqz	r1,L14_LF0
  116  00001104  54000000	nop; not filled.
  117  00001108  23bdfff8	addi	r29,r29,#-8
  118  0000110c  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  119  00001110  254a3000	addui	r10,r10,(LC0_LF0)&0xffff
  120  00001114  afaa0000	sw	(r29),r10
  121  00001118  0c000270	jal	_Printf
  122  0000111c  54000000	nop; not filled.
  123  00001120  0c00031c	jal	_Exit
  124  00001124  54000000	nop; not filled.
  125  00001128  23bd0008	addi	r29,r29,#8
  126  0000112c          	L14_LF0:
  127  0000112c  23bdfff0	addi	r29,r29,#-16
  128  00001130  8c6a0004	lw	r10,4(r3)
  129  00001134  afaa0000	sw	(r29),r10
  130  00001138  200a0000	addi	r10,r0,#0
  131  0000113c  afaa0004	sw	4(r29),r10
  132  00001140  200a000a	addi	r10,r0,#10
  133  00001144  afaa0008	sw	8(r29),r10
  134  00001148  0c000ba0	jal	_dstrtol
  135  0000114c  54000000	nop; not filled.
  136  00001150  00011020	add	r2,r0,r1
  137  00001154  8c6a0008	lw	r10,8(r3)
  138  00001158  afaa0000	sw	(r29),r10
  139  0000115c  200a0000	addi	r10,r0,#0
  140  00001160  afaa0004	sw	4(r29),r10
  141  00001164  200a000a	addi	r10,r0,#10
  142  00001168  afaa0008	sw	8(r29),r10
  143  0000116c  0c000b7c	jal	_dstrtol
  144  00001170  54000000	nop; not filled.
  145  00001174  00014020	add	r8,r0,r1
  146  00001178  8c63000c	lw	r3,12(r3)
  147  0000117c  afa30000	sw	(r29),r3
  148  00001180  200a0000	addi	r10,r0,#0
  149  00001184  afaa0004	sw	4(r29),r10
  150  00001188  200a000a	addi	r10,r0,#10
  151  0000118c  afaa0008	sw	8(r29),r10
  152  00001190  0c000b58	jal	_dstrtol
  153  00001194  54000000	nop; not filled.
  154  00001198  00012820	add	r5,r0,r1
  155  0000119c  afa20000	sw	(r29),r2
  156  000011a0  0c000218	jal	_shmat
  157  000011a4  54000000	nop; not filled.
  158  000011a8  00012020	add	r4,r0,r1
  159  000011ac  23bd0010	addi	r29,r29,#16
  160  000011b0  64810000	snei	r1,r4,#0
  161  000011b4  14200028	bnez	r1,L15_LF0
  162  000011b8  54000000	nop; not filled.
  163  000011bc  23bdfff8	addi	r29,r29,#-8
  164  000011c0  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  165  000011c4  254a3020	addui	r10,r10,(LC1_LF0)&0xffff
  166  000011c8  afaa0000	sw	(r29),r10
  167  000011cc  0c0001bc	jal	_Printf
  168  000011d0  54000000	nop; not filled.
  169  000011d4  0c000268	jal	_Exit
  170  000011d8  54000000	nop; not filled.
  171  000011dc  23bd0008	addi	r29,r29,#8
  172  000011e0          	L15_LF0:
  173  000011e0  2007000b	addi	r7,r0,#11
  174  000011e4          	L18_LF0:
  175  000011e4  23bdfff8	addi	r29,r29,#-8
  176  000011e8  afa50000	sw	(r29),r5
  177  000011ec  0c000208	jal	_lock_acquire
  178  000011f0  54000000	nop; not filled.
  179  000011f4  23bd0008	addi	r29,r29,#8
  180  000011f8  64210001	snei	r1,r1,#1
  181  000011fc  10200028	beqz	r1,L19_LF0
  182  00001200  54000000	nop; not filled.
  183  00001204  23bdfff8	addi	r29,r29,#-8
  184  00001208  3c0a0000	lhi	r10,((LC2_LF0)>>16)&0xffff
  185  0000120c  254a3040	addui	r10,r10,(LC2_LF0)&0xffff
  186  00001210  afaa0000	sw	(r29),r10
  187  00001214  0c000174	jal	_Printf
  188  00001218  54000000	nop; not filled.
  189  0000121c  0c000220	jal	_Exit
  190  00001220  54000000	nop; not filled.
  191  00001224  23bd0008	addi	r29,r29,#8
  192  00001228          	L19_LF0:
  193  00001228  8c81000c	lw	r1,12(r4)
  194  0000122c  8c820010	lw	r2,16(r4)
  195  00001230  00220829	sne	r1,r1,r2
  196  00001234  10200070	beqz	r1,L20_LF0
  197  00001238  54000000	nop; not filled.
  198  0000123c  0c000158	jal	_getpid
  199  00001240  54000000	nop; not filled.
  200  00001244  23bdfff0	addi	r29,r29,#-16
  201  00001248  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  202  0000124c  254a3060	addui	r10,r10,(LC3_LF0)&0xffff
  203  00001250  afaa0000	sw	(r29),r10
  204  00001254  afa10004	sw	4(r29),r1
  205  00001258  8c810010	lw	r1,16(r4)
  206  0000125c  00810820	add	r1,r4,r1
  207  00001260  90210000	lbu	r1,(r1)
  208  00001264  afa10008	sw	8(r29),r1
  209  00001268  0c000120	jal	_Printf
  210  0000126c  54000000	nop; not filled.
  211  00001270  8c810010	lw	r1,16(r4)
  212  00001274  20230001	addi	r3,r1,#1
  213  00001278  00600035	movi2fp	f0,r3
  214  0000127c  00e00835	movi2fp	f1,r7
  215  00001280  0401000f	div	f0,f0,f1
  216  00001284  00001034	movfp2i	r2,f0
  217  00001288  50410001	slli	r1,r2,#0x1
  218  0000128c  00220820	add	r1,r1,r2
  219  00001290  50210002	slli	r1,r1,#0x2
  220  00001294  00220822	sub	r1,r1,r2
  221  00001298  00610822	sub	r1,r3,r1
  222  0000129c  ac810010	sw	16(r4),r1
  223  000012a0  20c60001	addi	r6,r6,#1
  224  000012a4  23bd0010	addi	r29,r29,#16
  225  000012a8          	L20_LF0:
  226  000012a8  23bdfff8	addi	r29,r29,#-8
  227  000012ac  afa50000	sw	(r29),r5
  228  000012b0  0c000150	jal	_lock_release
  229  000012b4  54000000	nop; not filled.
  230  000012b8  23bd0008	addi	r29,r29,#8
  231  000012bc  64210001	snei	r1,r1,#1
  232  000012c0  10200028	beqz	r1,L16_LF0
  233  000012c4  54000000	nop; not filled.
  234  000012c8  23bdfff8	addi	r29,r29,#-8
  235  000012cc  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  236  000012d0  254a307c	addui	r10,r10,(LC4_LF0)&0xffff
  237  000012d4  afaa0000	sw	(r29),r10
  238  000012d8  0c0000b0	jal	_Printf
  239  000012dc  54000000	nop; not filled.
  240  000012e0  0c00015c	jal	_Exit
  241  000012e4  54000000	nop; not filled.
  242  000012e8  23bd0008	addi	r29,r29,#8
  243  000012ec          	L16_LF0:
  244  000012ec  00c9082a	slt	r1,r6,r9
  245  000012f0  1420fef0	bnez	r1,L18_LF0
  246  000012f4  54000000	nop; not filled.
  247  000012f8  23bdfff8	addi	r29,r29,#-8
  248  000012fc  afa80000	sw	(r29),r8
  249  00001300  0c0000dc	jal	_sem_signal
  250  00001304  54000000	nop; not filled.
  251  00001308  23bd0008	addi	r29,r29,#8
  252  0000130c  64210001	snei	r1,r1,#1
  253  00001310  10200028	beqz	r1,L23_LF0
  254  00001314  54000000	nop; not filled.
  255  00001318  23bdfff8	addi	r29,r29,#-8
  256  0000131c  3c0a0000	lhi	r10,((LC5_LF0)>>16)&0xffff
  257  00001320  254a309c	addui	r10,r10,(LC5_LF0)&0xffff
  258  00001324  afaa0000	sw	(r29),r10
  259  00001328  0c000060	jal	_Printf
  260  0000132c  54000000	nop; not filled.
  261  00001330  0c00010c	jal	_Exit
  262  00001334  54000000	nop; not filled.
  263  00001338  23bd0008	addi	r29,r29,#8
  264  0000133c          	L23_LF0:
  265  0000133c  0c000e48	jal	_exit
  266  00001340  54000000	nop
  267  00001344          	.endproc _main
  268                      ;;;
  269                      ;;; Stub functions for DLX traps.
  270                      ;;;
  271                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  272                      ;;;
  273                      ;;; The traps such as Open and Close
  274                      ;;; (note the capital letters) are for use by user programs.  The traps
  275                      ;;; with names such as open and close (lower case) are for use by the OS.
  276                      ;;;
  279  00001344          	.align 2
  281                      ;;; The following are the traps to be used by user-level programs
  282                      ;;;
  284  00001344          	.align 2
  285  00001344          	.proc _Open
  286  00001344          	.global _Open
  287  00001344          	_Open:
  288                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  289                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  290                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  291  00001344  44000213	trap	#0x213
  292  00001348  4be00000	jr	r31
  293  0000134c  54000000	nop
  294  00001350          	.endproc _Open
  296  00001350          	.proc _Close
  297  00001350          	.global _Close
  298  00001350          	_Close:
  299  00001350  44000214	trap	#0x214
  300  00001354  4be00000	jr	r31
  301  00001358  54000000	nop
  302  0000135c          	.endproc _Close
  304  0000135c          	.proc _Read
  305  0000135c          	.global _Read
  306  0000135c          	_Read:
  307  0000135c  44000210	trap	#0x210
  308  00001360  4be00000	jr	r31
  309  00001364  54000000	nop
  310  00001368          	.endproc _Read
  312  00001368          	.proc _Write
  313  00001368          	.global _Write
  314  00001368          	_Write:
  315  00001368  44000211	trap	#0x211
  316  0000136c  4be00000	jr	r31
  317  00001370  54000000	nop
  318  00001374          	.endproc _Write
  320  00001374          	.proc _Lseek
  321  00001374          	.global _Lseek
  322  00001374          	_Lseek:
  323  00001374  44000212	trap	#0x212
  324  00001378  4be00000	jr	r31
  325  0000137c  54000000	nop
  326  00001380          	.endproc _Lseek
  328  00001380          	.proc _Putchar
  329  00001380          	.global _Putchar
  330  00001380          	_Putchar:
  331  00001380  44000280	trap	#0x280
  332  00001384  4be00000	jr	r31
  333  00001388  54000000	nop
  334  0000138c          	.endproc _Putchar
  336  0000138c          	.proc _Printf
  337  0000138c          	.global _Printf
  338  0000138c          	_Printf:
  339  0000138c  44000201	trap	#0x201
  340  00001390  4be00000	jr	r31
  341  00001394  54000000	nop
  342  00001398          	.endproc _Printf
  344  00001398          	.proc _getpid
  345  00001398          	.global _getpid
  346  00001398          	_getpid:
  347  00001398  44000431	trap	#0x431
  348  0000139c  4be00000	jr	r31
  349  000013a0  54000000	nop
  350  000013a4          	.endproc _getpid
  352  000013a4          	.proc _process_create
  353  000013a4          	.global _process_create
  354  000013a4          	_process_create:
  355  000013a4  44000432	trap	#0x432
  356  000013a8  4be00000	jr	r31
  357  000013ac  54000000	nop
  358  000013b0          	.endproc _process_create
  360  000013b0          	.proc _shmget
  361  000013b0          	.global _shmget
  362  000013b0          	_shmget:
  363  000013b0  44000440	trap	#0x440
  364  000013b4  4be00000	jr	r31
  365  000013b8  54000000	nop
  366  000013bc          	.endproc _shmget
  368  000013bc          	.proc _shmat
  369  000013bc          	.global _shmat
  370  000013bc          	_shmat:
  371  000013bc  44000441	trap	#0x441
  372  000013c0  4be00000	jr	r31
  373  000013c4  54000000	nop
  374  000013c8          	.endproc _shmat
  376  000013c8          	.proc _sem_create
  377  000013c8          	.global _sem_create
  378  000013c8          	_sem_create:
  379  000013c8  44000450	trap	#0x450
  380  000013cc  4be00000	jr	r31
  381  000013d0  54000000	nop
  382  000013d4          	.endproc _sem_create
  384  000013d4          	.proc _sem_wait
  385  000013d4          	.global _sem_wait
  386  000013d4          	_sem_wait:
  387  000013d4  44000451	trap	#0x451
  388  000013d8  4be00000	jr	r31
  389  000013dc  54000000	nop
  390  000013e0          	.endproc _sem_wait
  392  000013e0          	.proc _sem_signal
  393  000013e0          	.global _sem_signal
  394  000013e0          	_sem_signal:
  395  000013e0  44000452	trap	#0x452
  396  000013e4  4be00000	jr	r31
  397  000013e8  54000000	nop
  398  000013ec          	.endproc _sem_signal
  400  000013ec          	.proc _lock_create
  401  000013ec          	.global _lock_create
  402  000013ec          	_lock_create:
  403  000013ec  44000453	trap	#0x453
  404  000013f0  4be00000	jr	r31
  405  000013f4  54000000	nop
  406  000013f8          	.endproc _lock_create
  408  000013f8          	.proc _lock_acquire
  409  000013f8          	.global _lock_acquire
  410  000013f8          	_lock_acquire:
  411  000013f8  44000454	trap	#0x454
  412  000013fc  4be00000	jr	r31
  413  00001400  54000000	nop
  414  00001404          	.endproc _lock_acquire
  416  00001404          	.proc _lock_release
  417  00001404          	.global _lock_release
  418  00001404          	_lock_release:
  419  00001404  44000455	trap	#0x455
  420  00001408  4be00000	jr	r31
  421  0000140c  54000000	nop
  422  00001410          	.endproc _lock_release
  424  00001410          	.proc _cond_create
  425  00001410          	.global _cond_create
  426  00001410          	_cond_create:
  427  00001410  44000456	trap	#0x456
  428  00001414  4be00000	jr	r31
  429  00001418  54000000	nop
  430  0000141c          	.endproc _cond_create
  432  0000141c          	.proc _cond_wait
  433  0000141c          	.global _cond_wait
  434  0000141c          	_cond_wait:
  435  0000141c  44000457	trap	#0x457
  436  00001420  4be00000	jr	r31
  437  00001424  54000000	nop
  438  00001428          	.endproc _cond_wait
  440  00001428          	.proc _cond_signal
  441  00001428          	.global _cond_signal
  442  00001428          	_cond_signal:
  443  00001428  44000458	trap	#0x458
  444  0000142c  4be00000	jr	r31
  445  00001430  54000000	nop
  446  00001434          	.endproc _cond_signal
  448  00001434          	.proc _cond_broadcast
  449  00001434          	.global _cond_broadcast
  450  00001434          	_cond_broadcast:
  451  00001434  44000455	trap	#0x455
  452  00001438  4be00000	jr	r31
  453  0000143c  54000000	nop
  454  00001440          	.endproc _cond_broadcast
  456  00001440          	.proc _Exit
  457  00001440          	.global _Exit
  458  00001440          	_Exit:
  459  00001440  44000500	trap	#0x500
  460  00001444  4be00000	jr	r31
  461  00001448  54000000	nop
  462  0000144c          	.endproc _Exit
  463                      ; Compiled by GCC
  465  0000144c          	.align 2
  466  0000144c          	.proc _isspace
  467  0000144c          	.global _isspace
  468  0000144c          	_isspace:
  469                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  470  0000144c  afbefffc	sw	-4(r29),r30; push fp
  471  00001450  001df020	add	r30,r0,r29; fp = sp
  472  00001454  afbffff8	sw	-8(r29),r31; push ret addr
  473  00001458  2fbd0018	subui	r29,r29,#24; alloc local storage
  474  0000145c  afa20000	sw	0(r29),r2
  475  00001460  afa30004	sw	4(r29),r3
  476  00001464  afa40008	sw	8(r29),r4
  477  00001468  83c20003	lb	r2,3(r30)
  478  0000146c  20010000	addi	r1,r0,#0
  479  00001470  304300ff	andi	r3,r2,#0x00ff
  480  00001474  60640020	seqi	r4,r3,#32
  481  00001478  1480002c	bnez	r4,L3_LF2
  482  0000147c  54000000	nop; delay slot nop
  483  00001480  304300ff	andi	r3,r2,#0x00ff
  484  00001484  60640009	seqi	r4,r3,#9
  485  00001488  1480001c	bnez	r4,L3_LF2
  486  0000148c  54000000	nop; delay slot nop
  487  00001490  304300ff	andi	r3,r2,#0x00ff
  488  00001494  6064000a	seqi	r4,r3,#10
  489  00001498  1480000c	bnez	r4,L3_LF2
  490  0000149c  54000000	nop; delay slot nop
  491  000014a0  08000008	j	L2_LF2
  492  000014a4  54000000	nop; delay slot nop
  493  000014a8          	L3_LF2:
  494  000014a8  20010001	addi	r1,r0,#1
  495  000014ac          	L2_LF2:
  496  000014ac  08000004	j	L1_LF2
  497  000014b0  54000000	nop; delay slot nop
  498  000014b4          	L1_LF2:
  499  000014b4  8fa20000	lw	r2,0(r29)
  500  000014b8  8fa30004	lw	r3,4(r29)
  501  000014bc  8fa40008	lw	r4,8(r29)
  502  000014c0  8fdffff8	lw	r31,-8(r30)
  503  000014c4  001ee820	add	r29,r0,r30
  504  000014c8  8fdefffc	lw	r30,-4(r30)
  505  000014cc  4be00000	jr	r31
  506  000014d0  54000000	nop
  507  000014d4          	.endproc _isspace
  508  000014d4          	.align 2
  509  000014d4          	.proc _isxdigit
  510  000014d4          	.global _isxdigit
  511  000014d4          	_isxdigit:
  512                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  513  000014d4  afbefffc	sw	-4(r29),r30; push fp
  514  000014d8  001df020	add	r30,r0,r29; fp = sp
  515  000014dc  afbffff8	sw	-8(r29),r31; push ret addr
  516  000014e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  517  000014e4  afa20000	sw	0(r29),r2
  518  000014e8  afa30004	sw	4(r29),r3
  519  000014ec  afa40008	sw	8(r29),r4
  520  000014f0  83c20003	lb	r2,3(r30)
  521  000014f4  20010000	addi	r1,r0,#0
  522  000014f8  304300ff	andi	r3,r2,#0x00ff
  523  000014fc  6c64002f	sgtui	r4,r3,#47
  524  00001500  1080001c	beqz	r4,L7_LF2
  525  00001504  54000000	nop; delay slot nop
  526  00001508  304300ff	andi	r3,r2,#0x00ff
  527  0000150c  70640039	sleui	r4,r3,#57
  528  00001510  1480005c	bnez	r4,L6_LF2
  529  00001514  54000000	nop; delay slot nop
  530  00001518  08000004	j	L7_LF2
  531  0000151c  54000000	nop; delay slot nop
  532  00001520          	L7_LF2:
  533  00001520  304300ff	andi	r3,r2,#0x00ff
  534  00001524  6c640060	sgtui	r4,r3,#96
  535  00001528  1080001c	beqz	r4,L8_LF2
  536  0000152c  54000000	nop; delay slot nop
  537  00001530  304300ff	andi	r3,r2,#0x00ff
  538  00001534  70640066	sleui	r4,r3,#102
  539  00001538  14800034	bnez	r4,L6_LF2
  540  0000153c  54000000	nop; delay slot nop
  541  00001540  08000004	j	L8_LF2
  542  00001544  54000000	nop; delay slot nop
  543  00001548          	L8_LF2:
  544  00001548  304300ff	andi	r3,r2,#0x00ff
  545  0000154c  6c640040	sgtui	r4,r3,#64
  546  00001550  10800020	beqz	r4,L5_LF2
  547  00001554  54000000	nop; delay slot nop
  548  00001558  304300ff	andi	r3,r2,#0x00ff
  549  0000155c  70640041	sleui	r4,r3,#65
  550  00001560  1480000c	bnez	r4,L6_LF2
  551  00001564  54000000	nop; delay slot nop
  552  00001568  08000008	j	L5_LF2
  553  0000156c  54000000	nop; delay slot nop
  554  00001570          	L6_LF2:
  555  00001570  20010001	addi	r1,r0,#1
  556  00001574          	L5_LF2:
  557  00001574  08000004	j	L4_LF2
  558  00001578  54000000	nop; delay slot nop
  559  0000157c          	L4_LF2:
  560  0000157c  8fa20000	lw	r2,0(r29)
  561  00001580  8fa30004	lw	r3,4(r29)
  562  00001584  8fa40008	lw	r4,8(r29)
  563  00001588  8fdffff8	lw	r31,-8(r30)
  564  0000158c  001ee820	add	r29,r0,r30
  565  00001590  8fdefffc	lw	r30,-4(r30)
  566  00001594  4be00000	jr	r31
  567  00001598  54000000	nop
  568  0000159c          	.endproc _isxdigit
  569  0000159c          	.align 2
  570  0000159c          	.proc _dstrcpy
  571  0000159c          	.global _dstrcpy
  572  0000159c          	_dstrcpy:
  573                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  574  0000159c  afbefffc	sw	-4(r29),r30; push fp
  575  000015a0  001df020	add	r30,r0,r29; fp = sp
  576  000015a4  afbffff8	sw	-8(r29),r31; push ret addr
  577  000015a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  578  000015ac  afa20000	sw	0(r29),r2
  579  000015b0  afa30004	sw	4(r29),r3
  580  000015b4  8fc10000	lw	r1,(r30)
  581  000015b8  afc1fff4	sw	-12(r30),r1
  582  000015bc          	L10_LF2:
  583  000015bc  8fc10000	lw	r1,(r30)
  584  000015c0  20220001	addi	r2,r1,#1
  585  000015c4  afc20000	sw	(r30),r2
  586  000015c8  8fc20004	lw	r2,4(r30)
  587  000015cc  20430001	addi	r3,r2,#1
  588  000015d0  afc30004	sw	4(r30),r3
  589  000015d4  80420000	lb	r2,(r2)
  590  000015d8  a0220000	sb	(r1),r2
  591  000015dc  a3c2fff3	sb	-13(r30),r2
  592  000015e0          	L12_LF2:
  593  000015e0  93c1fff3	lbu	r1,-13(r30)
  594  000015e4  64220000	snei	r2,r1,#0
  595  000015e8  1440000c	bnez	r2,L13_LF2
  596  000015ec  54000000	nop; delay slot nop
  597  000015f0  0800000c	j	L11_LF2
  598  000015f4  54000000	nop; delay slot nop
  599  000015f8          	L13_LF2:
  600  000015f8  0bffffc0	j	L10_LF2
  601  000015fc  54000000	nop; delay slot nop
  602  00001600          	L11_LF2:
  603  00001600  8fc1fff4	lw	r1,-12(r30)
  604  00001604  08000004	j	L9_LF2
  605  00001608  54000000	nop; delay slot nop
  606  0000160c          	L9_LF2:
  607  0000160c  8fa20000	lw	r2,0(r29)
  608  00001610  8fa30004	lw	r3,4(r29)
  609  00001614  8fdffff8	lw	r31,-8(r30)
  610  00001618  001ee820	add	r29,r0,r30
  611  0000161c  8fdefffc	lw	r30,-4(r30)
  612  00001620  4be00000	jr	r31
  613  00001624  54000000	nop
  614  00001628          	.endproc _dstrcpy
  615  00001628          	.align 2
  616  00001628          	.proc _dstrncpy
  617  00001628          	.global _dstrncpy
  618  00001628          	_dstrncpy:
  619                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  620  00001628  afbefffc	sw	-4(r29),r30; push fp
  621  0000162c  001df020	add	r30,r0,r29; fp = sp
  622  00001630  afbffff8	sw	-8(r29),r31; push ret addr
  623  00001634  2fbd0018	subui	r29,r29,#24; alloc local storage
  624  00001638  afa20000	sw	0(r29),r2
  625  0000163c  afa30004	sw	4(r29),r3
  626  00001640  8fc10000	lw	r1,(r30)
  627  00001644  afc1fff4	sw	-12(r30),r1
  628  00001648          	L15_LF2:
  629  00001648  8fc10008	lw	r1,8(r30)
  630  0000164c  2022ffff	addi	r2,r1,#-1
  631  00001650  afc20008	sw	8(r30),r2
  632  00001654  70210000	slei	r1,r1,#0
  633  00001658  1020000c	beqz	r1,L18_LF2
  634  0000165c  54000000	nop; delay slot nop
  635  00001660  08000048	j	L16_LF2
  636  00001664  54000000	nop; delay slot nop
  637  00001668          	L18_LF2:
  638  00001668  8fc10000	lw	r1,(r30)
  639  0000166c  20220001	addi	r2,r1,#1
  640  00001670  afc20000	sw	(r30),r2
  641  00001674  8fc20004	lw	r2,4(r30)
  642  00001678  20430001	addi	r3,r2,#1
  643  0000167c  afc30004	sw	4(r30),r3
  644  00001680  80420000	lb	r2,(r2)
  645  00001684  a0220000	sb	(r1),r2
  646  00001688  a3c2fff3	sb	-13(r30),r2
  647  0000168c          	L17_LF2:
  648  0000168c  93c1fff3	lbu	r1,-13(r30)
  649  00001690  64220000	snei	r2,r1,#0
  650  00001694  1440000c	bnez	r2,L19_LF2
  651  00001698  54000000	nop; delay slot nop
  652  0000169c  0800000c	j	L16_LF2
  653  000016a0  54000000	nop; delay slot nop
  654  000016a4          	L19_LF2:
  655  000016a4  0bffffa0	j	L15_LF2
  656  000016a8  54000000	nop; delay slot nop
  657  000016ac          	L16_LF2:
  658  000016ac  8fc1fff4	lw	r1,-12(r30)
  659  000016b0  08000004	j	L14_LF2
  660  000016b4  54000000	nop; delay slot nop
  661  000016b8          	L14_LF2:
  662  000016b8  8fa20000	lw	r2,0(r29)
  663  000016bc  8fa30004	lw	r3,4(r29)
  664  000016c0  8fdffff8	lw	r31,-8(r30)
  665  000016c4  001ee820	add	r29,r0,r30
  666  000016c8  8fdefffc	lw	r30,-4(r30)
  667  000016cc  4be00000	jr	r31
  668  000016d0  54000000	nop
  669  000016d4          	.endproc _dstrncpy
  670  000016d4          	.align 2
  671  000016d4          	.proc _dstrcat
  672  000016d4          	.global _dstrcat
  673  000016d4          	_dstrcat:
  674                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  675  000016d4  afbefffc	sw	-4(r29),r30; push fp
  676  000016d8  001df020	add	r30,r0,r29; fp = sp
  677  000016dc  afbffff8	sw	-8(r29),r31; push ret addr
  678  000016e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  679  000016e4  afa20000	sw	0(r29),r2
  680  000016e8  8fc10000	lw	r1,(r30)
  681  000016ec  afc1fff4	sw	-12(r30),r1
  682  000016f0          	L21_LF2:
  683  000016f0  8fc10000	lw	r1,(r30)
  684  000016f4  90220000	lbu	r2,(r1)
  685  000016f8  64410000	snei	r1,r2,#0
  686  000016fc  1420000c	bnez	r1,L23_LF2
  687  00001700  54000000	nop; delay slot nop
  688  00001704  0800001c	j	L22_LF2
  689  00001708  54000000	nop; delay slot nop
  690  0000170c          	L23_LF2:
  691  0000170c  8fc20000	lw	r2,(r30)
  692  00001710  20410001	addi	r1,r2,#1
  693  00001714  00011020	add	r2,r0,r1
  694  00001718  afc20000	sw	(r30),r2
  695  0000171c  0bffffd0	j	L21_LF2
  696  00001720  54000000	nop; delay slot nop
  697  00001724          	L22_LF2:
  698  00001724  23bdfff8	addi	r29,r29,#-8
  699  00001728  001d0820	add	r1,r0,r29
  700  0000172c  8fc20000	lw	r2,(r30)
  701  00001730  ac220000	sw	(r1),r2
  702  00001734  8fc20004	lw	r2,4(r30)
  703  00001738  ac220004	sw	4(r1),r2
  704  0000173c  0ffffe5c	jal	_dstrcpy
  705  00001740  54000000	nop; delay slot nop
  706  00001744  23bd0008	addi	r29,r29,#8
  707  00001748  8fc1fff4	lw	r1,-12(r30)
  708  0000174c  08000004	j	L20_LF2
  709  00001750  54000000	nop; delay slot nop
  710  00001754          	L20_LF2:
  711  00001754  8fa20000	lw	r2,0(r29)
  712  00001758  8fdffff8	lw	r31,-8(r30)
  713  0000175c  001ee820	add	r29,r0,r30
  714  00001760  8fdefffc	lw	r30,-4(r30)
  715  00001764  4be00000	jr	r31
  716  00001768  54000000	nop
  717  0000176c          	.endproc _dstrcat
  718  0000176c          	.align 2
  719  0000176c          	.proc _dstrncmp
  720  0000176c          	.global _dstrncmp
  721  0000176c          	_dstrncmp:
  722                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  723  0000176c  afbefffc	sw	-4(r29),r30; push fp
  724  00001770  001df020	add	r30,r0,r29; fp = sp
  725  00001774  afbffff8	sw	-8(r29),r31; push ret addr
  726  00001778  2fbd0018	subui	r29,r29,#24; alloc local storage
  727  0000177c  afa20000	sw	0(r29),r2
  728  00001780  afa30004	sw	4(r29),r3
  729  00001784  54000000	nop
  730  00001788  20010000	addi	r1,r0,#0
  731  0000178c  afc1fff4	sw	-12(r30),r1
  732  00001790          	L25_LF2:
  733  00001790  8fc1fff4	lw	r1,-12(r30)
  734  00001794  8fc20008	lw	r2,8(r30)
  735  00001798  0022082a	slt	r1,r1,r2
  736  0000179c  1420000c	bnez	r1,L28_LF2
  737  000017a0  54000000	nop; delay slot nop
  738  000017a4  08000088	j	L26_LF2
  739  000017a8  54000000	nop; delay slot nop
  740  000017ac          	L28_LF2:
  741  000017ac  8fc10004	lw	r1,4(r30)
  742  000017b0  90220000	lbu	r2,(r1)
  743  000017b4  64410000	snei	r1,r2,#0
  744  000017b8  14200018	bnez	r1,L29_LF2
  745  000017bc  54000000	nop; delay slot nop
  746  000017c0  20010000	addi	r1,r0,#0
  747  000017c4  080000d8	j	L24_LF2
  748  000017c8  54000000	nop; delay slot nop
  749  000017cc  08000028	j	L30_LF2
  750  000017d0  54000000	nop; delay slot nop
  751  000017d4          	L29_LF2:
  752  000017d4  8fc10000	lw	r1,(r30)
  753  000017d8  8fc20004	lw	r2,4(r30)
  754  000017dc  90210000	lbu	r1,(r1)
  755  000017e0  90420000	lbu	r2,(r2)
  756  000017e4  00220829	sne	r1,r1,r2
  757  000017e8  1020000c	beqz	r1,L30_LF2
  758  000017ec  54000000	nop; delay slot nop
  759  000017f0  0800003c	j	L26_LF2
  760  000017f4  54000000	nop; delay slot nop
  761  000017f8          	L31_LF2:
  762  000017f8          	L30_LF2:
  763  000017f8  8fc20000	lw	r2,(r30)
  764  000017fc  20410001	addi	r1,r2,#1
  765  00001800  00011020	add	r2,r0,r1
  766  00001804  afc20000	sw	(r30),r2
  767  00001808  8fc20004	lw	r2,4(r30)
  768  0000180c  20410001	addi	r1,r2,#1
  769  00001810  00011020	add	r2,r0,r1
  770  00001814  afc20004	sw	4(r30),r2
  771  00001818          	L27_LF2:
  772  00001818  8fc2fff4	lw	r2,-12(r30)
  773  0000181c  20410001	addi	r1,r2,#1
  774  00001820  00011020	add	r2,r0,r1
  775  00001824  afc2fff4	sw	-12(r30),r2
  776  00001828  0bffff64	j	L25_LF2
  777  0000182c  54000000	nop; delay slot nop
  778  00001830          	L26_LF2:
  779  00001830  8fc1fff4	lw	r1,-12(r30)
  780  00001834  8fc20008	lw	r2,8(r30)
  781  00001838  00220828	seq	r1,r1,r2
  782  0000183c  10200018	beqz	r1,L32_LF2
  783  00001840  54000000	nop; delay slot nop
  784  00001844  20010000	addi	r1,r0,#0
  785  00001848  08000054	j	L24_LF2
  786  0000184c  54000000	nop; delay slot nop
  787  00001850  0800004c	j	L33_LF2
  788  00001854  54000000	nop; delay slot nop
  789  00001858          	L32_LF2:
  790  00001858  8fc20000	lw	r2,(r30)
  791  0000185c  90410000	lbu	r1,(r2)
  792  00001860  8fc20004	lw	r2,4(r30)
  793  00001864  90430000	lbu	r3,(r2)
  794  00001868  00230822	sub	r1,r1,r3
  795  0000186c  74220000	sgei	r2,r1,#0
  796  00001870  10400020	beqz	r2,L34_LF2
  797  00001874  54000000	nop; delay slot nop
  798  00001878  8fc10000	lw	r1,(r30)
  799  0000187c  8fc20004	lw	r2,4(r30)
  800  00001880  90210000	lbu	r1,(r1)
  801  00001884  90420000	lbu	r2,(r2)
  802  00001888  00220829	sne	r1,r1,r2
  803  0000188c  08000008	j	L35_LF2
  804  00001890  54000000	nop; delay slot nop
  805  00001894          	L34_LF2:
  806  00001894  2001ffff	addi	r1,r0,#-1
  807  00001898          	L35_LF2:
  808  00001898  08000004	j	L24_LF2
  809  0000189c  54000000	nop; delay slot nop
  810  000018a0          	L33_LF2:
  811  000018a0          	L24_LF2:
  812  000018a0  8fa20000	lw	r2,0(r29)
  813  000018a4  8fa30004	lw	r3,4(r29)
  814  000018a8  8fdffff8	lw	r31,-8(r30)
  815  000018ac  001ee820	add	r29,r0,r30
  816  000018b0  8fdefffc	lw	r30,-4(r30)
  817  000018b4  4be00000	jr	r31
  818  000018b8  54000000	nop
  819  000018bc          	.endproc _dstrncmp
  820  000018bc          	.align 2
  821  000018bc          	.proc _dstrlen
  822  000018bc          	.global _dstrlen
  823  000018bc          	_dstrlen:
  824                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  825  000018bc  afbefffc	sw	-4(r29),r30; push fp
  826  000018c0  001df020	add	r30,r0,r29; fp = sp
  827  000018c4  afbffff8	sw	-8(r29),r31; push ret addr
  828  000018c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  829  000018cc  afa20000	sw	0(r29),r2
  830  000018d0  20010000	addi	r1,r0,#0
  831  000018d4  afc1fff4	sw	-12(r30),r1
  832  000018d8          	L37_LF2:
  833  000018d8  8fc10000	lw	r1,(r30)
  834  000018dc  20220001	addi	r2,r1,#1
  835  000018e0  afc20000	sw	(r30),r2
  836  000018e4  90210000	lbu	r1,(r1)
  837  000018e8  64220000	snei	r2,r1,#0
  838  000018ec  1440000c	bnez	r2,L39_LF2
  839  000018f0  54000000	nop; delay slot nop
  840  000018f4  0800001c	j	L38_LF2
  841  000018f8  54000000	nop; delay slot nop
  842  000018fc          	L39_LF2:
  843  000018fc  8fc2fff4	lw	r2,-12(r30)
  844  00001900  20410001	addi	r1,r2,#1
  845  00001904  00011020	add	r2,r0,r1
  846  00001908  afc2fff4	sw	-12(r30),r2
  847  0000190c  0bffffc8	j	L37_LF2
  848  00001910  54000000	nop; delay slot nop
  849  00001914          	L38_LF2:
  850  00001914  8fc1fff4	lw	r1,-12(r30)
  851  00001918  08000004	j	L36_LF2
  852  0000191c  54000000	nop; delay slot nop
  853  00001920          	L36_LF2:
  854  00001920  8fa20000	lw	r2,0(r29)
  855  00001924  8fdffff8	lw	r31,-8(r30)
  856  00001928  001ee820	add	r29,r0,r30
  857  0000192c  8fdefffc	lw	r30,-4(r30)
  858  00001930  4be00000	jr	r31
  859  00001934  54000000	nop
  860  00001938          	.endproc _dstrlen
  861  00001938          	.align 2
  862  00001938          	.proc _dstrstr
  863  00001938          	.global _dstrstr
  864  00001938          	_dstrstr:
  865                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  866  00001938  afbefffc	sw	-4(r29),r30; push fp
  867  0000193c  001df020	add	r30,r0,r29; fp = sp
  868  00001940  afbffff8	sw	-8(r29),r31; push ret addr
  869  00001944  2fbd0018	subui	r29,r29,#24; alloc local storage
  870  00001948  afa20000	sw	0(r29),r2
  871  0000194c  23bdfff8	addi	r29,r29,#-8
  872  00001950  001d0820	add	r1,r0,r29
  873  00001954  8fc20004	lw	r2,4(r30)
  874  00001958  ac220000	sw	(r1),r2
  875  0000195c  0fffff5c	jal	_dstrlen
  876  00001960  54000000	nop; delay slot nop
  877  00001964  23bd0008	addi	r29,r29,#8
  878  00001968  afc1fff4	sw	-12(r30),r1
  879  0000196c          	L41_LF2:
  880  0000196c  8fc10000	lw	r1,(r30)
  881  00001970  90220000	lbu	r2,(r1)
  882  00001974  64410000	snei	r1,r2,#0
  883  00001978  1420000c	bnez	r1,L43_LF2
  884  0000197c  54000000	nop; delay slot nop
  885  00001980  08000060	j	L42_LF2
  886  00001984  54000000	nop; delay slot nop
  887  00001988          	L43_LF2:
  888  00001988  23bdfff0	addi	r29,r29,#-16
  889  0000198c  001d0820	add	r1,r0,r29
  890  00001990  8fc20000	lw	r2,(r30)
  891  00001994  ac220000	sw	(r1),r2
  892  00001998  8fc20004	lw	r2,4(r30)
  893  0000199c  ac220004	sw	4(r1),r2
  894  000019a0  8fc2fff4	lw	r2,-12(r30)
  895  000019a4  ac220008	sw	8(r1),r2
  896  000019a8  0ffffdc0	jal	_dstrncmp
  897  000019ac  54000000	nop; delay slot nop
  898  000019b0  23bd0010	addi	r29,r29,#16
  899  000019b4  64220000	snei	r2,r1,#0
  900  000019b8  14400010	bnez	r2,L44_LF2
  901  000019bc  54000000	nop; delay slot nop
  902  000019c0  8fc10000	lw	r1,(r30)
  903  000019c4  08000028	j	L40_LF2
  904  000019c8  54000000	nop; delay slot nop
  905  000019cc          	L44_LF2:
  906  000019cc  8fc20000	lw	r2,(r30)
  907  000019d0  20410001	addi	r1,r2,#1
  908  000019d4  00011020	add	r2,r0,r1
  909  000019d8  afc20000	sw	(r30),r2
  910  000019dc  0bffff8c	j	L41_LF2
  911  000019e0  54000000	nop; delay slot nop
  912  000019e4          	L42_LF2:
  913  000019e4  20010000	addi	r1,r0,#0
  914  000019e8  08000004	j	L40_LF2
  915  000019ec  54000000	nop; delay slot nop
  916  000019f0          	L40_LF2:
  917  000019f0  8fa20000	lw	r2,0(r29)
  918  000019f4  8fdffff8	lw	r31,-8(r30)
  919  000019f8  001ee820	add	r29,r0,r30
  920  000019fc  8fdefffc	lw	r30,-4(r30)
  921  00001a00  4be00000	jr	r31
  922  00001a04  54000000	nop
  923  00001a08          	.endproc _dstrstr
  924  00001a08          	.align 2
  925  00001a08          	.proc _dmindex
  926  00001a08          	.global _dmindex
  927  00001a08          	_dmindex:
  928                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  929  00001a08  afbefffc	sw	-4(r29),r30; push fp
  930  00001a0c  001df020	add	r30,r0,r29; fp = sp
  931  00001a10  afbffff8	sw	-8(r29),r31; push ret addr
  932  00001a14  2fbd0018	subui	r29,r29,#24; alloc local storage
  933  00001a18  afa20000	sw	0(r29),r2
  934  00001a1c  54000000	nop
  935  00001a20          	L46_LF2:
  936  00001a20  8fc10000	lw	r1,(r30)
  937  00001a24  90220000	lbu	r2,(r1)
  938  00001a28  64410000	snei	r1,r2,#0
  939  00001a2c  1420000c	bnez	r1,L48_LF2
  940  00001a30  54000000	nop; delay slot nop
  941  00001a34  08000070	j	L47_LF2
  942  00001a38  54000000	nop; delay slot nop
  943  00001a3c          	L48_LF2:
  944  00001a3c  8fc10004	lw	r1,4(r30)
  945  00001a40  afc1fff4	sw	-12(r30),r1
  946  00001a44          	L49_LF2:
  947  00001a44  8fc1fff4	lw	r1,-12(r30)
  948  00001a48  90220000	lbu	r2,(r1)
  949  00001a4c  64410000	snei	r1,r2,#0
  950  00001a50  1420000c	bnez	r1,L52_LF2
  951  00001a54  54000000	nop; delay slot nop
  952  00001a58  08000044	j	L50_LF2
  953  00001a5c  54000000	nop; delay slot nop
  954  00001a60          	L52_LF2:
  955  00001a60  8fc10000	lw	r1,(r30)
  956  00001a64  8fc2fff4	lw	r2,-12(r30)
  957  00001a68  90210000	lbu	r1,(r1)
  958  00001a6c  90420000	lbu	r2,(r2)
  959  00001a70  00220828	seq	r1,r1,r2
  960  00001a74  10200010	beqz	r1,L51_LF2
  961  00001a78  54000000	nop; delay slot nop
  962  00001a7c  8fc10000	lw	r1,(r30)
  963  00001a80  08000030	j	L45_LF2
  964  00001a84  54000000	nop; delay slot nop
  965  00001a88          	L53_LF2:
  966  00001a88          	L51_LF2:
  967  00001a88  8fc2fff4	lw	r2,-12(r30)
  968  00001a8c  20410001	addi	r1,r2,#1
  969  00001a90  00011020	add	r2,r0,r1
  970  00001a94  afc2fff4	sw	-12(r30),r2
  971  00001a98  0bffffa8	j	L49_LF2
  972  00001a9c  54000000	nop; delay slot nop
  973  00001aa0          	L50_LF2:
  974  00001aa0  0bffff7c	j	L46_LF2
  975  00001aa4  54000000	nop; delay slot nop
  976  00001aa8          	L47_LF2:
  977  00001aa8  20010000	addi	r1,r0,#0
  978  00001aac  08000004	j	L45_LF2
  979  00001ab0  54000000	nop; delay slot nop
  980  00001ab4          	L45_LF2:
  981  00001ab4  8fa20000	lw	r2,0(r29)
  982  00001ab8  8fdffff8	lw	r31,-8(r30)
  983  00001abc  001ee820	add	r29,r0,r30
  984  00001ac0  8fdefffc	lw	r30,-4(r30)
  985  00001ac4  4be00000	jr	r31
  986  00001ac8  54000000	nop
  987  00001acc          	.endproc _dmindex
  988  00001acc          	.align 2
  989  00001acc          	.proc _dindex
  990  00001acc          	.global _dindex
  991  00001acc          	_dindex:
  992                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  993  00001acc  afbefffc	sw	-4(r29),r30; push fp
  994  00001ad0  001df020	add	r30,r0,r29; fp = sp
  995  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
  996  00001ad8  2fbd0010	subui	r29,r29,#16; alloc local storage
  997  00001adc  afa20000	sw	0(r29),r2
  998  00001ae0  54000000	nop
  999  00001ae4          	L55_LF2:
 1000  00001ae4  8fc10000	lw	r1,(r30)
 1001  00001ae8  90220000	lbu	r2,(r1)
 1002  00001aec  64410000	snei	r1,r2,#0
 1003  00001af0  1420000c	bnez	r1,L57_LF2
 1004  00001af4  54000000	nop; delay slot nop
 1005  00001af8  08000040	j	L56_LF2
 1006  00001afc  54000000	nop; delay slot nop
 1007  00001b00          	L57_LF2:
 1008  00001b00  8fc10000	lw	r1,(r30)
 1009  00001b04  90220000	lbu	r2,(r1)
 1010  00001b08  8fc10004	lw	r1,4(r30)
 1011  00001b0c  00411028	seq	r2,r2,r1
 1012  00001b10  10400010	beqz	r2,L58_LF2
 1013  00001b14  54000000	nop; delay slot nop
 1014  00001b18  8fc10000	lw	r1,(r30)
 1015  00001b1c  08000028	j	L54_LF2
 1016  00001b20  54000000	nop; delay slot nop
 1017  00001b24          	L58_LF2:
 1018  00001b24  8fc20000	lw	r2,(r30)
 1019  00001b28  20410001	addi	r1,r2,#1
 1020  00001b2c  00011020	add	r2,r0,r1
 1021  00001b30  afc20000	sw	(r30),r2
 1022  00001b34  0bffffac	j	L55_LF2
 1023  00001b38  54000000	nop; delay slot nop
 1024  00001b3c          	L56_LF2:
 1025  00001b3c  20010000	addi	r1,r0,#0
 1026  00001b40  08000004	j	L54_LF2
 1027  00001b44  54000000	nop; delay slot nop
 1028  00001b48          	L54_LF2:
 1029  00001b48  8fa20000	lw	r2,0(r29)
 1030  00001b4c  8fdffff8	lw	r31,-8(r30)
 1031  00001b50  001ee820	add	r29,r0,r30
 1032  00001b54  8fdefffc	lw	r30,-4(r30)
 1033  00001b58  4be00000	jr	r31
 1034  00001b5c  54000000	nop
 1035  00001b60          	.endproc _dindex
 1036  00001b60          	.align 2
 1037  00001b60          	.proc _ditoa
 1038  00001b60          	.global _ditoa
 1039  00001b60          	_ditoa:
 1040                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1041  00001b60  afbefffc	sw	-4(r29),r30; push fp
 1042  00001b64  001df020	add	r30,r0,r29; fp = sp
 1043  00001b68  afbffff8	sw	-8(r29),r31; push ret addr
 1044  00001b6c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1045  00001b70  afa20000	sw	0(r29),r2
 1046  00001b74  afa30004	sw	4(r29),r3
 1047  00001b78  8fc10000	lw	r1,(r30)
 1048  00001b7c  68220000	slti	r2,r1,#0
 1049  00001b80  1040002c	beqz	r2,L60_LF2
 1050  00001b84  54000000	nop; delay slot nop
 1051  00001b88  8fc10004	lw	r1,4(r30)
 1052  00001b8c  20220001	addi	r2,r1,#1
 1053  00001b90  afc20004	sw	4(r30),r2
 1054  00001b94  2002002d	addi	r2,r0,(#0x2d)&0xff
 1055  00001b98  a0220000	sb	(r1),r2
 1056  00001b9c  8fc10000	lw	r1,(r30)
 1057  00001ba0  00011022	sub	r2,r0,r1
 1058  00001ba4  afc20000	sw	(r30),r2
 1059  00001ba8  08000118	j	L61_LF2
 1060  00001bac  54000000	nop; delay slot nop
 1061  00001bb0          	L60_LF2:
 1062  00001bb0  8fc10000	lw	r1,(r30)
 1063  00001bb4  64220000	snei	r2,r1,#0
 1064  00001bb8  14400020	bnez	r2,L62_LF2
 1065  00001bbc  54000000	nop; delay slot nop
 1066  00001bc0  8fc10004	lw	r1,4(r30)
 1067  00001bc4  20220001	addi	r2,r1,#1
 1068  00001bc8  afc20004	sw	4(r30),r2
 1069  00001bcc  20020030	addi	r2,r0,(#0x30)&0xff
 1070  00001bd0  a0220000	sb	(r1),r2
 1071  00001bd4  080000ec	j	L61_LF2
 1072  00001bd8  54000000	nop; delay slot nop
 1073  00001bdc          	L62_LF2:
 1074  00001bdc  20010001	addi	r1,r0,#1
 1075  00001be0  afc1fff4	sw	-12(r30),r1
 1076  00001be4          	L64_LF2:
 1077  00001be4  8fc1fff4	lw	r1,-12(r30)
 1078  00001be8  8fc20000	lw	r2,(r30)
 1079  00001bec  0022082c	sle	r1,r1,r2
 1080  00001bf0  1420000c	bnez	r1,L66_LF2
 1081  00001bf4  54000000	nop; delay slot nop
 1082  00001bf8  08000024	j	L65_LF2
 1083  00001bfc  54000000	nop; delay slot nop
 1084  00001c00          	L67_LF2:
 1085  00001c00          	L66_LF2:
 1086  00001c00  8fc1fff4	lw	r1,-12(r30)
 1087  00001c04  00011820	add	r3,r0,r1
 1088  00001c08  50620002	slli	r2,r3,#0x2
 1089  00001c0c  00411020	add	r2,r2,r1
 1090  00001c10  50410001	slli	r1,r2,#0x1
 1091  00001c14  afc1fff4	sw	-12(r30),r1
 1092  00001c18  0bffffc8	j	L64_LF2
 1093  00001c1c  54000000	nop; delay slot nop
 1094  00001c20          	L65_LF2:
 1095  00001c20  54000000	nop
 1096  00001c24          	L68_LF2:
 1097  00001c24  8fc1fff4	lw	r1,-12(r30)
 1098  00001c28  2002000a	addi	r2,r0,#10
 1099  00001c2c  00200035	movi2fp	f0,r1
 1100  00001c30  00400835	movi2fp	f1,r2
 1101  00001c34  0401000f	div	f0,f0,f1
 1102  00001c38  00000834	movfp2i	r1,f0
 1103  00001c3c  afc1fff4	sw	-12(r30),r1
 1104  00001c40  8fc10004	lw	r1,4(r30)
 1105  00001c44  20220001	addi	r2,r1,#1
 1106  00001c48  afc20004	sw	4(r30),r2
 1107  00001c4c  8fc20000	lw	r2,(r30)
 1108  00001c50  8fc3fff4	lw	r3,-12(r30)
 1109  00001c54  00400035	movi2fp	f0,r2
 1110  00001c58  00600835	movi2fp	f1,r3
 1111  00001c5c  0401000f	div	f0,f0,f1
 1112  00001c60  00001034	movfp2i	r2,f0
 1113  00001c64  00021820	add	r3,r0,r2
 1114  00001c68  20620030	addi	r2,r3,#48
 1115  00001c6c  a0220000	sb	(r1),r2
 1116  00001c70  8fc10000	lw	r1,(r30)
 1117  00001c74  8fc3fff4	lw	r3,-12(r30)
 1118  00001c78  00200035	movi2fp	f0,r1
 1119  00001c7c  00600835	movi2fp	f1,r3
 1120  00001c80  0401000f	div	f0,f0,f1
 1121  00001c84  00001034	movfp2i	r2,f0
 1122  00001c88  8fc3fff4	lw	r3,-12(r30)
 1123  00001c8c  00400035	movi2fp	f0,r2
 1124  00001c90  00600835	movi2fp	f1,r3
 1125  00001c94  0401000e	mult	f0,f0,f1
 1126  00001c98  00001034	movfp2i	r2,f0
 1127  00001c9c  00220822	sub	r1,r1,r2
 1128  00001ca0  afc10000	sw	(r30),r1
 1129  00001ca4          	L70_LF2:
 1130  00001ca4  8fc1fff4	lw	r1,-12(r30)
 1131  00001ca8  6c220001	sgti	r2,r1,#1
 1132  00001cac  1440000c	bnez	r2,L71_LF2
 1133  00001cb0  54000000	nop; delay slot nop
 1134  00001cb4  0800000c	j	L61_LF2
 1135  00001cb8  54000000	nop; delay slot nop
 1136  00001cbc          	L71_LF2:
 1137  00001cbc  0bffff64	j	L68_LF2
 1138  00001cc0  54000000	nop; delay slot nop
 1139  00001cc4          	L69_LF2:
 1140  00001cc4          	L63_LF2:
 1141  00001cc4          	L61_LF2:
 1142  00001cc4  8fc10004	lw	r1,4(r30)
 1143  00001cc8  20020000	addi	r2,r0,(#0x0)&0xff
 1144  00001ccc  a0220000	sb	(r1),r2
 1145  00001cd0          	L59_LF2:
 1146  00001cd0  8fa20000	lw	r2,0(r29)
 1147  00001cd4  8fa30004	lw	r3,4(r29)
 1148  00001cd8  8fdffff8	lw	r31,-8(r30)
 1149  00001cdc  001ee820	add	r29,r0,r30
 1150  00001ce0  8fdefffc	lw	r30,-4(r30)
 1151  00001ce4  4be00000	jr	r31
 1152  00001ce8  54000000	nop
 1153  00001cec          	.endproc _ditoa
 1154  00001cec          	.align 2
 1155  00001cec          	.proc _dstrtol
 1156  00001cec          	.global _dstrtol
 1157  00001cec          	_dstrtol:
 1158                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1159  00001cec  afbefffc	sw	-4(r29),r30; push fp
 1160  00001cf0  001df020	add	r30,r0,r29; fp = sp
 1161  00001cf4  afbffff8	sw	-8(r29),r31; push ret addr
 1162  00001cf8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1163  00001cfc  afa20000	sw	0(r29),r2
 1164  00001d00  20010000	addi	r1,r0,#0
 1165  00001d04  afc1fff4	sw	-12(r30),r1
 1166  00001d08          	L73_LF2:
 1167  00001d08  8fc10000	lw	r1,(r30)
 1168  00001d0c  90220000	lbu	r2,(r1)
 1169  00001d10  60410020	seqi	r1,r2,#32
 1170  00001d14  14200034	bnez	r1,L75_LF2
 1171  00001d18  54000000	nop; delay slot nop
 1172  00001d1c  8fc10000	lw	r1,(r30)
 1173  00001d20  90220000	lbu	r2,(r1)
 1174  00001d24  60410009	seqi	r1,r2,#9
 1175  00001d28  14200020	bnez	r1,L75_LF2
 1176  00001d2c  54000000	nop; delay slot nop
 1177  00001d30  8fc10000	lw	r1,(r30)
 1178  00001d34  90220000	lbu	r2,(r1)
 1179  00001d38  6041000a	seqi	r1,r2,#10
 1180  00001d3c  1420000c	bnez	r1,L75_LF2
 1181  00001d40  54000000	nop; delay slot nop
 1182  00001d44  0800001c	j	L74_LF2
 1183  00001d48  54000000	nop; delay slot nop
 1184  00001d4c          	L75_LF2:
 1185  00001d4c  8fc20000	lw	r2,(r30)
 1186  00001d50  20410001	addi	r1,r2,#1
 1187  00001d54  00011020	add	r2,r0,r1
 1188  00001d58  afc20000	sw	(r30),r2
 1189  00001d5c  0bffffa8	j	L73_LF2
 1190  00001d60  54000000	nop; delay slot nop
 1191  00001d64          	L74_LF2:
 1192  00001d64  8fc10004	lw	r1,4(r30)
 1193  00001d68  64220000	snei	r2,r1,#0
 1194  00001d6c  10400010	beqz	r2,L76_LF2
 1195  00001d70  54000000	nop; delay slot nop
 1196  00001d74  8fc10004	lw	r1,4(r30)
 1197  00001d78  8fc20000	lw	r2,(r30)
 1198  00001d7c  ac220000	sw	(r1),r2
 1199  00001d80          	L76_LF2:
 1200  00001d80  8fc10000	lw	r1,(r30)
 1201  00001d84  90220000	lbu	r2,(r1)
 1202  00001d88  64410000	snei	r1,r2,#0
 1203  00001d8c  14200010	bnez	r1,L77_LF2
 1204  00001d90  54000000	nop; delay slot nop
 1205  00001d94  8fc1fff4	lw	r1,-12(r30)
 1206  00001d98  08000294	j	L72_LF2
 1207  00001d9c  54000000	nop; delay slot nop
 1208  00001da0          	L77_LF2:
 1209  00001da0  8fc10000	lw	r1,(r30)
 1210  00001da4  90220000	lbu	r2,(r1)
 1211  00001da8  6041002d	seqi	r1,r2,#45
 1212  00001dac  10200024	beqz	r1,L78_LF2
 1213  00001db0  54000000	nop; delay slot nop
 1214  00001db4  2001ffff	addi	r1,r0,#-1
 1215  00001db8  afc1ffec	sw	-20(r30),r1
 1216  00001dbc  8fc20000	lw	r2,(r30)
 1217  00001dc0  20410001	addi	r1,r2,#1
 1218  00001dc4  00011020	add	r2,r0,r1
 1219  00001dc8  afc20000	sw	(r30),r2
 1220  00001dcc  0800000c	j	L79_LF2
 1221  00001dd0  54000000	nop; delay slot nop
 1222  00001dd4          	L78_LF2:
 1223  00001dd4  20010001	addi	r1,r0,#1
 1224  00001dd8  afc1ffec	sw	-20(r30),r1
 1225  00001ddc          	L79_LF2:
 1226  00001ddc  8fc10008	lw	r1,8(r30)
 1227  00001de0  64220000	snei	r2,r1,#0
 1228  00001de4  14400090	bnez	r2,L80_LF2
 1229  00001de8  54000000	nop; delay slot nop
 1230  00001dec  8fc10000	lw	r1,(r30)
 1231  00001df0  90220000	lbu	r2,(r1)
 1232  00001df4  60410030	seqi	r1,r2,#48
 1233  00001df8  10200074	beqz	r1,L81_LF2
 1234  00001dfc  54000000	nop; delay slot nop
 1235  00001e00  8fc20000	lw	r2,(r30)
 1236  00001e04  20410001	addi	r1,r2,#1
 1237  00001e08  00011020	add	r2,r0,r1
 1238  00001e0c  afc20000	sw	(r30),r2
 1239  00001e10  8fc10000	lw	r1,(r30)
 1240  00001e14  90220000	lbu	r2,(r1)
 1241  00001e18  60410078	seqi	r1,r2,#120
 1242  00001e1c  14200020	bnez	r1,L83_LF2
 1243  00001e20  54000000	nop; delay slot nop
 1244  00001e24  8fc10000	lw	r1,(r30)
 1245  00001e28  90220000	lbu	r2,(r1)
 1246  00001e2c  60410058	seqi	r1,r2,#88
 1247  00001e30  1420000c	bnez	r1,L83_LF2
 1248  00001e34  54000000	nop; delay slot nop
 1249  00001e38  08000024	j	L82_LF2
 1250  00001e3c  54000000	nop; delay slot nop
 1251  00001e40          	L83_LF2:
 1252  00001e40  20010010	addi	r1,r0,#16
 1253  00001e44  afc10008	sw	8(r30),r1
 1254  00001e48  8fc20000	lw	r2,(r30)
 1255  00001e4c  20410001	addi	r1,r2,#1
 1256  00001e50  00011020	add	r2,r0,r1
 1257  00001e54  afc20000	sw	(r30),r2
 1258  00001e58  0800000c	j	L84_LF2
 1259  00001e5c  54000000	nop; delay slot nop
 1260  00001e60          	L82_LF2:
 1261  00001e60  20010008	addi	r1,r0,#8
 1262  00001e64  afc10008	sw	8(r30),r1
 1263  00001e68          	L84_LF2:
 1264  00001e68  0800000c	j	L80_LF2
 1265  00001e6c  54000000	nop; delay slot nop
 1266  00001e70          	L81_LF2:
 1267  00001e70  2001000a	addi	r1,r0,#10
 1268  00001e74  afc10008	sw	8(r30),r1
 1269  00001e78          	L85_LF2:
 1270  00001e78          	L80_LF2:
 1271  00001e78  8fc10008	lw	r1,8(r30)
 1272  00001e7c  70220000	slei	r2,r1,#0
 1273  00001e80  1440001c	bnez	r2,L87_LF2
 1274  00001e84  54000000	nop; delay slot nop
 1275  00001e88  8fc10008	lw	r1,8(r30)
 1276  00001e8c  6c220010	sgti	r2,r1,#16
 1277  00001e90  1440000c	bnez	r2,L87_LF2
 1278  00001e94  54000000	nop; delay slot nop
 1279  00001e98  08000010	j	L86_LF2
 1280  00001e9c  54000000	nop; delay slot nop
 1281  00001ea0          	L87_LF2:
 1282  00001ea0  8fc1fff4	lw	r1,-12(r30)
 1283  00001ea4  08000188	j	L72_LF2
 1284  00001ea8  54000000	nop; delay slot nop
 1285  00001eac          	L86_LF2:
 1286  00001eac  54000000	nop
 1287  00001eb0          	L88_LF2:
 1288  00001eb0  8fc10000	lw	r1,(r30)
 1289  00001eb4  90220000	lbu	r2,(r1)
 1290  00001eb8  6c41002f	sgtui	r1,r2,#47
 1291  00001ebc  10200030	beqz	r1,L91_LF2
 1292  00001ec0  54000000	nop; delay slot nop
 1293  00001ec4  8fc10000	lw	r1,(r30)
 1294  00001ec8  90220000	lbu	r2,(r1)
 1295  00001ecc  70410039	sleui	r1,r2,#57
 1296  00001ed0  1020001c	beqz	r1,L91_LF2
 1297  00001ed4  54000000	nop; delay slot nop
 1298  00001ed8  8fc10000	lw	r1,(r30)
 1299  00001edc  90220000	lbu	r2,(r1)
 1300  00001ee0  2041ffd0	addi	r1,r2,#-48
 1301  00001ee4  afc1fff0	sw	-16(r30),r1
 1302  00001ee8  0800008c	j	L92_LF2
 1303  00001eec  54000000	nop; delay slot nop
 1304  00001ef0          	L91_LF2:
 1305  00001ef0  8fc10000	lw	r1,(r30)
 1306  00001ef4  90220000	lbu	r2,(r1)
 1307  00001ef8  6c410060	sgtui	r1,r2,#96
 1308  00001efc  10200030	beqz	r1,L93_LF2
 1309  00001f00  54000000	nop; delay slot nop
 1310  00001f04  8fc10000	lw	r1,(r30)
 1311  00001f08  90220000	lbu	r2,(r1)
 1312  00001f0c  7041007a	sleui	r1,r2,#122
 1313  00001f10  1020001c	beqz	r1,L93_LF2
 1314  00001f14  54000000	nop; delay slot nop
 1315  00001f18  8fc10000	lw	r1,(r30)
 1316  00001f1c  90220000	lbu	r2,(r1)
 1317  00001f20  2041ffa9	addi	r1,r2,#-87
 1318  00001f24  afc1fff0	sw	-16(r30),r1
 1319  00001f28  0800004c	j	L92_LF2
 1320  00001f2c  54000000	nop; delay slot nop
 1321  00001f30          	L93_LF2:
 1322  00001f30  8fc10000	lw	r1,(r30)
 1323  00001f34  90220000	lbu	r2,(r1)
 1324  00001f38  6c410040	sgtui	r1,r2,#64
 1325  00001f3c  10200030	beqz	r1,L95_LF2
 1326  00001f40  54000000	nop; delay slot nop
 1327  00001f44  8fc10000	lw	r1,(r30)
 1328  00001f48  90220000	lbu	r2,(r1)
 1329  00001f4c  7041005a	sleui	r1,r2,#90
 1330  00001f50  1020001c	beqz	r1,L95_LF2
 1331  00001f54  54000000	nop; delay slot nop
 1332  00001f58  8fc10000	lw	r1,(r30)
 1333  00001f5c  90220000	lbu	r2,(r1)
 1334  00001f60  2041ffc9	addi	r1,r2,#-55
 1335  00001f64  afc1fff0	sw	-16(r30),r1
 1336  00001f68  0800000c	j	L92_LF2
 1337  00001f6c  54000000	nop; delay slot nop
 1338  00001f70          	L95_LF2:
 1339  00001f70  200103e8	addi	r1,r0,#1000
 1340  00001f74  afc1fff0	sw	-16(r30),r1
 1341  00001f78          	L96_LF2:
 1342  00001f78          	L94_LF2:
 1343  00001f78          	L92_LF2:
 1344  00001f78  8fc1fff0	lw	r1,-16(r30)
 1345  00001f7c  8fc20008	lw	r2,8(r30)
 1346  00001f80  0022082a	slt	r1,r1,r2
 1347  00001f84  10200040	beqz	r1,L90_LF2
 1348  00001f88  54000000	nop; delay slot nop
 1349  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1350  00001f90  8fc20008	lw	r2,8(r30)
 1351  00001f94  00200035	movi2fp	f0,r1
 1352  00001f98  00400835	movi2fp	f1,r2
 1353  00001f9c  0401000e	mult	f0,f0,f1
 1354  00001fa0  00000834	movfp2i	r1,f0
 1355  00001fa4  afc1fff4	sw	-12(r30),r1
 1356  00001fa8  8fc1fff4	lw	r1,-12(r30)
 1357  00001fac  8fc2fff0	lw	r2,-16(r30)
 1358  00001fb0  00220820	add	r1,r1,r2
 1359  00001fb4  afc1fff4	sw	-12(r30),r1
 1360  00001fb8  8fc20000	lw	r2,(r30)
 1361  00001fbc  20410001	addi	r1,r2,#1
 1362  00001fc0  00011020	add	r2,r0,r1
 1363  00001fc4  afc20000	sw	(r30),r2
 1364  00001fc8          	L97_LF2:
 1365  00001fc8          	L90_LF2:
 1366  00001fc8  8fc1fff0	lw	r1,-16(r30)
 1367  00001fcc  8fc20008	lw	r2,8(r30)
 1368  00001fd0  0022082a	slt	r1,r1,r2
 1369  00001fd4  1420000c	bnez	r1,L98_LF2
 1370  00001fd8  54000000	nop; delay slot nop
 1371  00001fdc  0800000c	j	L89_LF2
 1372  00001fe0  54000000	nop; delay slot nop
 1373  00001fe4          	L98_LF2:
 1374  00001fe4  0bfffec8	j	L88_LF2
 1375  00001fe8  54000000	nop; delay slot nop
 1376  00001fec          	L89_LF2:
 1377  00001fec  8fc10004	lw	r1,4(r30)
 1378  00001ff0  64220000	snei	r2,r1,#0
 1379  00001ff4  10400010	beqz	r2,L99_LF2
 1380  00001ff8  54000000	nop; delay slot nop
 1381  00001ffc  8fc10004	lw	r1,4(r30)
 1382  00002000  8fc20000	lw	r2,(r30)
 1383  00002004  ac220000	sw	(r1),r2
 1384  00002008          	L99_LF2:
 1385  00002008  8fc1fff4	lw	r1,-12(r30)
 1386  0000200c  8fc2ffec	lw	r2,-20(r30)
 1387  00002010  00200035	movi2fp	f0,r1
 1388  00002014  00400835	movi2fp	f1,r2
 1389  00002018  0401000e	mult	f0,f0,f1
 1390  0000201c  00000834	movfp2i	r1,f0
 1391  00002020  afc1fff4	sw	-12(r30),r1
 1392  00002024  8fc1fff4	lw	r1,-12(r30)
 1393  00002028  08000004	j	L72_LF2
 1394  0000202c  54000000	nop; delay slot nop
 1395  00002030          	L72_LF2:
 1396  00002030  8fa20000	lw	r2,0(r29)
 1397  00002034  8fdffff8	lw	r31,-8(r30)
 1398  00002038  001ee820	add	r29,r0,r30
 1399  0000203c  8fdefffc	lw	r30,-4(r30)
 1400  00002040  4be00000	jr	r31
 1401  00002044  54000000	nop
 1402  00002048          	.endproc _dstrtol
 1403  00002048          	.align 2
 1404  00002048          	.proc _bcopy
 1405  00002048          	.global _bcopy
 1406  00002048          	_bcopy:
 1407                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1408  00002048  afbefffc	sw	-4(r29),r30; push fp
 1409  0000204c  001df020	add	r30,r0,r29; fp = sp
 1410  00002050  afbffff8	sw	-8(r29),r31; push ret addr
 1411  00002054  2fbd0010	subui	r29,r29,#16; alloc local storage
 1412  00002058  afa20000	sw	0(r29),r2
 1413  0000205c  afa30004	sw	4(r29),r3
 1414  00002060  54000000	nop
 1415  00002064          	L101_LF2:
 1416  00002064  8fc10008	lw	r1,8(r30)
 1417  00002068  2022ffff	addi	r2,r1,#-1
 1418  0000206c  afc20008	sw	8(r30),r2
 1419  00002070  6c210000	sgti	r1,r1,#0
 1420  00002074  1420000c	bnez	r1,L103_LF2
 1421  00002078  54000000	nop; delay slot nop
 1422  0000207c  0800002c	j	L102_LF2
 1423  00002080  54000000	nop; delay slot nop
 1424  00002084          	L103_LF2:
 1425  00002084  8fc10004	lw	r1,4(r30)
 1426  00002088  20220001	addi	r2,r1,#1
 1427  0000208c  afc20004	sw	4(r30),r2
 1428  00002090  8fc20000	lw	r2,(r30)
 1429  00002094  20430001	addi	r3,r2,#1
 1430  00002098  afc30000	sw	(r30),r3
 1431  0000209c  80420000	lb	r2,(r2)
 1432  000020a0  a0220000	sb	(r1),r2
 1433  000020a4  0bffffbc	j	L101_LF2
 1434  000020a8  54000000	nop; delay slot nop
 1435  000020ac          	L102_LF2:
 1436  000020ac          	L100_LF2:
 1437  000020ac  8fa20000	lw	r2,0(r29)
 1438  000020b0  8fa30004	lw	r3,4(r29)
 1439  000020b4  8fdffff8	lw	r31,-8(r30)
 1440  000020b8  001ee820	add	r29,r0,r30
 1441  000020bc  8fdefffc	lw	r30,-4(r30)
 1442  000020c0  4be00000	jr	r31
 1443  000020c4  54000000	nop
 1444  000020c8          	.endproc _bcopy
 1445  000020c8          	.align 2
 1446  000020c8          	.proc _bzero
 1447  000020c8          	.global _bzero
 1448  000020c8          	_bzero:
 1449                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1450  000020c8  afbefffc	sw	-4(r29),r30; push fp
 1451  000020cc  001df020	add	r30,r0,r29; fp = sp
 1452  000020d0  afbffff8	sw	-8(r29),r31; push ret addr
 1453  000020d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1454  000020d8  afa20000	sw	0(r29),r2
 1455  000020dc  54000000	nop
 1456  000020e0          	L105_LF2:
 1457  000020e0  8fc10004	lw	r1,4(r30)
 1458  000020e4  2022ffff	addi	r2,r1,#-1
 1459  000020e8  afc20004	sw	4(r30),r2
 1460  000020ec  6c210000	sgti	r1,r1,#0
 1461  000020f0  1420000c	bnez	r1,L107_LF2
 1462  000020f4  54000000	nop; delay slot nop
 1463  000020f8  08000020	j	L106_LF2
 1464  000020fc  54000000	nop; delay slot nop
 1465  00002100          	L107_LF2:
 1466  00002100  8fc10000	lw	r1,(r30)
 1467  00002104  20220001	addi	r2,r1,#1
 1468  00002108  afc20000	sw	(r30),r2
 1469  0000210c  20020000	addi	r2,r0,(#0x0)&0xff
 1470  00002110  a0220000	sb	(r1),r2
 1471  00002114  0bffffc8	j	L105_LF2
 1472  00002118  54000000	nop; delay slot nop
 1473  0000211c          	L106_LF2:
 1474  0000211c          	L104_LF2:
 1475  0000211c  8fa20000	lw	r2,0(r29)
 1476  00002120  8fdffff8	lw	r31,-8(r30)
 1477  00002124  001ee820	add	r29,r0,r30
 1478  00002128  8fdefffc	lw	r30,-4(r30)
 1479  0000212c  4be00000	jr	r31
 1480  00002130  54000000	nop
 1481  00002134          	.endproc _bzero
 1482  00002134          	.align 2
 1483  00002134          	.proc _min
 1484  00002134          	.global _min
 1485  00002134          	_min:
 1486                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1487  00002134  afbefffc	sw	-4(r29),r30; push fp
 1488  00002138  001df020	add	r30,r0,r29; fp = sp
 1489  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1490  00002140  2fbd0010	subui	r29,r29,#16; alloc local storage
 1491  00002144  afa20000	sw	0(r29),r2
 1492  00002148  afa30004	sw	4(r29),r3
 1493  0000214c  8fc10000	lw	r1,(r30)
 1494  00002150  8fc20004	lw	r2,4(r30)
 1495  00002154  0022182c	sle	r3,r1,r2
 1496  00002158  14600008	bnez	r3,L109_LF2
 1497  0000215c  54000000	nop; delay slot nop
 1498  00002160  8fc10004	lw	r1,4(r30)
 1499  00002164          	L109_LF2:
 1500  00002164  08000004	j	L108_LF2
 1501  00002168  54000000	nop; delay slot nop
 1502  0000216c          	L108_LF2:
 1503  0000216c  8fa20000	lw	r2,0(r29)
 1504  00002170  8fa30004	lw	r3,4(r29)
 1505  00002174  8fdffff8	lw	r31,-8(r30)
 1506  00002178  001ee820	add	r29,r0,r30
 1507  0000217c  8fdefffc	lw	r30,-4(r30)
 1508  00002180  4be00000	jr	r31
 1509  00002184  54000000	nop
 1510  00002188          	.endproc _min
 1511                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1512                      ;;;
 1513                      ;;; Most of the traps are called in files from libtraps.
 1516  00002188          	.align 2
 1517  00002188          	.proc _exit
 1518  00002188          	.global _exit
 1519  00002188          	_exit:
 1520  00002188  44000300	trap	#0x300
 1521  0000218c  4be00000	jr	r31
 1522  00002190  54000000	nop
 1523  00002194          	.endproc _exit
 1525                      ; for the benefit of gcc.
 1526  00002194          	.proc ___main
 1527  00002194          	.global ___main
 1528  00002194          	___main:
 1529  00002194  4be00000	jr	r31
 1530  00002198  54000000	nop
 1531  0000219c          	.endproc ___main
 1532  0000219c          	.text
 1533  0000219c          	.global _etext
 1534  0000219c          	_etext:
 1535  0000219c          	.align 3
 1536  000021a0          	.data
 1537  000030c4          	.global _edata
 1538  000030c4          	_edata:
